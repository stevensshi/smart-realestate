node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3190
          }
        }
        tensor_content: "\000\000\000@\000\000@@\000\000\200@\000\000\240@\000\000\300@\000\000\000\000\000\000\200?\000\000\200@\000\000\200?\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000\000\000\000\000\240@\000\000\200@\000\000\200@\000\000@@\000\000\240@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000\240@\000\000@@\000\000@@\000\000\000@\000\000\200?\000\000\000@\000\000 A\000\000\200?\000\000@@\000\000\000\000\000\000\200@\000\000@@\000\000\000\000\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\240@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200@\000\000\200@\000\000\200?\000\000\240@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000\000@\000\000\240@\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\000\000\000\000\200@\000\000@@\000\000\000@\000\000\240@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\000\000\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000\000\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\240@\000\000\240@\000\000@@\000\000\240@\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\000\000\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000\000\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\240@\000\000\200@\000\000\020A\000\000\200@\000\000\200@\000\000\200@\000\000\200@\000\000\000@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\240@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000\000\000\000\000@\000\000\240@\000\000\300@\000\000\200@\000\000\000\000\000\000\340@\000\000\000@\000\000\200@\000\000\200@\000\000@@\000\000\000\000\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\000\000\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000\200@\000\000@@\000\000\000@\000\000\200@\000\000\000A\000\000\000@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\000\000\000\000\000@\000\000@@\000\000@@\000\000\240@\000\000@@\000\000\240@\000\000\000\000\000\000\240@\000\000\000@\000\000@@\000\000\000@\000\000\340@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000\240@\000\000\300@\000\000\200@\000\000\200@\000\000\000\000\000\000\000@\000\000@@\000\000\200@\000\000\300@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\000A\000\000@@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\000\000\000\000\000@\000\000\240@\000\000\000@\000\000\200@\000\000@@\000\000\240@\000\000\200@\000\000\240@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000\200@\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000\200@\000\000\000\000\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\240@\000\000\200?\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000\200@\000\000\200@\000\000\200?\000\000\200@\000\000\000@\000\000\240@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\200?\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\000\000\000\000\240@\000\000\000@\000\000\000@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000\000\000\000\000\000\000\000\000\200?\000\000@@\000\000@@\000\000\200@\000\000\240@\000\000\000\000\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000@A\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000\000\000\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\000\000\000\000\200@\000\000\240@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000\200@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\020A\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000\240@\000\000\000@\000\000\200@\000\000\000@\000\000\200@\000\000\240@\000\000\200?\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000\000\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\240@\000\000\240@\000\000\200@\000\000\000@\000\000\000@\000\000\240@\000\000@@\000\000@@\000\000\240@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\000\000\000\000\200@\000\000\000@\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000\240@\000\000\000@\000\000\000@\000\000\200@\000\000\240@\000\000@@\000\000\000\000\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000\200@\000\000\200@\000\000\200?\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000\200@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000\240@\000\000\200@\000\000\000@\000\000\200@\000\000\200@\000\000\200@\000\000\000@\000\000\200@\000\000\300@\000\000\200?\000\000@@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\200?\000\000\240@\000\000\240@\000\000@@\000\000@@\000\000\340@\000\000\200@\000\000@@\000\000\240@\000\000@@\000\000\200@\000\000\200@\000\000\200@\000\000\000\000\000\000\000@\000\000\200?\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000\300@\000\000\200@\000\000\000@\000\000\200?\000\000@@\000\000\200?\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\240@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\240@\000\000\200@\000\000@@\000\000\000@\000\000\240@\000\000\000\000\000\000@@\000\000\200?\000\000@@\000\000\200@\000\000@@\000\000\200?\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\200?\000\000\200@\000\000\200@\000\000\240@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000\000\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\240@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000\000\000\000@@\000\000\000\000\000\000\000@\000\000@@\000\000@@\000\000\200?\000\000@@\000\000\000@\000\000\200@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\200?\000\000\200@\000\000\000@\000\000\200@\000\000@@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\240@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\240@\000\000\200@\000\000\240@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\200?\000\000\240@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\240@\000\000\240@\000\000\240@\000\000\200@\000\000\200@\000\000\000\000\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\020A\000\000\240@\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\240@\000\000\240@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000\200?\000\000\200@\000\000@@\000\000@@\000\000\240@\000\000\200@\000\000\200@\000\000\200@\000\000\200@\000\000\340@\000\000@@\000\000\000@\000\000\200?\000\000\200@\000\000\200?\000\000\000\000\000\000\340@\000\000\000@\000\000\200@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000\200?\000\000\000\000\000\000\000@\000\000@@\000\000@@\000\000@A\000\000\000@\000\000\200?\000\000\240@\000\000\240@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000\000@\000\000\240@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\200?\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\240@\000\000\240@\000\000\300@\000\000\240@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000\300@\000\000\000\000\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\200@\000\000@@\000\000\000\000\000\000@@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\000\000\000\000\000@\000\000@@\000\000\340@\000\000\300@\000\000\000\000\000\000\200?\000\000\000\000\000\000@@\000\000\300@\000\000\200?\000\000\200@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\200@\000\000\240@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000\000\000\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000 A\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\240@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000\000\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\240@\000\000\000\000\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\000\000\000\000\200@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\240@\000\000\000@\000\000@@\000\000\000\000\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000\000\000\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000\000\000\000\000\200@\000\000\000@\000\000@@\000\000\000@\000\000\000\000\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\300@\000\000\240@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\000@\000\000\340@\000\000\200@\000\000\240@\000\000\200@\000\000\200@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\240@\000\000\200@\000\000\000\000\000\000@@\000\000\240@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000\200?\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000\200@\000\000\200?\000\000@@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\240@\000\000@@\000\000\200@\000\000@@\000\000\240@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\020A\000\000@@\000\000\240@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000\240@\000\000\300@\000\000@@\000\000\340@\000\000\200?\000\000@@\000\000\200@\000\000\200@\000\000\200?\000\000\200@\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\200@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000\000@\000\000\300@\000\000\000@\000\000\300@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\000\000\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000\200@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\300@\000\000\200@\000\000@@\000\000 A\000\000\200@\000\000\000@\000\000\200?\000\000\240@\000\000\200@\000\000\000@\000\000@@\000\000\240@\000\000\200?\000\000\200@\000\000\200@\000\000\000@\000\000\240@\000\000\000@\000\000\200?\000\000\200@\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000\240@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000\240@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000\240@\000\000\200@\000\000@@\000\000\000\000\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000\020A\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\000\000\000\000@@\000\000\200@\000\000\240@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200@\000\000\000@\000\000\200?\000\000\240@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\240@\000\000@@\000\000\200@\000\000\340@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\200?\000\000\200@\000\000@@\000\000\240@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\240@\000\000\200@\000\000\200@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\240@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\0000A\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\240@\000\000\000@\000\000\200@\000\000@@\000\000\240@\000\000@@\000\000\200@\000\000\000@\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\240@\000\000\000A\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\200?\000\000\200@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\240@\000\000@@\000\000\200@\000\000\300@\000\000\000\000\000\000\200@\000\000\240@\000\000\240@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000\240@\000\000\200@\000\000\000@\000\000@@\000\000\300@\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000\200@\000\000\200@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000@@\000\000\200?\000\000\000@\000\000\240@\000\000\240@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\000\000\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\200@\000\000\000@\000\000\240@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000\200?\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000\200@\000\000\200@\000\000\200@\000\000\200@\000\000\200@\000\000\000@\000\000@@\000\000\200?\000\000\200@\000\000@@\000\000\240@\000\000\200?\000\000@@\000\000\000@\000\000\200?\000\000\000\000\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\340@\000\000\000@\000\000\200@\000\000\000@\000\000\240@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000\240@\000\000\000@\000\000@@\000\000@@\000\000\000\000\000\000\240@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000\000\000\000\000@@\000\000\240@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\240@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\000\000\000\000\000@\000\000\000@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\300@\000\000@@\000\000\240@\000\000\000@\000\000\000@\000\000\000A\000\000\020A\000\000\240@\000\000\200?\000\000\200@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000\300@\000\000\000@\000\000\000@\000\000\200@\000\000\200@\000\000\240@\000\000\200?\000\000\200@\000\000@@\000\000\240@\000\000\240@\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000\200?\000\000@@\000\000\200@\000\000\240@\000\000\000@\000\000\300@\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000\240@\000\000@@\000\000@@\000\000\000\000\000\000\300@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\240@\000\000\200@\000\000\000@\000\000\200@\000\000\000A\000\000\200@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000\000@\000\000\200@\000\000\200?\000\000@@\000\000\200?\000\000\000@\000\000\240@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\240@\000\000@@\000\000@@\000\000\000\000\000\000\000\000\000\000\240@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\300@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000@@\000\000\000\000\000\000\200@\000\000\200@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200@\000\000\000\000\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000\000\000\000\200@\000\000\200?\000\000\300@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\300@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\000\000\000\000@@\000\000\240@\000\000\000@\000\000\200?\000\000\200@\000\000\200@\000\000\000\000\000\000@@\000\000\000@\000\000\200@\000\000@@\000\000\240@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\000A\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000\200@\000\000\240@\000\000\340@\000\000\300@\000\000\200?\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\020A\000\000\000@\000\000\000@\000\000@@\000\000`
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3190
          }
        }
        tensor_content: "\000\000\200?\000\000@@\000\000@@\000\000`p``````````@\000\000\200?\000\000\000@\000\000\000@\000\000\200@\000\000\000@\000\000\000\000\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\000\000\000\000 A\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000\000\000\000@@"
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3190
          }
        }
        tensor_content: "\000\000(D\000\020\nE\000 UE\000(\213E\000\020jE\000\000\000\000\000\000\033D\000\340\333D\000\000pD\000@\232D\000\000\376D\000\000\000\000\000\340\352D\000@\366D\000 UE\000p\005E\000\240\311D\000\340!E\000\220XE\000\000\260D\000\200\232D\000\000\374D\000\200;D\000\000\375D\000\200\227D\000\300\344D\000\000\323D\000 \272D\000`\232D\000\234\250F\000\200uD\000\300\017E\000\0009E\000\300\361D\000\340\323D\000\3167G\000\200\211D\000\200\274D\000\000nD\000\000\260D\000`&E\000\000\026E\000\200\207D\000\200\300D\000\000\250D\000\240\020E\000\000\253D\000\300(E\000\300\207D\000\200mD\000\000\257D\000\000WD\000\000\035E\000\220\022E\000\000!D\000\300\024E\000\200\266D\000\000\220D\000\000DD\000\260\000E\000`\222D\000\360mE\000\240\324D\000\000\214D\000\000\314D\000\240\027E\000@\355D\000@NE\000\260\017E\000 \255D\000\000fD\000`.E\000\000\303D\000\000\261D\000\000\014D\000\000\000\000\000\000\000\000\000\200\374D\000\000\215D\000\360&E\000\200\322D\000\200\237D\000`\345D\000\000\026E\000`\222D\000\200\031D\000\000\202D\000\360sE\000\000\341D\000\240\314D\000\220\014E\000\200\346D\000 GE\000\000\226D\000P\002E\000\200VD\000\000\020E\000\000\214D\000\000\000\000\000\000\001E\000 \217D\000\200\222D\000\000\234D\000\240\202D\000\000\250D\000\300\320D\000\200uE\000\360\020E\000\200\247D\000\200\204D\000\300\313D\000\200&E\000\000\315D\000\000\203D\000\000*D\000pZE\000\320\230E\000 \373D\000 }E\000\000WE\000pCE\000\240\277D\000\340HE\000`\021E\000`IE\000\240\314D\000\300\005E\000`\206D\000 \033E\000@\203D\000\000\250D\000@\220D\000`\221D\000`\027E\000\200\334D\000\000\000\000\000\000\365C\000\200DD\000\3204E\000\340\253E\000`\350D\000\000\000\000\000\3002E\000\200[D\000\000\026E\000\260\023E\000\200\205D\000`\023E\000\240\214E\000\340\333D\000\340\230D\000p\016E\000\300\004E\000 \235D\000 \030E\000\000\000\000\000@\373D\000 \007E\000\000\337D\000\200\364D\000\200\355D\000@\354D\000\200\002E\000 \275D\000\200;E\0008\203E\000 #E\000 \360D\000`\242D\000\200\256D\000`\262D\000\000\034D\000\300\203D\000\020\nE\000@bD\000\000\276D\000\220\036E\000\000\355D\000\340\267D\000`\265D\000\260\016E\000\200HE\000\300\344D\000\200NE\000\000\000\000\000\240YE\000@\265D\000\300\332D\000 \322D\000p\024E\000\200\270D\000\300\002E\000 \350D\000\000HD\000\000\272D\000\260\'E\000\340]E\000\000\314D\000 \232D\000\200\324E\000\350\256E\000\200\324D\000\000\242D\000\250\244E\000\340\233E\000\200\266D\000`\304D\000\300\254D\000\000`D\000\200\312D\000\340\304E\000 \342D\000\200\267D\000\200\324D\000\000uD\000\000\304D\000\000\226D\000\200\245D\000p\\E\000\240oE\000 \014E\000 \262E\000\300|D\000\300\250D\000\000nD\000@lE\000\200\000E\000 \036E\000\240\206D\000@\260D\000`\027E\000\000kD\000\200\242D\000\200\034E\000\200\005E\000`\206D\000\000\023E\000\240\341D\000\200fD\000@\324D\0000\031E\000\000\314D\000\000\000\000\000\200\276D\000 \242D\000`\365D\000@\371D\000\340\237D\000p\036E\000\000sD\000\200bD\000\240RE\000@\207E\000\200\323D\000\000\204D\000@\265D\000\000\000\000\000\000JD\000\300\252D\000\240|E\000\300\263D\000\340\301D\000\340\327D\000\000\202D\000\200\350D\000\000\264D\000 \224D\000\000/E\000\000\255D\000 \246D\000\340\345D\000\240\310D\000\300\250D\000\200\331D\000@\263D\000\340\031E\000\000\233D\000\340\005E\000 \205D\000`\352D\000\300\001E\000\200;E\000\200YD\000\300\262D\000\200\\D\000\340tE\000\360%E\000@\270D\000\200\207D\000\300\262D\000\000\220D\000\320\032E\000\340\014E\000\000\214D\000\340\316D\000\220\rE\000\240\304D\000\340ME\000\320\033E\000 \240D\000`\021E\000\300\276D\000@\276D\000\000HD\000\300\307D\000\000\250D\000\200\367D\000 /E\000\000oD\000\000\276D\000\020\003E\000\200\224D\000@\224D\000\200\242D\000 \200D\000\260\232E\0000\204E\000\000\341D\000@1D\000\000\264D\000@\234E\000\200PD\000\200xD\000\200\277D\000\260sE\000\000\300D\000\000*D\000\000\202D\000\000\315D\000P\000E\000\320\204E\000\240:E\000`^E\000\340\220D\000\200\377D\000\300\323D\000\000\313D\000\340\270D\000\000>D\000\000\203D\000@iD\000\220FE\000\000\264D\000\340\210D\0000>E\000@tD\000\000\000\000\000\240\247D\000\200\357D\000\000\344D\000\000\217D\000@6F\000\020LE\000\000\026E\000@\203D\000\200\307D\000\220GE\000\240-E\000\300\002E\000\200,E\000\2200E\000\240\272D\000\340TE\000\000\330D\000 \301D\000@\273D\000\000ID\000`\022E\000\000!E\000 \265D\000\340:E\000@\260D\000\320\031E\000\300-E\000`\206E\000`\271D\000\000\252D\000\200kD\000`\033E\000\340\232D\000@\350D\000@6D\000\200VD\000\200\230D\000\020\"E\000\300\337D\000\000\242D\000\240\013E\000 \000E\000\000\323D\000\000\217D\000\000\334D\000`\323D\000\000\031E\000\340\326D\000\340\250D\000`(E\000`\301D\000\300\313D\000PEE\000`\303D\000\000\264D\000@}D\000`\003E\000\220UE\000\260\005E\000\240jE\000\220(E\000\360>E\000\340\201D\000\000\020E\000 \240D\000\340\003E\000\340KE\000\200\030D\000\200\250D\000\240\033E\000\000\237D\000\340\261D\000\300\346D\000\000zD\000\300\231D\000P\025E\0000,E\000@\320D\000\000zD\000\000\250D\000\300\200D\000`\200D\000\000\000\000\000H\231E\000\000\026D\000\300NE\000\300\006E\000\200\257D\000\000\007E\000\300ED\000\260\022E\000p8E\000\000\367D\000\300\325D\000\000\221D\000\300\237D\000\230\225E\000\200\323D\000\240\264D\000\240\013E\000\200\211D\000 \306D\000\300vD\000p.E\000@\271D\000P\004E\000\200\236D\000@\314D\000P?E\000\000\365D\000\200\346D\000\300\340D\000\000ZD\000 \245E\000@`D\000\000\274D\000ppE\000@\324D\000@\327D\000\300}E\0000\037E\000\340\331D\000\360\223E\000 \'E\000P\226E\000\340\rE\000\000\226D\000\200\023E\000`\006E\000\300nD\000\010\223E\000\200cD\000\020\202E\000\340\001E\000\200\177D\000`\374D\000\000mD\000\200zD\000\340\tE\000\000\025E\000`)E\000\000\000\000\000\200/D\000\300\327D\000\000\302D\000\340\345D\000\000\215D\000\300\306D\000\200\300D\000\300\303D\000 \314D\000\200\276D\000\300\203D\000\300\250D\000@\367D\000@\223D\000\000\204D\000@\345D\0000\230E\000\260\007E\000\240\227D\000\220\020E\000\300\036E\000 \354D\000\000lD\000@\344D\000\300;E\000\300_D\000@\306D\000\000\250D\000\200}D\000`\333D\000\240\006E\000\320%E\000\000\231D\000\200>E\000\300,E\000\200bD\000 \337D\000\230\340E\000 DE\000\200\322D\000\000\360D\000\000\212D\000\200\355D\000\000\000\000\000\020\tE\000\220\"E\000@RD\000\300\263D\000\200\216D\000\3208E\000`)E\00007E\000\000VD\000\200\324D\000\200\242D\000 \206F\000\300\351D\000\000\245D\000\000\004D\000\000\000\000\000\3005D\000\000xD\000\000\232D\000\000\341D\000\300\221D\000\260tE\000\000\000D\000\000\360C\000`\213D\000\000_D\000@>E\000\000aE\000\340\307D\000\200\350D\000\000\352D\000\270\253E\000\000\270D\000\200?D\000\000\345D\000\360\026E\000\000\310D\000\000\000\000\000\300\255D\000`\352D\000`\037E\000\300<E\000\000\030D\000p4E\000\000\254D\000\300NE\000`\214D\000\200\265D\000@\362D\000\340\216D\000\000\266C\000\220\031E\000\240\203D\000\300\256D\000\240\237D\000\200\246D\000P\036E\000\3002E\000@\266D\000\000\232D\000\340\010E\000\340\375D\000\340DE\000\340\003E\000 \234D\000`?E\000\340\345D\000\220LF\000\200\306D\000\000zD\000\240\213D\000\340\233D\000\000\246D\000@#D\000@5E\000\000\254D\000\200\324D\000\000\312D\000\000\242D\000\300nD\000\200\212D\000\340\350D\000@8D\000\200mE\000\300\267D\000\2601E\000\340\331D\000\200$D\000\000\216D\000\320\rE\000\200\356D\000\240\331D\000\000kD\000\300xE\000\000\264D\000\200\256D\000`\302D\000\260\027E\000\000\035E\000\360\001E\000@\324D\000`\277D\000@\301D\000@\243D\000\200\315D\000\200\177D\000\300\031E\000\200\311D\000\300YD\000 \251D\000\200\326D\000\000\244D\000\220qE\000\300\217D\000\200\300D\000\240\306D\000@\244D\000\220\216E\000\240\016E\000 8E\000\360\010E\000\000\275D\000\300\005E\000\240\273D\000@\203D\000p8E\000\000iD\000\000\226D\000\360\013E\000\300\231D\000\020%E\000\000\345D\000\300\250D\000\000\022E\000@\351D\000\320\302E\000\300.E\000\3409E\000p\005E\000`\034E\000\200\205E\000\300\230D\000@ZD\000 CE\000@\277D\000`\275D\000x\307E\000@\257D\000\240\007E\000\300\226D\000\300\332E\000@NE\000\310\214E\000`\360D\000`\275D\000\220)E\000\200\273D\000\200\242D\000\240\372D\000@\250D\000\000\354D\000`\206D\000\260:E\0000tE\000\240_E\000\000\267D\000\240\014E\000@\210D\000`\205D\000\260\336E\000p\214E\000@\361D\000\000\215D\000@3D\000\340\235D\000\340\213D\000\300\315D\000\2003E\000@9E\000\000\250D\000\300\224D\000\370\210E\000\340\235E\000`\247D\000\000 D\000\200@D\000`\337D\000\200\374C\000\000\000\000\000\200;E\000\000RD\000@\351D\000\200\277D\000 \330D\000\320\001E\000\300\254D\000@\014E\000\300\tE\000\200hD\000`\341D\000\240;E\000`\352D\000@\334D\000\200\242D\000\316\251F\000\300\325D\000\000\214D\000\300:E\000\2409F\000\000HD\000\000\226D\000@\003E\000\000ME\000\020\000E\000\340\315E\000\240\237D\000P\026E\000\000\341D\000 \305D\000\240\275D\000\200jD\000\300\252D\0000\031E\000 \217D\000\000fD\000\340\234D\000\000\233D\000\300ID\000\000\255D\000 \220D\000\000*D\000 \253D\000\300\313D\000\300\014E\000\300KD\000\000\320D\000\340\355D\000\000rD\000\240\331D\000\200\353D\000\200dD\000 \034E\000\240\214D\000\000\000\000\000 \210E\000\210\204E\000\240\272E\000\240EE\000\000\252D\000\240\364D\000@VD\000\270\316E\000\240WE\000\000\200?\000\200\346D\000\000\005D\000\000CD\000\000\226D\000@[E\000`\214D\000\000\366C\000\360=E\000@\023E\000`\301D\000\000\335D\000\000\257D\000\340\333D\000@/E\000\300\250D\000\340\373D\000\200\305D\000\000\250D\000\000\251D\000\340vE\000`\204D\000 \376D\000\300\200D\000\240\320D\000\200\231D\000\200\235D\000\350\276E\000\300\245D\000 \233D\000\240\365E\000\200\324E\000\000%E\000\2009D\0008\235E\000@\010E\000\030\211E\000\000uD\000\200\032E\000\270\230E\000\000\324D\000\000(D\000\000\264D\000\200\254D\000\340\326D\000\000\226D\000@\225D\000\000\377D\000 \240D\000\000\210D\000\200^D\000\240\313D\000`\203D\000\300\025E\000`\025E\000\240\024E\000\300\376D\000\000\327D\000\000\207D\000\200QD\000\200eD\000\200\tE\000\200\340D\000@\216D\000\300MD\000\300\323D\000\340\366E\000\000wD\000\000\263D\000p\tE\000\000\346D\000\000vD\000\200?D\000\000aD\000\000\264D\000\200\223D\000\200\324D\000\300AE\000\200\234D\000\000\322D\000\300\347D\000\340\226D\000\000\004E\000\200fD\000 \312D\000\200jD\000@.E\000`\362D\000`\205D\000\240\327D\000\000\372D\000 \251D\000\000\263D\000\200\031D\000 \352D\000\340\253D\000\200^D\000\340\314D\000\200}D\000`\371D\000\200\217D\000\000\223D\000\000 E\000 2E\000\240\332D\000\240\304D\000\300zE\000\300\017E\000 \213D\000`\213D\000\340\222D\000\300\332E\000\200\263D\000@0E\000\340\370D\000\200\022E\000\000\000\000\000\360\027E\000\340\237D\000@\312D\000p\036E\000\030\234E\000\200JD\000\200\216D\000@\317D\000\260\010E\000\000\202D\000\200\216D\000`4E\000@\232D\000\000\245D\000\000`D\000\200&E\000\200\204D\000\340\271D\000\000\276D\000\000\372D\000 \250D\000\300<E\000`\265D\000\300\203D\000\240\340D\000\340\232D\000H\276E\000\200ZE\000\020\010E\000`\025E\000\300\370D\000\000\020E\000@\237D\000`\364D\000\000\000\000\000\300\362D\000`\333D\000\320\001E\000@\034E\000@\332D\000pzE\000\000\264D\000\200\001E\000\340\242D\000x\353E\000p\001E\000\320\204E\000\220HE\000\000\376D\000 \357D\000\200VD\000`\333D\000\240\007E\000\200DD\000\020\033E\0000\023E\000\200\242D\000\000\361D\000p[E\000\200\233D\000\000ZD\000\200\211D\000\200\214D\000\300bD\000\000\304D\000`\320D\000\240\316D\000`\224D\000\000\253D\000\000\314D\000`\256D\000\000\372D\000\300YD\000@pD\000`\211D\000\200\362D\000\360WE\000\300\247D\000@\223D\000\300\231E\000\300\263D\000\300AE\000`\323D\000\000\'E\000\300OD\000`#E\000\240\205E\000`\333D\000`\256D\000p\023E\000\300\353D\000\020bE\000\360\023E\000\300\344D\000\300\225D\000\340\222E\000\000\271D\000\340\207D\000`\250D\000\300FD\000\000(D\000\000\233D\000\000\362C\000@\003E\000@\331D\000\000pD\000\200\254D\000 \321D\000\340\247D\000\300\215D\000\000\007D\0008\306E\000@\246D\000\300\264D\0000\'E\000\340\253E\000\340\006E\000@\277D\000\340\232D\000\300\255E\000\240?E\000\000\205D\000\300\363D\000\240\035E\000\000sD\000\200\033D\000\000\233D\000`\242D\000\200,E\000\220\035E\000\020\tE\000\230\212E\000@$D\000\200\272D\000\000\343D\000\000\245D\000\000\000\000\000\300\027E\000\240\334D\000\0003E\000\300\245D\000@0E\000`\206D\000\000yD\000`\266D\000@\230D\000\200#D\000\300AE\000 \306D\000\200\242D\000\240\207E\000\300\231D\000`\254D\000\000\000\000\000\000\314D\000\200nD\000`UE\000\000\250D\000`\244D\000\300\217D\000\200\243D\000\200+E\000\200\214D\000@\222D\000\000zD\000`\274D\000@\370D\000\000\257D\000\240\205D\0004\002F\000\300\221D\000\300\245D\0000\032E\000\200\310D\000`\334D\000\000_D\000\300\301D\0000\312E\000\000\340D\000\200\305D\000\200\267D\0000%E\000\200\273E\000\000\372D\000`\215D\000`\306E\000P\001E\000\200\332D\000\200\210D\000\220\231E\000\000\310D\000@zD\000`\310D\000\340\027E\000\000vD\000\300PE\000@&E\000 \242D\000\000*E\000\000\204D\000@kD\000\220\nE\000\300\025E\000\000}D\000\340\234D\000\340\210D\000\260aE\000\240\310D\000 \001E\000@\203D\000\200;E\000\0008D\000\340\246D\000\000sD\000 \271D\000\000\204D\000\240\004E\000\000\177D\000\000aD\000@;E\000\360-E\000\000oD\000p\tE\000\300\320D\000@\"E\000\300\254D\000\300\217D\000\000oE\000\240\235D\000\300\235D\000\000\306D\000\240\313D\000 #E\000\300\251D\000\220\030E\000\200\317D\000p E\000@\216D\000 qE\000P.E\000\200\251D\000 \210D\000p\001E\000\340\365D\000\340\323D\000\360\021E\000\340yE\000\300\311D\000 \253D\000\300wD\000\260@E\000 ZE\000`\261D\000\000(D\000\220\001E\000\000\321D\000\340\330D\000\000\341D\000\000\232D\000\200\202D\000 ZE\000\240\033E\0008\201E\000\240\326D\000\000\016E\000\200>E\000\200\266D\000 \260D\000\300\255D\000\200\373D\000\200\230D\000\200\215D\000\000\000\000\000`\206D\000@CD\000\000\310D\000\320\023E\000\200\"D\000\340\337D\000\340\345D\000@\361D\000\240\024E\000`\262D\000@\203D\000\200\207D\000\340\230D\000\200\201E\000\000\021E\000\220\021E\000 \216D\000\200JD\000\200\022E\000 \212E\000\330\272F\000\240\344D\000\200\270D\000`\321D\000\240\025E\000\240\002E\000\340\rE\000\000pD\000\200\266D\000\200\"E\000`IE\000\000\000\000\000\000\264D\000\000\037E\000 \223D\000\000\300D\000\340\320D\000\340\020E\000\220#E\000\200\203D\000\000\317D\000\300\243D\000\240\364D\000\200\214D\000p7E\000\300\243D\000p_E\000\000|D\000\000\331D\000\340\254D\000\000\245D\000p\014E\000\240%E\000\000 E\000\300$E\000`\300D\000@\327D\000`\353D\000\300\200D\000p\016E\000\200+E\000\000pD\000\320RE\000\200YD\0000\001E\000\300\320D\000\360NE\000\340\332D\000\200\004D\000\000\353D\000\000\264D\000\000wD\000\000xD\000\240\251E\000@\246D\000\200\031E\000@\203D\000 \211D\000\000\214D\000\200YE\000\000\331D\000\000kD\000\200\'E\000\000\230D\000p|E\000\000\313D\000\240*E\000\300\311D\000 ~E\000\020!E\000\340;E\000 \177E\000\340\334D\000\300ZD\000\000HD\000\220\014E\000\300\350D\000\340\300D\000\300\207D\000\300\325D\000\000zD\000\220)E\000\300\310D\000@\315D\0000LE\000\340\013E\000\200TD\000\000PD\000\200\325E\000\200\006E\000@TD\000\300aD\000@\247D\000\240\222E\000@\353D\000\300KD\000\000\303D\000\340\215D\000\240\226D\000\340\225D\000\000zD\000\0000D\000\240\267D\000p\024E\000\2603E\000\000\377D\000\300\260E\000\000\316D\000\200\372D\000@\323D\000@xD\000\000\322D\000@\222D\000\000|D\000\300TD\000\200cD\000@\030E\000\300\203D\0000AE\000\200}D\000\340\272D\000\000\260D\000@\201D\000@cD\000\340\231D\000\300eD\000\000.D\000@&E\000\300\205D\000`\264D\000\200\305D\000\260oE\000\300\375D\000\000\333D\000@\365D\000`\371D\000@\227D\000\340\210D\000`\274D\000\260\034E\000\000\331D\000P\372E\000\200\200D\000\240\333D\000`\213D\000\200-D\000\000\000\000\000p\032E\000\3007E\000@\224D\000\000#E\000@\323D\000\320\022E\000`\275D\000\200\371D\000\000\264D\000\000\000\000\000\300\250D\000@\252D\000\260;E\000\300\343D\000 \201D\000x\245E\000@\356D\000\220\014E\000\200\225D\000`3E\000\000zE\000\220\203E\000\300KD\000\020\013E\000\360`E\000\000\000\000\000\300\252D\000\0204E\000\000\\E\000\240\244D\000`\320D\000@\262D\000\000zD\000\000\220D\000P\203E\000\220\006E\000@\222D\000 \332D\000\2600E\000@\205D\000@yD\000`\030E\000\240\215D\0000\tE\000\300\005E\000\000\322D\000\200\246D\000\300\017E\000\300\215D\000\360\013E\000h\246E\000\340\317D\000\350\202E\000\300vD\000\200ZD\000H\000F\000\360\002F\000\000dE\000\200\"D\000 _E\000`\372D\000\240\221D\000\200\233D\000 \262D\000\340\365D\000\000\263D\000`\204D\000@\033E\000\000\rE\000\360\\E\000\000\244D\000\240oE\000\000\000\000\000\260\260E\000\020\013E\000\000\250D\000\000HE\000\200ED\000 \302D\000@\331D\000`\201D\000@\226D\000\200\322D\000pQE\000\200@D\000@\202E\000\340\221D\000\260\021E\000 \236D\000\000\250D\000@\203E\0000\211E\000\200\276D\000\000\365C\000\210\370E\000\340.E\000\240\203D\000\200JE\000@\005E\000 \255D\000 \013E\000@\000E\000\000\325D\000\300|D\000\340\223D\000 \356D\000`\033E\000\240\023E\000\200\312D\000\320\030E\000\350\270E\000\000\026E\000`\205D\000\000/E\000@\200D\000 \343D\000\300\377D\000\200sD\000\300\344D\000@1D\000 \257D\000\000GD\000\000RD\000\200\355E\000\000\226D\000\300\261D\000@\343D\000\240\001E\000@\'E\000\340\311D\000 \325D\000@\342D\000\220\nE\000@\310D\000\220*E\000\000}D\000\000YD\000\000\264D\000\300\243D\000\200TE\000@\260D\000\340\344D\000\000\000\000\000\370\313E\000\000:E\000\000TD\000`\206D\000\300\263D\000\300\363D\000\270\021F\000\260XE\000\200\tD\000@`D\000\200\334D\000\240%E\000\240\306D\000@\256D\000\340\274D\000\320\033E\000\340\303D\000`)E\000`\226D\000@\204D\000@\246D\000\240\363D\000\000\000\000\000\2006E\000\200}D\000\000\350D\000 \375D\000@\304D\000\000\207D\000 )E\000\000\000\000\000\340\330D\000\300)D\000\240\014E\000\240\330D\000\300\235D\000`\206E\000@\202D\000P\034E\000\340\370D\000\240\377D\000\260)E\000@=D\000\000zD\000\200\227D\000\200\350D\000\310\265E\000\200]D\000\000\340D\000@\344D\000\200\261D\000\000\364D\000 RE\000\200\031E\000\000\240D\000@\341D\000P\'E\000\200\277D\000\000\000\000\000\300$E\000\000\271D\000\300\221D\000\240\224D\000\240\327D\000\240\276D\000@\034E\000 \306D\000\330\272F\000\000\233D\000\000/D\000\000\014E\000\240\321D\000\260\213E\000`\231D\000\300sD\000\200\321D\000\000\267D\000\000\000\000\000\300\342D\000\200sD\000\200\253D\000 \006E\000\240\226E\000\000\311D\000\020VE\000\300\226D\000`\305D\000`\343D\000\000\000\000\000\200ED\000\000\222D\000\300\017E\000\014UF\000(\345E\000\000\000\000\000\000\264D\000 \200D\000\340\240D\000@\243D\000\000\214D\000\000@D\000\240 E\000@bD\000\200\314D\000x\202F\000p\236E\000\000wD\000\300\234D\000 yE\000`\251D\000@!D\000\200|D\000\200\251D\000\300\255D\000\000\322D\000@\274D\000\230\251E\000 \307D\000\240\226D\000\000\363D\000\200}D\000\340\200D\000 \240D\000\260zE\000\000\234D\000\220vE\000@vD\000\000\264D\000\0007D\000 \312D\000\340\304D\000\000\000\000\000@zD\000\000\306D\000P\025E\000\000\233D\000\200\331D\000\000\202D\000\230\240E\000@\342D\000\000\202D\000\200\211D\000\0005D\000\2409E\000\200{D\000\300\241D\000\000\000\000\000\200\nE\000\000\257D\000 \304D\000\000\247D\000\360fE\000\340/E\000\000\003E\000`\224D\000\000\000\000\000\300\231D\000\240\234D\000\300\033D\000\300\234D\000`\325D\000\000\264D\000\360\tE\000\200\tE\000\200WD\000\000\220D\000\000\257D\000\240:E\000\200\310D\000\300\002E\000 \255D\000\200\"E\000\300kD\000\360ME\000\314YF\000\000\000\000\000\200\217D\000\240\215D\000\000\270D\000\000\\D\000\330\032F\000p\001E\000\200OE\000\200\341D\000\300\247D\000\300\000E\0000rF\000@\335D\000\300\242D\000@\272D\000\000\"D\000\200^D\000\0009D\000X\341E\000\200XD\000\300\212D\000\260<E\000\360!E\000 \223E\000\000\301D\000`tE\000\300\022E\000pbE\000\200\334D\000\200\324D\000@\207D\000\000$D\000@\365D\000\000\202D\000`\267D\000\200\275D\000\340\361D\000@\013E\000\320QE\000\220<E\000\240\301D\000\300\267D\000\340\314D\000\310\224E\000\000\221D\000\000nD\000\200pD\000\200\335D\000\240\032E\000\200}D\000 \305D\000 \320D\000\320\000E\000\200\212D\000@\316D\000 \315D\000\200\236D\000`8E\000\000\250D\000\320\'E\000x\203E\000@^D\000\310\206E\000\300\243D\000\200\351C\000\220\020E\000\300cD\000`,E\000\200\254D\000\200\346D\000 \373D\000\2404E\000\000\264D\000\200\363D\000\200\266D\000\000\356C\000\200;F\000\000\372D\000`\262D\000@hD\000 \262D\000\000\253D\000\300\350D\000\200mD\000 \262D\000\260KE\000 ,E\000@\203E\000\000\254D\000\240\307D\000\340\255D\000\300\264D\000\320\021E\000\200\357D\000\000\305D\000@?E\000\340\202D\000\300LD\000\000qD\000\300\244D\000\200SD\000\000\257E\000\000\000\000\000\210kF\000\000\242D\000\000\000\000\000<\000F\000\0004E\000\000\227E\000\200&D\000\240\200D\000 \200D\000\000\266D\000\240\331D\000`\320D\000\000BD\000\200\005E\000\340\251D\000\240\003E\000\300\362D\000`\212D\000\200\027E\000\000\005E\000\300mD\0008\214E\000\340\371D\000\300\034E\000@\347D\000\240\236D\000\340\032E\000\000\214D\000\2004E\000\000`D\000P!E\000\200^D\000\200bD\000@\224D\000\300\224D\000\000\022E\000\340\316D\000\000\336D\000 2E\000``F\000\300\205D\000\200hD\000`\374D\000\000\245D\000 \215D\000\000uD\000\000HD\000\260\022E\000\240\262D\000\240\275D\000\0004D\000\300+E\000@.E\000\300ED\000\200\261D\000\000\367D\000 \000E\000\300\351D\000\300\212D\000\300\016E\000\300{D\000\000\273D\000\360ME\000\200\266D\000\200\355D\000\000\207D\000\200\320D\000\000\000\000\000\020>E\000\300\331D\000\300\tE\000\260tE\000\300\264D\000\260=E\000\000\327D\000\000\325D\000\000\306D\000p!E\000\240\274D\000\200\rE\000\200dD\000\020\000E\000\300\306D\000\000\274D\000\200\307D\000\340\024E\000\000\223D\000\240\035E\000\020\016E\000`\335D\000X\203E\000\340?E\000@1E\000\200\265D\000@\324D\000\000 D\000 \261D\000@\236D\000\200\350D\000\000fD\000\300qD\000\000\000\000\000\300\305D\000p\027E\000\000tD\000`\034E\000@FE\000\300\201D\000\020\033E\000\240\257D\000\200\202D\000`iE\000\000\203D\000\340\226D\000`\336D\000\300yD\000\240\202D\000\000\214D\000\000\312D\000\340\257D\0008\373E\000@\342D\000\200\"D\000\300\275D\0000\032E\000@\246D\000\340\212D\000`yE\000\000\264D\000\230\202E\000\320\017E\000`\200E\000 \253D\000\000\364D\000@\234E\000\300\255D\000\340\375D\000 \216D\000\000\021E\000@NE\000\000\026E\000@\322D\000\000\274D\000\200\254D\000@\325D\000\000\000\000\000\200\200D\000@\354D\000\340\222D\000\340\034E\000X\226E\000\000\245D\000  E\000\200\314D\000\300\346D\000\000zD\000\340\205E\000\000\000\000\000\220\tE\000\000*E\000\340\013E\000\000\237D\000\320HE\000\340\005E\000\240\014E\000@\377D\000\240\002E\000\020.E\000\000&E\000\000\204D\000\200\301D\000\000zD\000\340\264E\000`SE\000@\007D\000\000\233D\000\220DE\000\200WD\0008\244E\000\000\000\000\000\200\224D\000\200\251D\000\0009D\000\000HE\000 \207D\000\300\350D\000@\252D\000`\375D\000\000HD\000\000\250D\000\200,D\000PcE\000\000\230D\000\000\234D\000\030\222E\000@\347D\000\300\037E\000@lD\000\350\320E\000\240\374D\000\240\365D\000 \326D\000@\377D\000\220\010E\000\220^E\000`\344D\000\200\274D\000\300/E\000\000\234D\000\000kD\000\000\310E\000@AD\000\340\263D\000\200\245D\000\000\264D\000`\217D\000\200`D\000P E\000\000>D\000\340OE\000\000\252D\000\000\251D\000@\034E\000\200\305D\000 \001E\000\000{D\000\300\306D\000@\200D\000\300\235D\000\220?E\000\000\000\000\000\000\312D\000\000\256D\000@\342D\000@\024E\000@\222D\000`\251D\000\000:D\000\000\246D\000\200\213D\000@\203D\000@\316D\000\300KD\000\300\235D\000 XE\0000\216F\000\200\254D\000\000\000\000\000\200\234D\000\300\337D\000\200\326D\000`\311D\000\000\202D\000`\310D\000\240\367D\000\200\235D\000\000\257E\000\300 E\000\300\010E\000 \272D\000\000\262D\000 \227D\000\000\214D\000p\005E\000 \313D\000\300IE\000`\366D\000\000\355C\000\300\303D\000\200\314D\000\240\373D\000@\301D\000\000\310D\000\300]E\000\020\005E\000\200\357D\000\3203E\000\000]D\000\000\000\000\000\320\261E\000\220CE\000\000\350D\000\000\226D\000`\210D\000\000\277D\000@ED\000 \306D\000\300\261D\000`\364D\000\240\177E\000\200\364D\000\000\343D\000\000\276D\000\000|D\000\300\375D\000\200\235D\000\000XD\000\340\220D\000\200\335D\000\240\244D\000\240\365D\000\000\004D\000\000\000\000\000\200\273D\000\300\310D\000@?E\000@,E\000\240\272D\000\000\327D\000\000\352D\000\360\016E\000\000uD\000\000+D\000\2007D\000\360\026E\000\350\203E\000\000\226D\000h\254E\000\200\211D\000\300lD\000\000\316D\000\000mD\000\300\204D\000\200mD\000\370+F\000\000\000\000\000\000\226D\000 +E\000\200\221D\000\340\365D\000\300\212D\000\240AE\000 ME\000\020\002E\000`\302D\000\200\306D\000@\361D\000\200\246D\000\240nE\000`\033E\000p&E\000\000\265D\000\300\234D\000@\276D\000@\304D\000\240\301D\000\300\005E\000\300#E\000\240\272D\000\340\251D\000@KE\000\300\240D\000\000\322D\000\000\002E\000\240\302D\000\300\"E\000 \374D\000\000\034E\000\200\223D\000\340KE\000@\273D\000\330\257E\000\000\360C\000\200\236D\000\000zE\000 \377D\000P\232E\000\240\352D\000@\013E\000@\005D\000 \327D\000\240\312D\000@\315D\000\000\316D\000\200\241D\000\200\010E\000\000\323D\000\000<D\000\010\202E\000\000\032D\000\240\251E\000\320bE\000\220\016E\000\000\211D\000@fD\000\000\267D\000\000\365D\000\220\374E\000@NE\000\200\204D\000\240%E\000@_D\000\346\320F\000\000\260D\000\000\014E\000\340&E\000\300\037E\000\300\030E\000\000\231D\000\200iD\0000AE\000\360,E\000\200SE\000\300\371D\000\300\013E\000\200\023E\000\300\024E\000\200\326D\000@\021E\000\340\324D\000`\005E\000\200YE\000\000\004E\000\220pE\000\3208E\000@\277D\000\3602E\000@\003E\000\200\271D\000\000\264D\000\000qD\000 KE\000\300\332D\000 \216D\000\220%E\000`rE\000\000\250D\000\320\020E\000\300\315D\0000\242E\000\200^D\000`\363D\000\000zD\000 \010E\000\200\311D\000\200\345D\000\300\205D\000@\034E\000@PD\000`\321D\000p\016E\000\320+E\000 \nE\000@\003E\000\300\232D\000@\270D\000\000\000\000\000@\236D\000\000\264D\000\000\252D\000\200\307D\000\220\024E\000\240\036E\000  E\000\000\212D\000@\022E\000\200\242D\000 sE\000\020\021E\000\200_D\000\000OE\000\000\317D\000`\331D\000\020GE\000\000\000\000\000\200\221D\000p\243E\000\300\231D\000`UE\000 \247D\000\000\355E\000\200\216D\000`?E\000\340\215D\000\200VD\000\000\264D\000`JE\000\200nD\000\0000D\000@\253D\000\300\250D\000`\246D\000p&E\000@0E\000\2201E\000\000\000\000\000\200\"D\000\240\020E\000 \213D\000`\310D\000\300yD\000\240\373D\000`\245D\000`\321D\000\000\226D\000@\263D\000 \301D\000\300\315D\000\2007D\000`BE\000 \221D\000p\232E\000\320OE\000\000\330D\000\340\253E\000\240\331D\000\340\022E\000 -E\000\210\214E\000\300\203D\000\020\005E\000\0003D\000@2D\000\250\211E\000\000}D\000\240bE\000PAE\000 \202E\000@\347D\000@oD\000\340\330D\000\200\222D\000\200\267D\000\300\250E\0000\302E\000\300ZD\000\240\241D\000\000\217D\000\000\026D\000\200TE\000\200\262D\000\000\250D\000 (E\000\200\253D\000\0201E\000@vD\0000\010E\000\000\307D\000\320XE\000\300\021E\000\000sD\000 \013E\000@\377D\000\240?E\000`\337D\000\200\"E\000`\021E\000\340\237D\0000\030E\000\3506F\000`\330D\000 \335D\000\2607E\000@\275D\000\000\356D\340<\365H\000@\262D\000\200\261D\000@\331D\000\220XE\000\200\211D\000\000\226D\000\340\361D\000 \364D\000\240`E\000\0004D\000 \355D\000\340\260D\000\200XD\000\240\212D\000\300\336D\000\000zE\000\320\035E\000\200aD\000\000RD\000\240\215D\000 \335D\000\200~D\000\340\023E\000\200\357D\000\000\214D\000\300kE\000\000\261D\000\000(D\000\000TD\000\300\235D\000\000\177D\000\000\002E\000\2000D\000\000\322D\000\300\231D\000\300\246D\000\240\342D\000\000\255D\000\200\010E\000\240\212D\000\000\210D\000\000\264D\000`\276E\000\000\252D\000\200\020E\000\240zE\000\200\301D\000\000zD\000\340\215D\000\240\250D\000\300vD\000`\242D\000\000\000\000\000\220vE\000\2404E\000`\031E\000`\327D\000\000\000\000\000`\327D\000\000pD\000\360=E\000 \262D\000\340\265D\000\000\272D\000\360\023E\000\200\025E\000\000\212D\000\340\215D\000 \001E\000\000\377D\000\200\nE\000\240\335D\000\000zE\000@\255D\000\360\335E\000 \242D\000`\360D\000`\320D\000pFE\000\220\027E\000\320\001E\000`\311D\000\000VD\000\000\252D\000 \243D\000\370\261E\000 \374D\000\340\032E\000\000\365D\000@<D\000\370\260E\000\220#E\000\300\031E\000\200eD\000\300}D\000 \nE\000\200\273D\000@NE\000 \032E\000@\337D\000\020xE\000\200\273D\000\000\026D\000 \221D\000\000\251D\000\200\245D\000 \nE\000\000vD\000\000RD\000\340\305D\000\000LE\000@&E\000p5E\000`\303D\000\200\273D\000@:E\000@\334D\000\000\257D\000`\261D\000\300\303D\0000;E\000\200\254D\000\300\003E\000@\351D\0008\205E\000`\202D\0000\036E\000\200\355D\000\200\310D\000\300\312D\000\300!D\000`\004E\000\240\271D\000\000\264D\000@GE\000\000\261D\000 \256D\000\200\365D\000\000\217D\000\260]E\000\200\310D\000\240\375D\000@\346D\000\000\000\000\000\000\010D\000@\220D\000\340\346D\000\020\036E\000\000jD\000\340\272D\000\200\\D\000`|E\000\020\035E\000\240\244D\000\200\257D\000\200\211D\000\200\224D\000\000HD\000\300yD\0000)E\000@\003D\000\000\346D\000\220\342E\000\000rD\000@\265E\000X\246E\0000\034E\000\000\374D\000\000\217D\000\200\225D\000\200\207E\000\000\245D\000p\010E\000\000rE\000\240\202D\000\200TD\000\200tD\000\000\226D\000\300\211D\000@\265D\000\220\001E\000\240\264D\000\020\003E\000\000\225D\000\340!E\000\000\372D\000 \251D\000\000\267D\000 \321D\000 \004E\000\300\364D\000`\212D\000\340\253E\000\200\312D\000 \247D\000\000\372D\000 >E\000\200\306D\000\000#D\000\200\242D\000\320\033E\000\200TD\000\000\226D\000\000\217D\000\000\206D\000\300\250D\000\000\000\000\000@\267D\000\000\220D\000\300EE\000\250\204E\000\240\350D\000\330\347E\000\340\357D\000\200\277D\000\200\350D\000\300\212D\000\000\360D\000\000\000\000\000\000\210D\000@\326D\000\200PE\000\020 E\000@\360D\000\200\311D\000\200\357D\000\000\255D\000\000\221D\000\200\261D\000\340\217D\000`\257D\000\000\242D\000\000\264D\000 \262D\000 ^E\0000\036E\000\000\250D\000\0006D\000\300}D\000\200zD\000@\222E\000pdE\000\240\310D\000\340\363D\000@\270D\000\000RD\000\000|D\000\000\335D\000\340\200D\000@:E\000\000\241D\000\000RD\000\300\220D\000P\010E\000p\003E\000\200\005D\000\340\267D\000\300lD\000\240\313D\000\000~D\000\220\033E\000`\256D\000@\243D\000 \205D\000\300\235D\000\240\315D\000\200\204D\000\300\353D\000@\257D\000\300SD\000\300sE\0000\023E\000\300\276D\000\000\264D\000\3401E\000@\267D\000\350\217E\000\240$E\000\240\255D\000\000\036D\000\000\303D\000\000\300D\000\200\241D\000\200\305D\000\200\376D\000@sD\000\020%E\000\200\336D\000\240\351D\000\000\240D\000\200\312D\000 \337D\000@\237D\000\300fD\000P\007E\000\000\207D\000\000RD\000\300\nD\000\000dD\000\300\255D\000\340\333D\000\300\204D\000\000\004E\000\240\322D\000\000\214D\000\300\333D\000@\217D\000\340\027E\000@\250D\000\000\257D\000\340YE\000@\334D\000`\034E\000\2001D\000@\263D\000\300PE\000\020\234E\000\240\356D\000\000\321D\000\340TE\000\340\326D\000 \024E\000\200\004D\000\200TE\000\340\253E\000\000\214D\000\000\233D\000\370\261E\000@\324D\000x/F\000\000\275D\000\000[D\000\000\353D\000\200\242D\000\000\372D\000\030\354E\000\340\027E\000\200`D\000\240VE\000\300\017E\000P\rE\000\300MD\000\000nD\000 \301D\000\000\tE\000`\342D\000\000WD\000\200KE\000\200MD\000`\002E\000\300\250D\000\300ED\000\300\352D\000\300/E\000\340\001E\000\000zD\000@_D\000(\253E\000@\271D\000 \373D\000\300\223D\000\200\355D\000\260.E\000\240mE\000\340pE\000\300\235D\000\300\372D\000\340\354D\000@\234E\000\000pD\000\000\303D\000\340\211D\000\000\311D\000\000\226D\000\200wD\000@EE\000\200\311D\000\200\236D\000\000\226D\000\300\000E\000p\024E\000\200\241D\000 \366D\000\000\341D\000\000\347D\000\000\026E\000\000\264D\000\000\000\000\000\020.E\000\200\211D\000\000nD\0000\007E\0000\005E\000\000\220D\0000\030E\000\000\341D\000\000\224D\000`\225D\000\300\351D\000P\225E\000\200\356D\000\300FE\000\340\tE\000\000\277D\000\300\313D\000\340\323D\000 \265D\000`\214D\000\320?E\000\200&D\000\240\361D\000\200;E\000\300\306D\000\000\257D\000\000/D\000 \245D\000\300\217E\000\300]E\000\300\017E\000\000\000\000\000\240\330D\000\260\254E\000\200\031E\000\000\202E\0000LE\000\000\214D\000\340\271E\000\000\352D\000pGE\000\240\006E\000h\230E\000\200(E\000@\304D\000\240\317D\000\000\264D\000\360\017E\000\200;E\000@\006E\000@\031E\000\200\025E\000\240\216D\000\200[D\000P\024E\000\240\220D\000\020\033E\000\000\\E\000\300ZE\000@?D\000@\204D\000\340\211D\000\300\357D\000\340\364D\000\000\000\000\000\000\327D\000\300\301D\000P\031E\000\000\310D\000`\232D\000\000\207D\000\340\341D\000\200\230D\0000\007E\000`\261D\000\300=D\000\340cE\000@aE\000\340\353D\000`\214D\000\000\264D\000 \367D\000\200OD\000@\007D\000@\003E\000\000\326D\000@\000E\000\020\034E\000@\216D\000\260\006E\000\340\210D\000@\327D\000\000\375D\000\000\302D\000\300\017E\000\220\000E\000\260\014E\000\000XD\000\340,E\000 0E\000\000\353D\000 \377D\000`\320D\000\000\303D\000\200\"E\000\300\033D\000\000\000\000\000\260+E\000@7E\000\300\352D\000\230\304E\000 \332D\000`\263D\000\300\311D\000\000\030E\000\200\265D\000\010\223E\000\200\257D\000@;D\0008\201E\000\200qD\000\000\245D\0000\002E\000\000\026E\000\000\271D\000\000gD\000`\371E\000\200\252D\000\200\312D\000\0009E\000 \237D\0000\025E\000\000\000\000\000@~D\000\200:D\000\220!E\000\000\353D\000\200\273D\000@fD\000\300\332D\000`\214D\000\300\320D\000\300(E\000\300(E\000\300\350D\000@\340D\000\200\315D\000\340\200D\000\200\tD\000\320\nE\000\000\325D\000\200\354D\000@\270D\000\000\210D\000\000\214D\000 \251D\000 2E\000\000/E\000\020\270E\000\000\242D\0000\014E\000\000\034D\000\200\004E\000\000%E\000@\032E\000\000\217D\000\360\003E\000`\253D\000\300\250D\000\200;F\000@\273D\000`\320D\000\240}E\000`\271D\000\300\367D\000\300\235D\000\200\245E\000\200}D\000@\037E\000\300wD\000 \367D\000 \316D\000@\034E\000@\304D\000\000\366D\000@)E\000\340\003E\000\300\313D\000\300\231D\000@\203D\000x\272E\000 \335D\000\000+D\000\000\000\000\000\240\220D\000\300\240D\000\300\024E\000\000\020E\000\200\272D\000\020{E\000\000\231D\000\200\237D\000@\354D\000`\030E\000\000\241D\000\000\201D\000\0006D\000\220/E\000\000JD\000\000wD\000\200\245D\000\300\024E\000\000\202D\000\300\271D\000\340\332D\000\000vD\000\260\021E\000@VD\000\200\254D\000\300\240D\000\000\311D\000\200\003E\000\340\250D\000`\345D\000@\374D\000\300sE\000@`D\000\300\016E\000\020\267E\000\200\004E\000\300OE\000\350\255E\000\3408E\000\200\360D\000\000\000\000\000\340\030E\000\220\025E\000\220\005E\000@\261E\000@\334D\000\3005D\000\2007D\000\340\227D\000\200\204D\000\240\223D\000\000\266D\000\340\206D\000\340\244D\000\000\234D\000\240\tE\000\220\037E\000\300\350D\000\000/D\000`\006E\000\000\363D\000@\234E\000\360\276E\000\340\255D\000 \023E\000\000\231D\000`\365D\000@\334D\000@\260D\000\000FD\000\360 F\000\240\327D\000\200\310D\000\240 E\000P\001E\000\200\355D\000\000\022E\000 kE\000\000\372D\000\000\334D\000paE\000@\220D\000\300\005E\000\020#E\000\000gD\000`{E\000\200\324D\000`\347D\000@\304D\000\300\022D\000\020\222E\0000\000E\000\240\340D\000\220\030E\000\200\257D\000\360\023E\000\000MD\000@\034E\000\2004D\000\000\303D\000  E\000@VD\000\300BE\000\020\"E\000\000\234D\000\300\313D\000P\037E\000\000\266D\000\020<E\000\260RE\000\300xD\000@\035D\000P\023E\000\240\246D\000`\302D\000\310\246E\000 \000E\000\000\000\000\000ptE\000@\356D\000\200\273E\000\260\004E\000\320\000E\000\200\304D\000\300\203D\000\0004D\000@\202D\000`\323D\000 \001E\000\000aD\000\004\030F\000\340\375D\000\3003E\000 \232D\000\000\230D\000 \333D\000\200)D\000\360\nE\000\2008E\000\300^D\000\220FE\000\000\000\000\000\200\223D\000\320pE\000\300\246D\000\200\030E\000\300]D\000pnE\000\000\226D\000\000/D\000\200{D\000\340\306D\000\340\306D\000`\217D\000 3E\000\360\'E\000\200\225D\000\300rD\000\200\211D\000@\203D\000\2402E\000`\356D\000\000\360D\000\000jD\000\340\302D\000\000\363D\000\370\tF\000\240\226E\000`\352F\000x\341E\000\300\025E\000 \031F\000\340\300D\000 \242D\000\340\tE\000 \216D\000\000\365C\000`\020E\000\340\252D\000\200\\D\000\340\314D\000\000CE\000\200\263D\000\200\277D\000\000\341D\000@\216D\000`\266D\000\200\"E\000\340\376D\000\340\262D\000\000\341D\000\000\250D\000\340\003E\000 \233D\000\000\355D\000\340\257D\000\340\230D\0000\236E\000`\237D\000\200\021D\000\000KD\000\000\325D\000\340\016E\000 \200E\000\240\314D\000\200\355D\000\000\000\000\000`\355D\000@\003E\000\200\026E\000\000\007D\000 \277E\000\240%E\000\300\325D\000\000\223D\000\340\305D\000\200\234D\000\000\234D\000\300`D\000\000\214D\000\000aD\0000%E\000\340\326D\000\300\240D\000\200\201D\000\000\221D\000\200(E\000@\013E\000\000\301D\000@TD\000\000eD\000\300\036D\000\340\236D\000\220\005E\000\200\203D\000@PE\000\340\252D\000\000\321D\000@\032E\000\300\002E\000\360\002E\000\340\316D\000\300\301D\000\000\217D\000@\311D\000\200\223D\000`\263D\0000}E\000p\010E\000\200\242D\000`\006E\000\340\016E\000\300kD\000\000\357D\000\340\314D\000\200\300D\000@sD\000@lE\000\000\034E\000\000\000\000\000\000\336D\000\260DE\000\000SD\000@\313D\000\200\266D\000\240\245D\000\200qD\000\000gE\000\200\242D\000\240\025E\000\200\034E\000`8E\000\000\334D\000\340\317D\000 AE\000\000\177D\000@\203D\000\000\233D\000\000\246D\000\200\207D\000\000\000\000\000\000zF\000\300\370D\000\000CE\000\340\225D\000\200\371D\000\200\222E\000\340\024E"
      }
    }
  }
}
node {
  name: "SparseTensor/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 3190
          }
          dim {
            size: 2
          }
        }
        tensor_contentt\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \005\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \t\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \n\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\nt\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "SparseTensor/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3190
          }
        }
        string_val: "95136"
        string_val: "94502"
        string_val: "94553"
        string_val: "94027"
        string_val: "94587"
        string_val: "94702"
        string_val: "94703"
        string_val: "94553"
        string_val: "95436"
        string_val: "95132"
        string_val: "95206"
        string_val: "95687"
        string_val: "95124"
        string_val: "95918"
        string_val: "94027"
        string_val: "95219"
        string_val: "95122"
        string_val: "95620"
        string_val: "95037"
        string_val: "95127"
        string_val: "95112"
        string_val: "95023"
        string_val: "95010"
        string_val: "94702"
        string_val: "95918"
        string_val: "94503"
        string_val: "95666"
        string_val: "94110"
        string_val: "94158"
        string_val: "94507"
        string_val: "94107"
        string_val: "94118"
        string_val: "95112"
        string_val: "94585"
        string_val: "94511"
        string_val: "94102"
        string_val: "95688"
        string_val: "94509"
        string_val: "95688"
        string_val: "95694"
        string_val: "95070"
        string_val: "94515"
        string_val: "95206"
        string_val: "95014"
        string_val: "94515"
        string_val: "95076"
        string_val: "95401"
        string_val: "95046"
        string_val: "95003"
        string_val: "95130"
        string_val: "95422"
        string_val: "95367"
        string_val: "94533"
        string_val: "95139"
        string_val: "94520"
        string_val: "94589"
        string_val: "94061"
        string_val: "95687"
        string_val: "95134"
        string_val: "95404"
        string_val: "94158"
        string_val: "94904"
        string_val: "94014"
        string_val: "94133"
        string_val: "94571"
        string_val: "95620"
        string_val: "94022"
        string_val: "95110"
        string_val: "94547"
        string_val: "94551"
        string_val: "93292"
        string_val: "95376"
        string_val: "95134"
        string_val: "94574"
        string_val: "95210"
        string_val: "94603"
        string_val: "94536"
        string_val: "94022"
        string_val: "95204"
        string_val: "94558"
        string_val: "93292"
        string_val: "95422"
        string_val: "94517"
        string_val: "94515"
        string_val: "94603"
        string_val: "94060"
        string_val: "95134"
        string_val: "94920"
        string_val: "94019"
        string_val: "94086"
        string_val: "94530"
        string_val: "89431"
        string_val: "94506"
        string_val: "94015"
        string_val: "95020"
        string_val: "95050"
        string_val: "94574"
        string_val: "95010"
        string_val: "95136"
        string_val: "94563"
        string_val: "95405"
        string_val: "94519"
        string_val: "95650"
        string_val: "95240"
        string_val: "94903"
        string_val: "94117"
        string_val: "95117"
        string_val: "95409"
        string_val: "95242"
        string_val: "94030"
        string_val: "94541"
        string_val: "94110"
        string_val: "94117"
        string_val: "95003"
        string_val: "94066"
        string_val: "95004"
        string_val: "94920"
        string_val: "95125"
        string_val: "94110"
        string_val: "94708"
        string_val: "94547"
        string_val: "94585"
        string_val: "95918"
        string_val: "94965"
        string_val: "95014"
        string_val: "95134"
        string_val: "95205"
        string_val: "95050"
        string_val: "94803"
        string_val: "95127"
        string_val: "94515"
        string_val: "94509"
        string_val: "94572"
        string_val: "95497"
        string_val: "95207"
        string_val: "95450"
        string_val: "94066"
        string_val: "95131"
        string_val: "94903"
        string_val: "21401"
        string_val: "95376"
        string_val: "94044"
        string_val: "95136"
        string_val: "94928"
        string_val: "95023"
        string_val: "94582"
        string_val: "94803"
        string_val: "94118"
        string_val: "95065"
        string_val: "94089"
        string_val: "95135"
        string_val: "94941"
        string_val: "94577"
        string_val: "95403"
        string_val: "95215"
        string_val: "94121"
        string_val: "94518"
        string_val: "94550"
        string_val: "93292"
        string_val: "95118"
        string_val: "94005"
        string_val: "94585"
        string_val: "95202"
        string_val: "94526"
        string_val: "95125"
        string_val: "94536"
        string_val: "95450"
        string_val: "94505"
        string_val: "95376"
        string_val: "94118"
        string_val: "94551"
        string_val: "94586"
        string_val: "94595"
        string_val: "95110"
        string_val: "95008"
        string_val: "94553"
        string_val: "94521"
        string_val: "94931"
        string_val: "94566"
        string_val: "93292"
        string_val: "95497"
        string_val: "94530"
        string_val: "95616"
        string_val: "94515"
        string_val: "94115"
        string_val: "95062"
        string_val: "94970"
        string_val: "94121"
        string_val: "94806"
        string_val: "94606"
        string_val: "97701"
        string_val: "94552"
        string_val: "94619"
        string_val: "94043"
        string_val: "95131"
        string_val: "95220"
        string_val: "94507"
        string_val: "94510"
        string_val: "94952"
        string_val: "95476"
        string_val: "94117"
        string_val: "95445"
        string_val: "95361"
        string_val: "94946"
        string_val: "94062"
        string_val: "95118"
        string_val: "95688"
        string_val: "94612"
        string_val: "95131"
        string_val: "94038"
        string_val: "94024"
        string_val: "95648"
        string_val: "94085"
        string_val: "95135"
        string_val: "94080"
        string_val: "94509"
        string_val: "95351"
        string_val: "94536"
        string_val: "94531"
        string_val: "95050"
        string_val: "95445"
        string_val: "94118"
        string_val: "94611"
        string_val: "94541"
        string_val: "94572"
        string_val: "94025"
        string_val: "94703"
        string_val: "95377"
        string_val: "95125"
        string_val: "94086"
        string_val: "46123"
        string_val: "94107"
        string_val: "95030"
        string_val: "95252"
        string_val: "95391"
        string_val: "94508"
        string_val: "94945"
        string_val: "94546"
        string_val: "94518"
        string_val: "94563"
        string_val: "95377"
        string_val: "95367"
        string_val: "95207"
        string_val: "95203"
        string_val: "95133"
        string_val: "94547"
        string_val: "95212"
        string_val: "95361"
        string_val: "94702"
        string_val: "94608"
        string_val: "94546"
        string_val: "95227"
        string_val: "95407"
        string_val: "93292"
        string_val: "95136"
        string_val: "95425"
        string_val: "21401"
        string_val: "95127"
        string_val: "95618"
        string_val: "95035"
        string_val: "94533"
        string_val: "94523"
        string_val: "95252"
        string_val: "94044"
        string_val: "95445"
        string_val: "94080"
        string_val: "94102"
        string_val: "94061"
        string_val: "94103"
        string_val: "94609"
        string_val: "94585"
        string_val: "94115"
        string_val: "95688"
        string_val: "94930"
        string_val: "94547"
        string_val: "94503"
        string_val: "94534"
        string_val: "95648"
        string_val: "94015"
        string_val: "94552"
        string_val: "95337"
        string_val: "95242"
        string_val: "95054"
        string_val: "95337"
        string_val: "94563"
        string_val: "94941"
        string_val: "95120"
        string_val: "95116"
        string_val: "95212"
        string_val: "95422"
        string_val: "95062"
        string_val: "94924"
        string_val: "94080"
        string_val: "94518"
        string_val: "94014"
        string_val: "95045"
        string_val: "94509"
        string_val: "95212"
        string_val: "95409"
        string_val: "94550"
        string_val: "94531"
        string_val: "95258"
        string_val: "94577"
        string_val: "94599"
        string_val: "94603"
        string_val: "94587"
        string_val: "94030"
        string_val: "95648"
        string_val: "94131"
        string_val: "94105"
        string_val: "95018"
        string_val: "95060"
        string_val: "94560"
        string_val: "95111"
        string_val: "94947"
        string_val: "94108"
        string_val: "95135"
        string_val: "95123"
        string_val: "95401"
        string_val: "95128"
        string_val: "94708"
        string_val: "94086"
        string_val: "95628"
        string_val: "95472"
        string_val: "94559"
        string_val: "94544"
        string_val: "94590"
        string_val: "94608"
        string_val: "94403"
        string_val: "94132"
        string_val: "94508"
        string_val: "94124"
        string_val: "95230"
        string_val: "95018"
        string_val: "95918"
        string_val: "94565"
        string_val: "94089"
        string_val: "94583"
        string_val: "95422"
        string_val: "95014"
        string_val: "94609"
        string_val: "95023"
        string_val: "95003"
        string_val: "95367"
        string_val: "94925"
        string_val: "95206"
        string_val: "94133"
        string_val: "95648"
        string_val: "89431"
        string_val: "95035"
        string_val: "94560"
        string_val: "94928"
        string_val: "94010"
        string_val: "95497"
        string_val: "94132"
        string_val: "95062"
        string_val: "95425"
        string_val: "94041"
        string_val: "94578"
        string_val: "94123"
        string_val: "95220"
        string_val: "94123"
        string_val: "94563"
        string_val: "95252"
        string_val: "95062"
        string_val: "95320"
        string_val: "94931"
        string_val: "94505"
        string_val: "94103"
        string_val: "95401"
        string_val: "94037"
        string_val: "94112"
        string_val: "95019"
        string_val: "95008"
        string_val: "94061"
        string_val: "95448"
        string_val: "95336"
        string_val: "89431"
        string_val: "94526"
        string_val: "94618"
        string_val: "95030"
        string_val: "94596"
        string_val: "94080"
        string_val: "94080"
        string_val: "94592"
        string_val: "94404"
        string_val: "95918"
        string_val: "94960"
        string_val: "95076"
        string_val: "94806"
        string_val: "95351"
        string_val: "95461"
        string_val: "94903"
        string_val: "95320"
        string_val: "94706"
        string_val: "94565"
        string_val: "95366"
        string_val: "95376"
        string_val: "89431"
        string_val: "94601"
        string_val: "95121"
        string_val: "94587"
        string_val: "95204"
        string_val: "94513"
        string_val: "94956"
        string_val: "94585"
        string_val: "95032"
        string_val: "94002"
        string_val: "94558"
        string_val: "94526"
        string_val: "95330"
        string_val: "94127"
        string_val: "94952"
        string_val: "95367"
        string_val: "94595"
        string_val: "94556"
        string_val: "94132"
        string_val: "95004"
        string_val: "94578"
        string_val: "95123"
        string_val: "95419"
        string_val: "94591"
        string_val: "95249"
        string_val: "94534"
        string_val: "95014"
        string_val: "94533"
        string_val: "95134"
        string_val: "94080"
        string_val: "94509"
        string_val: "95008"
        string_val: "95076"
        string_val: "94020"
        string_val: "95377"
        string_val: "95351"
        string_val: "94541"
        string_val: "94019"
        string_val: "94525"
        string_val: "95202"
        string_val: "94534"
        string_val: "95126"
        string_val: "94402"
        string_val: "94085"
        string_val: "95204"
        string_val: "94024"
        string_val: "94805"
        string_val: "94063"
        string_val: "94928"
        string_val: "95012"
        string_val: "94025"
        string_val: "94065"
        string_val: "94123"
        string_val: "94509"
        string_val: "94127"
        string_val: "95035"
        string_val: "94565"
        string_val: "95618"
        string_val: "94606"
        string_val: "95694"
        string_val: "95404"
        string_val: "94947"
        string_val: "94946"
        string_val: "94107"
        string_val: "94541"
        string_val: "94582"
        string_val: "94402"
        string_val: "95497"
        string_val: "94619"
        string_val: "95210"
        string_val: "94547"
        string_val: "94103"
        string_val: "95401"
        string_val: "94116"
        string_val: "94116"
        string_val: "94025"
        string_val: "95132"
        string_val: "94060"
        string_val: "94965"
        string_val: "94920"
        string_val: "94586"
        string_val: "95258"
        string_val: "95124"
        string_val: "94107"
        string_val: "95004"
        string_val: "95127"
        string_val: "95123"
        string_val: "94536"
        string_val: "94945"
        string_val: "94002"
        string_val: "94501"
        string_val: "95351"
        string_val: "94523"
        string_val: "95448"
        string_val: "94087"
        string_val: "94545"
        string_val: "94030"
        string_val: "46123"
        string_val: "94510"
        string_val: "94805"
        string_val: "95148"
        string_val: "94595"
        string_val: "94541"
        string_val: "95405"
        string_val: "94596"
        string_val: "95122"
        string_val: "94591"
        string_val: "94123"
        string_val: "94903"
        string_val: "94511"
        string_val: "94952"
        string_val: "95014"
        string_val: "95112"
        string_val: "94904"
        string_val: "94518"
        string_val: "94530"
        string_val: "94536"
        string_val: "94945"
        string_val: "94089"
        string_val: "94580"
        string_val: "94903"
        string_val: "95037"
        string_val: "94507"
        string_val: "94107"
        string_val: "94806"
        string_val: "94531"
        string_val: "94601"
        string_val: "95030"
        string_val: "95030"
        string_val: "95242"
        string_val: "95111"
        string_val: "94404"
        string_val: "95006"
        string_val: "94607"
        string_val: "94024"
        string_val: "94505"
        string_val: "95065"
        string_val: "95124"
        string_val: "95421"
        string_val: "94025"
        string_val: "94558"
        string_val: "95066"
        string_val: "94542"
        string_val: "94587"
        string_val: "94301"
        string_val: "94544"
        string_val: "95030"
        string_val: "95366"
        string_val: "94070"
        string_val: "95125"
        string_val: "21401"
        string_val: "94612"
        string_val: "94063"
        string_val: "94928"
        string_val: "93292"
        string_val: "94536"
        string_val: "94118"
        string_val: "94801"
        string_val: "95010"
        string_val: "94544"
        string_val: "95112"
        string_val: "94506"
        string_val: "95918"
        string_val: "95448"
        string_val: "95023"
        string_val: "95005"
        string_val: "94102"
        string_val: "95409"
        string_val: "94607"
        string_val: "94947"
        string_val: "94611"
        string_val: "95066"
        string_val: "94112"
        string_val: "94903"
        string_val: "93292"
        string_val: "95045"
        string_val: "94952"
        string_val: "94133"
        string_val: "94611"
        string_val: "94550"
        string_val: "94707"
        string_val: "95117"
        string_val: "94925"
        string_val: "95441"
        string_val: "95351"
        string_val: "94103"
        string_val: "95252"
        string_val: "94590"
        string_val: "95628"
        string_val: "94086"
        string_val: "95206"
        string_val: "94549"
        string_val: "94306"
        string_val: "95210"
        string_val: "95118"
        string_val: "94002"
        string_val: "94571"
        string_val: "90266"
        string_val: "95450"
        string_val: "94538"
        string_val: "95227"
        string_val: "95403"
        string_val: "94102"
        string_val: "95616"
        string_val: "94103"
        string_val: "94546"
        string_val: "94542"
        string_val: "94115"
        string_val: "95050"
        string_val: "94060"
        string_val: "95351"
        string_val: "94619"
        string_val: "94589"
        string_val: "95122"
        string_val: "94928"
        string_val: "94519"
        string_val: "94111"
        string_val: "94121"
        string_val: "94022"
        string_val: "95409"
        string_val: "95125"
        string_val: "94025"
        string_val: "95219"
        string_val: "94105"
        string_val: "90266"
        string_val: "95129"
        string_val: "95497"
        string_val: "89431"
        string_val: "94566"
        string_val: "95131"
        string_val: "95616"
        string_val: "94965"
        string_val: "94024"
        string_val: "94903"
        string_val: "97701"
        string_val: "95121"
        string_val: "94590"
        string_val: "94595"
        string_val: "94519"
        string_val: "94080"
        string_val: "94547"
        string_val: "95361"
        string_val: "94945"
        string_val: "95110"
        string_val: "95330"
        string_val: "95054"
        string_val: "94536"
        string_val: "94904"
        string_val: "94112"
        string_val: "94595"
        string_val: "95409"
        string_val: "94538"
        string_val: "90266"
        string_val: "95620"
        string_val: "95037"
        string_val: "95037"
        string_val: "94580"
        string_val: "95465"
        string_val: "95367"
        string_val: "94002"
        string_val: "95202"
        string_val: "94903"
        string_val: "95134"
        string_val: "95014"
        string_val: "94080"
        string_val: "95361"
        string_val: "95407"
        string_val: "94123"
        string_val: "95132"
        string_val: "94951"
        string_val: "94528"
        string_val: "95220"
        string_val: "94531"
        string_val: "94565"
        string_val: "94534"
        string_val: "94066"
        string_val: "94110"
        string_val: "94510"
        string_val: "94123"
        string_val: "94080"
        string_val: "95403"
        string_val: "94127"
        string_val: "95618"
        string_val: "95131"
        string_val: "95126"
        string_val: "94402"
        string_val: "94306"
        string_val: "94062"
        string_val: "94087"
        string_val: "94066"
        string_val: "94024"
        string_val: "94109"
        string_val: "94541"
        string_val: "95258"
        string_val: "94555"
        string_val: "94598"
        string_val: "95117"
        string_val: "95366"
        string_val: "95405"
        string_val: "94505"
        string_val: "94610"
        string_val: "95045"
        string_val: "95616"
        string_val: "95051"
        string_val: "95220"
        string_val: "94574"
        string_val: "95135"
        string_val: "94610"
        string_val: "94015"
        string_val: "95116"
        string_val: "89431"
        string_val: "95476"
        string_val: "94702"
        string_val: "94920"
        string_val: "95351"
        string_val: "94015"
        string_val: "94972"
        string_val: "94957"
        string_val: "94580"
        string_val: "95462"
        string_val: "95020"
        string_val: "94539"
        string_val: "94401"
        string_val: "89431"
        string_val: "95422"
        string_val: "95112"
        string_val: "94544"
        string_val: "94111"
        string_val: "93292"
        string_val: "94577"
        string_val: "95476"
        string_val: "94947"
        string_val: "94923"
        string_val: "94598"
        string_val: "95618"
        string_val: "95126"
        string_val: "94970"
        string_val: "94301"
        string_val: "95043"
        string_val: "94109"
        string_val: "94571"
        string_val: "94401"
        string_val: "46123"
        string_val: "94010"
        string_val: "94590"
        string_val: "94123"
        string_val: "95032"
        string_val: "95366"
        string_val: "94518"
        string_val: "94558"
        string_val: "95127"
        string_val: "94519"
        string_val: "95002"
        string_val: "94952"
        string_val: "95376"
        string_val: "94605"
        string_val: "94511"
        string_val: "95065"
        string_val: "94550"
        string_val: "94579"
        string_val: "95023"
        string_val: "94021"
        string_val: "94107"
        string_val: "95618"
        string_val: "94109"
        string_val: "94577"
        string_val: "94608"
        string_val: "94702"
        string_val: "95204"
        string_val: "95046"
        string_val: "95367"
        string_val: "94605"
        string_val: "94578"
        string_val: "94559"
        string_val: "95337"
        string_val: "94608"
        string_val: "21401"
        string_val: "93501"
        string_val: "94022"
        string_val: "94563"
        string_val: "94506"
        string_val: "94508"
        string_val: "90266"
        string_val: "95240"
        string_val: "95209"
        string_val: "94538"
        string_val: "94027"
        string_val: "95062"
        string_val: "95825"
        string_val: "94025"
        string_val: "95240"
        string_val: "94402"
        string_val: "94089"
        string_val: "94558"
        string_val: "95405"
        string_val: "94401"
        string_val: "95005"
        string_val: "95136"
        string_val: "95376"
        string_val: "94565"
        string_val: "94583"
        string_val: "95688"
        string_val: "95060"
        string_val: "95035"
        string_val: "95127"
        string_val: "95240"
        string_val: "94903"
        string_val: "95409"
        string_val: "94010"
        string_val: "94108"
        string_val: "95066"
        string_val: "94401"
        string_val: "95628"
        string_val: "94804"
        string_val: "95111"
        string_val: "94024"
        string_val: "94579"
        string_val: "93292"
        string_val: "94118"
        string_val: "94121"
        string_val: "94608"
        string_val: "94108"
        string_val: "94080"
        string_val: "94015"
        string_val: "94507"
        string_val: "94038"
        string_val: "94559"
        string_val: "94945"
        string_val: "94595"
        string_val: "94041"
        string_val: "95422"
        string_val: "95448"
        string_val: "95330"
        string_val: "94103"
        string_val: "95825"
        string_val: "95111"
        string_val: "95240"
        string_val: "94108"
        string_val: "94030"
        string_val: "95131"
        string_val: "94806"
        string_val: "94118"
        string_val: "94402"
        string_val: "93292"
        string_val: "95628"
        string_val: "95376"
        string_val: "94515"
        string_val: "94107"
        string_val: "94589"
        string_val: "94102"
        string_val: "94706"
        string_val: "94070"
        string_val: "95125"
        string_val: "95023"
        string_val: "95690"
        string_val: "89431"
        string_val: "94804"
        string_val: "95120"
        string_val: "94803"
        string_val: "95051"
        string_val: "95112"
        string_val: "94603"
        string_val: "94038"
        string_val: "94599"
        string_val: "94571"
        string_val: "94112"
        string_val: "94534"
        string_val: "94599"
        string_val: "94533"
        string_val: "94105"
        string_val: "94102"
        string_val: "95128"
        string_val: "95219"
        string_val: "95116"
        string_val: "95409"
        string_val: "95123"
        string_val: "95010"
        string_val: "94925"
        string_val: "94038"
        string_val: "95336"
        string_val: "95403"
        string_val: "94060"
        string_val: "94583"
        string_val: "95204"
        string_val: "95010"
        string_val: "94303"
        string_val: "94801"
        string_val: "95060"
        string_val: "93292"
        string_val: "95132"
        string_val: "94118"
        string_val: "94110"
        string_val: "89431"
        string_val: "97701"
        string_val: "95648"
        string_val: "95376"
        string_val: "94517"
        string_val: "94103"
        string_val: "94544"
        string_val: "94552"
        string_val: "94928"
        string_val: "94044"
        string_val: "94601"
        string_val: "95361"
        string_val: "94957"
        string_val: "94086"
        string_val: "94805"
        string_val: "95448"
        string_val: "94565"
        string_val: "94109"
        string_val: "94589"
        string_val: "95461"
        string_val: "94502"
        string_val: "95254"
        string_val: "95330"
        string_val: "94063"
        string_val: "95035"
        string_val: "94102"
        string_val: "94080"
        string_val: "95045"
        string_val: "94965"
        string_val: "94080"
        string_val: "94115"
        string_val: "94558"
        string_val: "94574"
        string_val: "94102"
        string_val: "95690"
        string_val: "94949"
        string_val: "94403"
        string_val: "95050"
        string_val: "95130"
        string_val: "95014"
        string_val: "95391"
        string_val: "94611"
        string_val: "94402"
        string_val: "94937"
        string_val: "95442"
        string_val: "94608"
        string_val: "95650"
        string_val: "21401"
        string_val: "94549"
        string_val: "94087"
        string_val: "94559"
        string_val: "94707"
        string_val: "94110"
        string_val: "95650"
        string_val: "95131"
        string_val: "94530"
        string_val: "94608"
        string_val: "94920"
        string_val: "95008"
        string_val: "95121"
        string_val: "94924"
        string_val: "95377"
        string_val: "94609"
        string_val: "94080"
        string_val: "95032"
        string_val: "95361"
        string_val: "94541"
        string_val: "94517"
        string_val: "95476"
        string_val: "93501"
        string_val: "94507"
        string_val: "94513"
        string_val: "94578"
        string_val: "94947"
        string_val: "94010"
        string_val: "94520"
        string_val: "94109"
        string_val: "95403"
        string_val: "95126"
        string_val: "95206"
        string_val: "94545"
        string_val: "94086"
        string_val: "95070"
        string_val: "95202"
        string_val: "94708"
        string_val: "95448"
        string_val: "95122"
        string_val: "94518"
        string_val: "95125"
        string_val: "94957"
        string_val: "94949"
        string_val: "94567"
        string_val: "94920"
        string_val: "95476"
        string_val: "95037"
        string_val: "95148"
        string_val: "94941"
        string_val: "95231"
        string_val: "95409"
        string_val: "95442"
        string_val: "95066"
        string_val: "94404"
        string_val: "94952"
        string_val: "94574"
        string_val: "95361"
        string_val: "94945"
        string_val: "95066"
        string_val: "94533"
        string_val: "94024"
        string_val: "94806"
        string_val: "94510"
        string_val: "95118"
        string_val: "94107"
        string_val: "95666"
        string_val: "94965"
        string_val: "95825"
        string_val: "94937"
        string_val: "94928"
        string_val: "95476"
        string_val: "95123"
        string_val: "95120"
        string_val: "94306"
        string_val: "95128"
        string_val: "89431"
        string_val: "94027"
        string_val: "95336"
        string_val: "93292"
        string_val: "94531"
        string_val: "95070"
        string_val: "94118"
        string_val: "95135"
        string_val: "94131"
        string_val: "94030"
        string_val: "94103"
        string_val: "95204"
        string_val: "94043"
        string_val: "94708"
        string_val: "95436"
        string_val: "94611"
        string_val: "95111"
        string_val: "94111"
        string_val: "95065"
        string_val: "94703"
        string_val: "94508"
        string_val: "94920"
        string_val: "94131"
        string_val: "95242"
        string_val: "95422"
        string_val: "95206"
        string_val: "95450"
        string_val: "95129"
        string_val: "94599"
        string_val: "95032"
        string_val: "95252"
        string_val: "94579"
        string_val: "94110"
        string_val: "95112"
        string_val: "94111"
        string_val: "94706"
        string_val: "94115"
        string_val: "94960"
        string_val: "94025"
        string_val: "94579"
        string_val: "94558"
        string_val: "94070"
        string_val: "94607"
        string_val: "95205"
        string_val: "94510"
        string_val: "94904"
        string_val: "94550"
        string_val: "94574"
        string_val: "95628"
        string_val: "94015"
        string_val: "95005"
        string_val: "94030"
        string_val: "95258"
        string_val: "94706"
        string_val: "94567"
        string_val: "95128"
        string_val: "94121"
        string_val: "95116"
        string_val: "94555"
        string_val: "94028"
        string_val: "94560"
        string_val: "94577"
        string_val: "94531"
        string_val: "95014"
        string_val: "94103"
        string_val: "95148"
        string_val: "94303"
        string_val: "95404"
        string_val: "95204"
        string_val: "94080"
        string_val: "94804"
        string_val: "95304"
        string_val: "94010"
        string_val: "94402"
        string_val: "94015"
        string_val: "94567"
        string_val: "94521"
        string_val: "95825"
        string_val: "94107"
        string_val: "94534"
        string_val: "94553"
        string_val: "94619"
        string_val: "94530"
        string_val: "94960"
        string_val: "94607"
        string_val: "95425"
        string_val: "95337"
        string_val: "94804"
        string_val: "94117"
        string_val: "95116"
        string_val: "94080"
        string_val: "95210"
        string_val: "95377"
        string_val: "95111"
        string_val: "94124"
        string_val: "94618"
        string_val: "95366"
        string_val: "94509"
        string_val: "95687"
        string_val: "95035"
        string_val: "94549"
        string_val: "94589"
        string_val: "97701"
        string_val: "94605"
        string_val: "94547"
        string_val: "94806"
        string_val: "94589"
        string_val: "94131"
        string_val: "95401"
        string_val: "94517"
        string_val: "95209"
        string_val: "94806"
        string_val: "94930"
        string_val: "94060"
        string_val: "95020"
        string_val: "95112"
        string_val: "94531"
        string_val: "94510"
        string_val: "94105"
        string_val: "95391"
        string_val: "95132"
        string_val: "94565"
        string_val: "94923"
        string_val: "94541"
        string_val: "95361"
        string_val: "94402"
        string_val: "94024"
        string_val: "94103"
        string_val: "94619"
        string_val: "95023"
        string_val: "95076"
        string_val: "94621"
        string_val: "95304"
        string_val: "95376"
        string_val: "94952"
        string_val: "95111"
        string_val: "94507"
        string_val: "95628"
        string_val: "94608"
        string_val: "94937"
        string_val: "94070"
        string_val: "94070"
        string_val: "95240"
        string_val: "94102"
        string_val: "94590"
        string_val: "94580"
        string_val: "95209"
        string_val: "94402"
        string_val: "94954"
        string_val: "89431"
        string_val: "94117"
        string_val: "94065"
        string_val: "94507"
        string_val: "95206"
        string_val: "95127"
        string_val: "95240"
        string_val: "94080"
        string_val: "94555"
        string_val: "95010"
        string_val: "94559"
        string_val: "94403"
        string_val: "94946"
        string_val: "95497"
        string_val: "94801"
        string_val: "94928"
        string_val: "94553"
        string_val: "94505"
        string_val: "94066"
        string_val: "94508"
        string_val: "95403"
        string_val: "94404"
        string_val: "95219"
        string_val: "94551"
        string_val: "95127"
        string_val: "95111"
        string_val: "95135"
        string_val: "95030"
        string_val: "95215"
        string_val: "95465"
        string_val: "95118"
        string_val: "94080"
        string_val: "95242"
        string_val: "95476"
        string_val: "94515"
        string_val: "94061"
        string_val: "94550"
        string_val: "95023"
        string_val: "95690"
        string_val: "95125"
        string_val: "94903"
        string_val: "94605"
        string_val: "94404"
        string_val: "94109"
        string_val: "94703"
        string_val: "95135"
        string_val: "94574"
        string_val: "94531"
        string_val: "94805"
        string_val: "95111"
        string_val: "95212"
        string_val: "95125"
        string_val: "95236"
        string_val: "95240"
        string_val: "95139"
        string_val: "94515"
        string_val: "94585"
        string_val: "95120"
        string_val: "95391"
        string_val: "95409"
        string_val: "94503"
        string_val: "95628"
        string_val: "95648"
        string_val: "94158"
        string_val: "95206"
        string_val: "94901"
        string_val: "94510"
        string_val: "94552"
        string_val: "95616"
        string_val: "95304"
        string_val: "95240"
        string_val: "95209"
        string_val: "95405"
        string_val: "94546"
        string_val: "94530"
        string_val: "94070"
        string_val: "95050"
        string_val: "95023"
        string_val: "94301"
        string_val: "94028"
        string_val: "94526"
        string_val: "95337"
        string_val: "95005"
        string_val: "95632"
        string_val: "95401"
        string_val: "93292"
        string_val: "94590"
        string_val: "95110"
        string_val: "94530"
        string_val: "94598"
        string_val: "94572"
        string_val: "95051"
        string_val: "94946"
        string_val: "94062"
        string_val: "94533"
        string_val: "94107"
        string_val: "94121"
        string_val: "94965"
        string_val: "95008"
        string_val: "97701"
        string_val: "94595"
        string_val: "95111"
        string_val: "94080"
        string_val: "94301"
        string_val: "94949"
        string_val: "94022"
        string_val: "94571"
        string_val: "95361"
        string_val: "94020"
        string_val: "93292"
        string_val: "95122"
        string_val: "94923"
        string_val: "95436"
        string_val: "95650"
        string_val: "94041"
        string_val: "95407"
        string_val: "95076"
        string_val: "94565"
        string_val: "95126"
        string_val: "94560"
        string_val: "94903"
        string_val: "94621"
        string_val: "93292"
        string_val: "94531"
        string_val: "95116"
        string_val: "95123"
        string_val: "95230"
        string_val: "95304"
        string_val: "95240"
        string_val: "95124"
        string_val: "94536"
        string_val: "94577"
        string_val: "94105"
        string_val: "95133"
        string_val: "94591"
        string_val: "94301"
        string_val: "95497"
        string_val: "95122"
        string_val: "94116"
        string_val: "94402"
        string_val: "95005"
        string_val: "94901"
        string_val: "95330"
        string_val: "95132"
        string_val: "95442"
        string_val: "95124"
        string_val: "94706"
        string_val: "94621"
        string_val: "94105"
        string_val: "94015"
        string_val: "94542"
        string_val: "94595"
        string_val: "95120"
        string_val: "94608"
        string_val: "95129"
        string_val: "95694"
        string_val: "94590"
        string_val: "95113"
        string_val: "95207"
        string_val: "95476"
        string_val: "94610"
        string_val: "95125"
        string_val: "95054"
        string_val: "95448"
        string_val: "94015"
        string_val: "95120"
        string_val: "94903"
        string_val: "94519"
        string_val: "94587"
        string_val: "93292"
        string_val: "94116"
        string_val: "94544"
        string_val: "94102"
        string_val: "94901"
        string_val: "95472"
        string_val: "95650"
        string_val: "95060"
        string_val: "94531"
        string_val: "94134"
        string_val: "94131"
        string_val: "94553"
        string_val: "94132"
        string_val: "95133"
        string_val: "94928"
        string_val: "94582"
        string_val: "95252"
        string_val: "94621"
        string_val: "94402"
        string_val: "95202"
        string_val: "94574"
        string_val: "94118"
        string_val: "95694"
        string_val: "94040"
        string_val: "94550"
        string_val: "95497"
        string_val: "90266"
        string_val: "94501"
        string_val: "95442"
        string_val: "94040"
        string_val: "89431"
        string_val: "95116"
        string_val: "94301"
        string_val: "94508"
        string_val: "95240"
        string_val: "95366"
        string_val: "95003"
        string_val: "94509"
        string_val: "94585"
        string_val: "95366"
        string_val: "95445"
        string_val: "94544"
        string_val: "95006"
        string_val: "95010"
        string_val: "94134"
        string_val: "95122"
        string_val: "94505"
        string_val: "94553"
        string_val: "95404"
        string_val: "94531"
        string_val: "94602"
        string_val: "94952"
        string_val: "94621"
        string_val: "94923"
        string_val: "94611"
        string_val: "95148"
        string_val: "95037"
        string_val: "95035"
        string_val: "94903"
        string_val: "95441"
        string_val: "97701"
        string_val: "95014"
        string_val: "94528"
        string_val: "94513"
        string_val: "94595"
        string_val: "94589"
        string_val: "95127"
        string_val: "94010"
        string_val: "94027"
        string_val: "95070"
        string_val: "94131"
        string_val: "94904"
        string_val: "95219"
        string_val: "95113"
        string_val: "95008"
        string_val: "95051"
        string_val: "94607"
        string_val: "95023"
        string_val: "95207"
        string_val: "95366"
        string_val: "95694"
        string_val: "94127"
        string_val: "94952"
        string_val: "94904"
        string_val: "95918"
        string_val: "94133"
        string_val: "95330"
        string_val: "94599"
        string_val: "95445"
        string_val: "94596"
        string_val: "94526"
        string_val: "94124"
        string_val: "94103"
        string_val: "94544"
        string_val: "94303"
        string_val: "95409"
        string_val: "94303"
        string_val: "94920"
        string_val: "95054"
        string_val: "94501"
        string_val: "95005"
        string_val: "95008"
        string_val: "94563"
        string_val: "94027"
        string_val: "94519"
        string_val: "94066"
        string_val: "95030"
        string_val: "95076"
        string_val: "94401"
        string_val: "94062"
        string_val: "94403"
        string_val: "89431"
        string_val: "95004"
        string_val: "94523"
        string_val: "94947"
        string_val: "94547"
        string_val: "94509"
        string_val: "94061"
        string_val: "95066"
        string_val: "95648"
        string_val: "95421"
        string_val: "94070"
        string_val: "94525"
        string_val: "94121"
        string_val: "89431"
        string_val: "94020"
        string_val: "94611"
        string_val: "94544"
        string_val: "95422"
        string_val: "94086"
        string_val: "95209"
        string_val: "95062"
        string_val: "93292"
        string_val: "94587"
        string_val: "94019"
        string_val: "95694"
        string_val: "95128"
        string_val: "95117"
        string_val: "94518"
        string_val: "95035"
        string_val: "95376"
        string_val: "94089"
        string_val: "94531"
        string_val: "95425"
        string_val: "94971"
        string_val: "94510"
        string_val: "95032"
        string_val: "95688"
        string_val: "95472"
        string_val: "94533"
        string_val: "94583"
        string_val: "94080"
        string_val: "95403"
        string_val: "94509"
        string_val: "94579"
        string_val: "94109"
        string_val: "94587"
        string_val: "94158"
        string_val: "94102"
        string_val: "94533"
        string_val: "95032"
        string_val: "94022"
        string_val: "95220"
        string_val: "95116"
        string_val: "95051"
        string_val: "95476"
        string_val: "94534"
        string_val: "94526"
        string_val: "95062"
        string_val: "94612"
        string_val: "94521"
        string_val: "95139"
        string_val: "95065"
        string_val: "94577"
        string_val: "95076"
        string_val: "94901"
        string_val: "95118"
        string_val: "94536"
        string_val: "94118"
        string_val: "95062"
        string_val: "94571"
        string_val: "95037"
        string_val: "94566"
        string_val: "95336"
        string_val: "94105"
        string_val: "95070"
        string_val: "95231"
        string_val: "94102"
        string_val: "94015"
        string_val: "94602"
        string_val: "94928"
        string_val: "90266"
        string_val: "94544"
        string_val: "95407"
        string_val: "94530"
        string_val: "95330"
        string_val: "94301"
        string_val: "95116"
        string_val: "94115"
        string_val: "94595"
        string_val: "94402"
        string_val: "94563"
        string_val: "94123"
        string_val: "95422"
        string_val: "95209"
        string_val: "94521"
        string_val: "94550"
        string_val: "94960"
        string_val: "94536"
        string_val: "94061"
        string_val: "94579"
        string_val: "95628"
        string_val: "97701"
        string_val: "95445"
        string_val: "95330"
        string_val: "94080"
        string_val: "95126"
        string_val: "94087"
        string_val: "94518"
        string_val: "95472"
        string_val: "94122"
        string_val: "94506"
        string_val: "94515"
        string_val: "94105"
        string_val: "95215"
        string_val: "94028"
        string_val: "95404"
        string_val: "94118"
        string_val: "94553"
        string_val: "94611"
        string_val: "95123"
        string_val: "21401"
        string_val: "94924"
        string_val: "95204"
        string_val: "94806"
        string_val: "95220"
        string_val: "95054"
        string_val: "94403"
        string_val: "94612"
        string_val: "94117"
        string_val: "95452"
        string_val: "94555"
        string_val: "95117"
        string_val: "94904"
        string_val: "94122"
        string_val: "94121"
        string_val: "95128"
        string_val: "94925"
        string_val: "94542"
        string_val: "95450"
        string_val: "94080"
        string_val: "94544"
        string_val: "95062"
        string_val: "95687"
        string_val: "95003"
        string_val: "95361"
        string_val: "95404"
        string_val: "94109"
        string_val: "94803"
        string_val: "94024"
        string_val: "95421"
        string_val: "93292"
        string_val: "94545"
        string_val: "94606"
        string_val: "94127"
        string_val: "95131"
        string_val: "94579"
        string_val: "95616"
        string_val: "95139"
        string_val: "95037"
        string_val: "94061"
        string_val: "94705"
        string_val: "94551"
        string_val: "94546"
        string_val: "94965"
        string_val: "94591"
        string_val: "95320"
        string_val: "94583"
        string_val: "94503"
        string_val: "95666"
        string_val: "94123"
        string_val: "94555"
        string_val: "94545"
        string_val: "94903"
        string_val: "94970"
        string_val: "94928"
        string_val: "95497"
        string_val: "94404"
        string_val: "95121"
        string_val: "95018"
        string_val: "95404"
        string_val: "94089"
        string_val: "95002"
        string_val: "94507"
        string_val: "95136"
        string_val: "95012"
        string_val: "94587"
        string_val: "95436"
        string_val: "94062"
        string_val: "94941"
        string_val: "95065"
        string_val: "94123"
        string_val: "94595"
        string_val: "94515"
        string_val: "94509"
        string_val: "95148"
        string_val: "94582"
        string_val: "94061"
        string_val: "95694"
        string_val: "94611"
        string_val: "94937"
        string_val: "94606"
        string_val: "94533"
        string_val: "94536"
        string_val: "95122"
        string_val: "94903"
        string_val: "95361"
        string_val: "94103"
        string_val: "94920"
        string_val: "95116"
        string_val: "94952"
        string_val: "95425"
        string_val: "94131"
        string_val: "95336"
        string_val: "94801"
        string_val: "94551"
        string_val: "94801"
        string_val: "94587"
        string_val: "95066"
        string_val: "95231"
        string_val: "94024"
        string_val: "95403"
        string_val: "95110"
        string_val: "95112"
        string_val: "94063"
        string_val: "94027"
        string_val: "95020"
        string_val: "94539"
        string_val: "95404"
        string_val: "95123"
        string_val: "95240"
        string_val: "94123"
        string_val: "94089"
        string_val: "95616"
        string_val: "97701"
        string_val: "95436"
        string_val: "95010"
        string_val: "95062"
        string_val: "94566"
        string_val: "94080"
        string_val: "94025"
        string_val: "94705"
        string_val: "94803"
        string_val: "95020"
        string_val: "94587"
        string_val: "94028"
        string_val: "94903"
        string_val: "94131"
        string_val: "95118"
        string_val: "95004"
        string_val: "95112"
        string_val: "89431"
        string_val: "94549"
        string_val: "94550"
        string_val: "95010"
        string_val: "95336"
        string_val: "95258"
        string_val: "95202"
        string_val: "94531"
        string_val: "94705"
        string_val: "94970"
        string_val: "94065"
        string_val: "95421"
        string_val: "95070"
        string_val: "95825"
        string_val: "94105"
        string_val: "94939"
        string_val: "94306"
        string_val: "94931"
        string_val: "95128"
        string_val: "94952"
        string_val: "95686"
        string_val: "95203"
        string_val: "94089"
        string_val: "95210"
        string_val: "95112"
        string_val: "94806"
        string_val: "94941"
        string_val: "94566"
        string_val: "95461"
        string_val: "94577"
        string_val: "94596"
        string_val: "94028"
        string_val: "94015"
        string_val: "94102"
        string_val: "94536"
        string_val: "95121"
        string_val: "94595"
        string_val: "95361"
        string_val: "95111"
        string_val: "94566"
        string_val: "95202"
        string_val: "95134"
        string_val: "95045"
        string_val: "94103"
        string_val: "94102"
        string_val: "94062"
        string_val: "94060"
        string_val: "95825"
        string_val: "94107"
        string_val: "94122"
        string_val: "95212"
        string_val: "95050"
        string_val: "95123"
        string_val: "94063"
        string_val: "95220"
        string_val: "94803"
        string_val: "90266"
        string_val: "95132"
        string_val: "94517"
        string_val: "94063"
        string_val: "94928"
        string_val: "94553"
        string_val: "94603"
        string_val: "94063"
        string_val: "94609"
        string_val: "94602"
        string_val: "95010"
        string_val: "94536"
        string_val: "94804"
        string_val: "94040"
        string_val: "95070"
        string_val: "89431"
        string_val: "95132"
        string_val: "94089"
        string_val: "95070"
        string_val: "95472"
        string_val: "94566"
        string_val: "95616"
        string_val: "94102"
        string_val: "90266"
        string_val: "94923"
        string_val: "95336"
        string_val: "95618"
        string_val: "95376"
        string_val: "95436"
        string_val: "94920"
        string_val: "94571"
        string_val: "94929"
        string_val: "95240"
        string_val: "94605"
        string_val: "95472"
        string_val: "95648"
        string_val: "94544"
        string_val: "95690"
        string_val: "95127"
        string_val: "95690"
        string_val: "94118"
        string_val: "94601"
        string_val: "94582"
        string_val: "95203"
        string_val: "95377"
        string_val: "95010"
        string_val: "89431"
        string_val: "95687"
        string_val: "95422"
        string_val: "94945"
        string_val: "95210"
        string_val: "94611"
        string_val: "94549"
        string_val: "95135"
        string_val: "94118"
        string_val: "94123"
        string_val: "94014"
        string_val: "94087"
        string_val: "94306"
        string_val: "95632"
        string_val: "94577"
        string_val: "94063"
        string_val: "95018"
        string_val: "94506"
        string_val: "94010"
        string_val: "94923"
        string_val: "95240"
        string_val: "95037"
        string_val: "95409"
        string_val: "95110"
        string_val: "94403"
        string_val: "94610"
        string_val: "94121"
        string_val: "95409"
        string_val: "94044"
        string_val: "95123"
        string_val: "94558"
        string_val: "95130"
        string_val: "90266"
        string_val: "95118"
        string_val: "95120"
        string_val: "94541"
        string_val: "94923"
        string_val: "94601"
        string_val: "95337"
        string_val: "94547"
        string_val: "95377"
        string_val: "94110"
        string_val: "93292"
        string_val: "94946"
        string_val: "94062"
        string_val: "95252"
        string_val: "95125"
        string_val: "94952"
        string_val: "95236"
        string_val: "95207"
        string_val: "94903"
        string_val: "95918"
        string_val: "94559"
        string_val: "94555"
        string_val: "94928"
        string_val: "94930"
        string_val: "95237"
        string_val: "95401"
        string_val: "95465"
        string_val: "95694"
        string_val: "94563"
        string_val: "94005"
        string_val: "94574"
        string_val: "95336"
        string_val: "95132"
        string_val: "95215"
        string_val: "95122"
        string_val: "95361"
        string_val: "95119"
        string_val: "94931"
        string_val: "94590"
        string_val: "94037"
        string_val: "94041"
        string_val: "94577"
        string_val: "94965"
        string_val: "94534"
        string_val: "95320"
        string_val: "95405"
        string_val: "95304"
        string_val: "95112"
        string_val: "94063"
        string_val: "95366"
        string_val: "94515"
        string_val: "94526"
        string_val: "95062"
        string_val: "95203"
        string_val: "94530"
        string_val: "94806"
        string_val: "95134"
        string_val: "94043"
        string_val: "95465"
        string_val: "95694"
        string_val: "95134"
        string_val: "94123"
        string_val: "94601"
        string_val: "94595"
        string_val: "95116"
        string_val: "94133"
        string_val: "94515"
        string_val: "94619"
        string_val: "94547"
        string_val: "94507"
        string_val: "90266"
        string_val: "95006"
        string_val: "95442"
        string_val: "94015"
        string_val: "94571"
        string_val: "94608"
        string_val: "94402"
        string_val: "94402"
        string_val: "94037"
        string_val: "95117"
        string_val: "95033"
        string_val: "94015"
        string_val: "94903"
        string_val: "94578"
        string_val: "94596"
        string_val: "94585"
        string_val: "94544"
        string_val: "94019"
        string_val: "94618"
        string_val: "94015"
        string_val: "94574"
        string_val: "95694"
        string_val: "95403"
        string_val: "94044"
        string_val: "95117"
        string_val: "94621"
        string_val: "95367"
        string_val: "95337"
        string_val: "95076"
        string_val: "94903"
        string_val: "94939"
        string_val: "95037"
        string_val: "94070"
        string_val: "94805"
        string_val: "94505"
        string_val: "94970"
        string_val: "95060"
        string_val: "94002"
        string_val: "94611"
        string_val: "94518"
        string_val: "46123"
        string_val: "94105"
        string_val: "94109"
        string_val: "94511"
        string_val: "95010"
        string_val: "95051"
        string_val: "95070"
        string_val: "21401"
        string_val: "94509"
        string_val: "95054"
        string_val: "94612"
        string_val: "94028"
        string_val: "94509"
        string_val: "95450"
        string_val: "95403"
        string_val: "94939"
        string_val: "89431"
        string_val: "95010"
        string_val: "95123"
        string_val: "95472"
        string_val: "95301"
        string_val: "95132"
        string_val: "94586"
        string_val: "95131"
        string_val: "95632"
        string_val: "95003"
        string_val: "95125"
        string_val: "95220"
        string_val: "95129"
        string_val: "94970"
        string_val: "94306"
        string_val: "95202"
        string_val: "95004"
        string_val: "94534"
        string_val: "94089"
        string_val: "94044"
        string_val: "94574"
        string_val: "94801"
        string_val: "94552"
        string_val: "94618"
        string_val: "95407"
        string_val: "94401"
        string_val: "95134"
        string_val: "95220"
        string_val: "95207"
        string_val: "94086"
        string_val: "94020"
        string_val: "94103"
        string_val: "95060"
        string_val: "95006"
        string_val: "95060"
        string_val: "94553"
        string_val: "95005"
        string_val: "94102"
        string_val: "94080"
        string_val: "95120"
        string_val: "95351"
        string_val: "21401"
        string_val: "94702"
        string_val: "94949"
        string_val: "95666"
        string_val: "95076"
        string_val: "95330"
        string_val: "94544"
        string_val: "95003"
        string_val: "94521"
        string_val: "94611"
        string_val: "94710"
        string_val: "94080"
        string_val: "95004"
        string_val: "94577"
        string_val: "94030"
        string_val: "95209"
        string_val: "94089"
        string_val: "94080"
        string_val: "94060"
        string_val: "94517"
        string_val: "95688"
        string_val: "95376"
        string_val: "94931"
        string_val: "95010"
        string_val: "94510"
        string_val: "95618"
        string_val: "95032"
        string_val: "90266"
        string_val: "95209"
        string_val: "94590"
        string_val: "95133"
        string_val: "95336"
        string_val: "94102"
        string_val: "95376"
        string_val: "94591"
        string_val: "94806"
        string_val: "90266"
        string_val: "94602"
        string_val: "94102"
        string_val: "97701"
        string_val: "95209"
        string_val: "95237"
        string_val: "94591"
        string_val: "21401"
        string_val: "94019"
        string_val: "94559"
        string_val: "95030"
        string_val: "95391"
        string_val: "94510"
        string_val: "94501"
        string_val: "94605"
        string_val: "94010"
        string_val: "95132"
        string_val: "95066"
        string_val: "95825"
        string_val: "94158"
        string_val: "94040"
        string_val: "95004"
        string_val: "94702"
        string_val: "95409"
        string_val: "94549"
        string_val: "95401"
        string_val: "95212"
        string_val: "94553"
        string_val: "94591"
        string_val: "95465"
        string_val: "95351"
        string_val: "94601"
        string_val: "94025"
        string_val: "95132"
        string_val: "94105"
        string_val: "95405"
        string_val: "94965"
        string_val: "94553"
        string_val: "94116"
        string_val: "95448"
        string_val: "94534"
        string_val: "95065"
        string_val: "94123"
        string_val: "94585"
        string_val: "95361"
        string_val: "94132"
        string_val: "94589"
        string_val: "95497"
        string_val: "94804"
        string_val: "95209"
        string_val: "94123"
        string_val: "95203"
        string_val: "95062"
        string_val: "95688"
        string_val: "94578"
        string_val: "94566"
        string_val: "94801"
        string_val: "95051"
        string_val: "94931"
        string_val: "94606"
        string_val: "94022"
        string_val: "94521"
        string_val: "94118"
        string_val: "94803"
        string_val: "95687"
        string_val: "94080"
        string_val: "94574"
        string_val: "94505"
        string_val: "95220"
        string_val: "95330"
        string_val: "95020"
        string_val: "94541"
        string_val: "94541"
        string_val: "95032"
        string_val: "94533"
        string_val: "94525"
        string_val: "95133"
        string_val: "94560"
        string_val: "94560"
        string_val: "94070"
        string_val: "95648"
        string_val: "95037"
        string_val: "95003"
        string_val: "95648"
        string_val: "94065"
        string_val: "93292"
        string_val: "94553"
        string_val: "94080"
        string_val: "95666"
        string_val: "94518"
        string_val: "95007"
        string_val: "94608"
        string_val: "94592"
        string_val: "95112"
        string_val: "95361"
        string_val: "95035"
        string_val: "95046"
        string_val: "94901"
        string_val: "94545"
        string_val: "95126"
        string_val: "95116"
        string_val: "94583"
        string_val: "95336"
        string_val: "94521"
        string_val: "94801"
        string_val: "94550"
        string_val: "94404"
        string_val: "94589"
        string_val: "94574"
        string_val: "94608"
        string_val: "94598"
        string_val: "94551"
        string_val: "95436"
        string_val: "46123"
        string_val: "95018"
        string_val: "94133"
        string_val: "94552"
        string_val: "95367"
        string_val: "94903"
        string_val: "95111"
        string_val: "95687"
        string_val: "94104"
        string_val: "94062"
        string_val: "95030"
        string_val: "94605"
        string_val: "95425"
        string_val: "94553"
        string_val: "94507"
        string_val: "95240"
        string_val: "94611"
        string_val: "95361"
        string_val: "94703"
        string_val: "95465"
        string_val: "95204"
        string_val: "95032"
        string_val: "95403"
        string_val: "94112"
        string_val: "94122"
        string_val: "95330"
        string_val: "95367"
        string_val: "94303"
        string_val: "94531"
        string_val: "95121"
        string_val: "94517"
        string_val: "95240"
        string_val: "94901"
        string_val: "94024"
        string_val: "95003"
        string_val: "95361"
        string_val: "94505"
        string_val: "95337"
        string_val: "94534"
        string_val: "94525"
        string_val: "94502"
        string_val: "95134"
        string_val: "94515"
        string_val: "95918"
        string_val: "95111"
        string_val: "95051"
        string_val: "95336"
        string_val: "95650"
        string_val: "95425"
        string_val: "95209"
        string_val: "93292"
        string_val: "94102"
        string_val: "95687"
        string_val: "94598"
        string_val: "95336"
        string_val: "95825"
        string_val: "94945"
        string_val: "95116"
        string_val: "95206"
        string_val: "95070"
        string_val: "94103"
        string_val: "94619"
        string_val: "95148"
        string_val: "95336"
        string_val: "94534"
        string_val: "94301"
        string_val: "95439"
        string_val: "94545"
        string_val: "94117"
        string_val: "95060"
        string_val: "94590"
        string_val: "94015"
        string_val: "95125"
        string_val: "94591"
        string_val: "94024"
        string_val: "95236"
        string_val: "95240"
        string_val: "94027"
        string_val: "94503"
        string_val: "94133"
        string_val: "94010"
        string_val: "94043"
        string_val: "94806"
        string_val: "95236"
        string_val: "46123"
        string_val: "94599"
        string_val: "94925"
        string_val: "93501"
        string_val: "94528"
        string_val: "94112"
        string_val: "94939"
        string_val: "95050"
        string_val: "94022"
        string_val: "94063"
        string_val: "95212"
        string_val: "95425"
        string_val: "94928"
        string_val: "95476"
        string_val: "94920"
        string_val: "95618"
        string_val: "94596"
        string_val: "90266"
        string_val: "94607"
        string_val: "94607"
        string_val: "94925"
        string_val: "94070"
        string_val: "95361"
        string_val: "95131"
        string_val: "94080"
        string_val: "94542"
        string_val: "94949"
        string_val: "95136"
        string_val: "94960"
        string_val: "94558"
        string_val: "95409"
        string_val: "95123"
        string_val: "94965"
        string_val: "94518"
        string_val: "94607"
        string_val: "90266"
        string_val: "94621"
        string_val: "89431"
        string_val: "95060"
        string_val: "94904"
        string_val: "94920"
        string_val: "95134"
        string_val: "94957"
        string_val: "94118"
        string_val: "94608"
        string_val: "95330"
        string_val: "94563"
        string_val: "94595"
        string_val: "94107"
        string_val: "95050"
        string_val: "94806"
        string_val: "94904"
        string_val: "95066"
        string_val: "94952"
        string_val: "95207"
        string_val: "94110"
        string_val: "95476"
        string_val: "94608"
        string_val: "94517"
        string_val: "95409"
        string_val: "95112"
        string_val: "94566"
        string_val: "94024"
        string_val: "94924"
        string_val: "94103"
        string_val: "95330"
        string_val: "94086"
        string_val: "94590"
        string_val: "94559"
        string_val: "95136"
        string_val: "95125"
        string_val: "95132"
        string_val: "46123"
        string_val: "94608"
        string_val: "94502"
        string_val: "95062"
        string_val: "95132"
        string_val: "95008"
        string_val: "94551"
        string_val: "94903"
        string_val: "95207"
        string_val: "94931"
        string_val: "94123"
        string_val: "95126"
        string_val: "94965"
        string_val: "95258"
        string_val: "94517"
        string_val: "94027"
        string_val: "95825"
        string_val: "94567"
        string_val: "94552"
        string_val: "94541"
        string_val: "94517"
        string_val: "95461"
        string_val: "94952"
        string_val: "94002"
        string_val: "94965"
        string_val: "94507"
        string_val: "95206"
        string_val: "95118"
        string_val: "95062"
        string_val: "94533"
        string_val: "94103"
        string_val: "95134"
        string_val: "94014"
        string_val: "95128"
        string_val: "94546"
        string_val: "94804"
        string_val: "94505"
        string_val: "95004"
        string_val: "95452"
        string_val: "94521"
        string_val: "94574"
        string_val: "94107"
        string_val: "94526"
        string_val: "94578"
        string_val: "94559"
        string_val: "94551"
        string_val: "95465"
        string_val: "94123"
        string_val: "94903"
        string_val: "94591"
        string_val: "94619"
        string_val: "94121"
        string_val: "94541"
        string_val: "94025"
        string_val: "94102"
        string_val: "94402"
        string_val: "95409"
        string_val: "94102"
        string_val: "94521"
        string_val: "94585"
        string_val: "94599"
        string_val: "94610"
        string_val: "94602"
        string_val: "95422"
        string_val: "95304"
        string_val: "95139"
        string_val: "95209"
        string_val: "94534"
        string_val: "94520"
        string_val: "94610"
        string_val: "94611"
        string_val: "94612"
        string_val: "94503"
        string_val: "95110"
        string_val: "94403"
        string_val: "94123"
        string_val: "94301"
        string_val: "95694"
        string_val: "94552"
        string_val: "94601"
        string_val: "94510"
        string_val: "94587"
        string_val: "95209"
        string_val: "94116"
        string_val: "95207"
        string_val: "95237"
        string_val: "94549"
        string_val: "94920"
        string_val: "94577"
        string_val: "94587"
        string_val: "95005"
        string_val: "94702"
        string_val: "94904"
        string_val: "95023"
        string_val: "94705"
        string_val: "95351"
        string_val: "95032"
        string_val: "95112"
        string_val: "94920"
        string_val: "94551"
        string_val: "94582"
        string_val: "95476"
        string_val: "95391"
        string_val: "94931"
        string_val: "95472"
        string_val: "94536"
        string_val: "95134"
        string_val: "94924"
        string_val: "95407"
        string_val: "95409"
        string_val: "94952"
        string_val: "94610"
        string_val: "95320"
        string_val: "94592"
        string_val: "95023"
        string_val: "94903"
        string_val: "95618"
        string_val: "95452"
        string_val: "94080"
        string_val: "94118"
        string_val: "95628"
        string_val: "95632"
        string_val: "90266"
        string_val: "95351"
        string_val: "94515"
        string_val: "94559"
        string_val: "94577"
        string_val: "94538"
        string_val: "94025"
        string_val: "94804"
        string_val: "95004"
        string_val: "94536"
        string_val: "95918"
        string_val: "95060"
        string_val: "94610"
        string_val: "94551"
        string_val: "95367"
        string_val: "95252"
        string_val: "94560"
        string_val: "95116"
        string_val: "94590"
        string_val: "97701"
        string_val: "94005"
        string_val: "95242"
        string_val: "94520"
        string_val: "95209"
        string_val: "94901"
        string_val: "95122"
        string_val: "94513"
        string_val: "95240"
        string_val: "94801"
        string_val: "94109"
        string_val: "95351"
        string_val: "95252"
        string_val: "95409"
        string_val: "95134"
        string_val: "95220"
        string_val: "95377"
        string_val: "94041"
        string_val: "94510"
        string_val: "94510"
        string_val: "94550"
        string_val: "94063"
        string_val: "94583"
        string_val: "95207"
        string_val: "94513"
        string_val: "95116"
        string_val: "94133"
        string_val: "95060"
        string_val: "94596"
        string_val: "94928"
        string_val: "94115"
        string_val: "94538"
        string_val: "95030"
        string_val: "94301"
        string_val: "95252"
        string_val: "94970"
        string_val: "95688"
        string_val: "89431"
        string_val: "94105"
        string_val: "95476"
        string_val: "94945"
        string_val: "94111"
        string_val: "94022"
        string_val: "95127"
        string_val: "95117"
        string_val: "94087"
        string_val: "95648"
        string_val: "94528"
        string_val: "94586"
        string_val: "95403"
        string_val: "94015"
        string_val: "95336"
        string_val: "94585"
        string_val: "94515"
        string_val: "95441"
        string_val: "95240"
        string_val: "94903"
        string_val: "94133"
        string_val: "95650"
        string_val: "94533"
        string_val: "94014"
        string_val: "95113"
        string_val: "95687"
        string_val: "94571"
        string_val: "94116"
        string_val: "95330"
        string_val: "94060"
        string_val: "94530"
        string_val: "94124"
        string_val: "94931"
        string_val: "94952"
        string_val: "94133"
        string_val: "94587"
        string_val: "95442"
        string_val: "94022"
        string_val: "95320"
        string_val: "94931"
        string_val: "94920"
        string_val: "95918"
        string_val: "95401"
        string_val: "94080"
        string_val: "95403"
        string_val: "95134"
        string_val: "95650"
        string_val: "95258"
        string_val: "95448"
        string_val: "89431"
        string_val: "94709"
        string_val: "95030"
        string_val: "95367"
        string_val: "95421"
        string_val: "93501"
        string_val: "94110"
        string_val: "94530"
        string_val: "95409"
        string_val: "94111"
        string_val: "94526"
        string_val: "94303"
        string_val: "95361"
        string_val: "94112"
        string_val: "94805"
        string_val: "95376"
        string_val: "95361"
        string_val: "95336"
        string_val: "95065"
        string_val: "94945"
        string_val: "94585"
        string_val: "95618"
        string_val: "94015"
        string_val: "94402"
        string_val: "95122"
        string_val: "94595"
        string_val: "94904"
        string_val: "94922"
        string_val: "94063"
        string_val: "95012"
        string_val: "94509"
        string_val: "94521"
        string_val: "94538"
        string_val: "94404"
        string_val: "95033"
        string_val: "94028"
        string_val: "94550"
        string_val: "94595"
        string_val: "95687"
        string_val: "94132"
        string_val: "94109"
        string_val: "94590"
        string_val: "94505"
        string_val: "94619"
        string_val: "94118"
        string_val: "95230"
        string_val: "94929"
        string_val: "94585"
        string_val: "94605"
        string_val: "95051"
        string_val: "94107"
        string_val: "94111"
        string_val: "95007"
        string_val: "94547"
        string_val: "95033"
        string_val: "94923"
        string_val: "94116"
        string_val: "95202"
        string_val: "95436"
        string_val: "94533"
        string_val: "93292"
        string_val: "94404"
        string_val: "94607"
        string_val: "94585"
        string_val: "94401"
        string_val: "94951"
        string_val: "94546"
        string_val: "95215"
        string_val: "94585"
        string_val: "94109"
        string_val: "94133"
        string_val: "95030"
        string_val: "95066"
        string_val: "94116"
        string_val: "90266"
        string_val: "94403"
        string_val: "94589"
        string_val: "95006"
        string_val: "95118"
        string_val: "94599"
        string_val: "94605"
        string_val: "94505"
        string_val: "94920"
        string_val: "95445"
        string_val: "95076"
        string_val: "94025"
        string_val: "94533"
        string_val: "94521"
        string_val: "94590"
        string_val: "95209"
        string_val: "94599"
        string_val: "94508"
        string_val: "94103"
        string_val: "95351"
        string_val: "94555"
        string_val: "95409"
        string_val: "95122"
        string_val: "95033"
        string_val: "94089"
        string_val: "95476"
        string_val: "95037"
        string_val: "94121"
        string_val: "94402"
        string_val: "94558"
        string_val: "94103"
        string_val: "95215"
        string_val: "94587"
        string_val: "95121"
        string_val: "94014"
        string_val: "94577"
        string_val: "46123"
        string_val: "95032"
        string_val: "95376"
        string_val: "94116"
        string_val: "95405"
        string_val: "95066"
        string_val: "94558"
        string_val: "94702"
        string_val: "94010"
        string_val: "94517"
        string_val: "94028"
        string_val: "94015"
        string_val: "94924"
        string_val: "95209"
        string_val: "94027"
        string_val: "95123"
        string_val: "95620"
        string_val: "94941"
        string_val: "94025"
        string_val: "94525"
        string_val: "94304"
        string_val: "94951"
        string_val: "95207"
        string_val: "94546"
        string_val: "95446"
        string_val: "94574"
        string_val: "94602"
        string_val: "95632"
        string_val: "94043"
        string_val: "95003"
        string_val: "94560"
        string_val: "94705"
        string_val: "95112"
        string_val: "94607"
        string_val: "94553"
        string_val: "95060"
        string_val: "95004"
        string_val: "95446"
        string_val: "95129"
        string_val: "95240"
        string_val: "95110"
        string_val: "94960"
        string_val: "94923"
        string_val: "95023"
        string_val: "95007"
        string_val: "94541"
        string_val: "94555"
        string_val: "94002"
        string_val: "94110"
        string_val: "95121"
        string_val: "95391"
        string_val: "95030"
        string_val: "95010"
        string_val: "94301"
        string_val: "94538"
        string_val: "94520"
        string_val: "95242"
        string_val: "94521"
        string_val: "94928"
        string_val: "94536"
        string_val: "95336"
        string_val: "94301"
        string_val: "95032"
        string_val: "94560"
        string_val: "94061"
        string_val: "94606"
        string_val: "94608"
        string_val: "95212"
        string_val: "94112"
        string_val: "95035"
        string_val: "95004"
        string_val: "95131"
        string_val: "95202"
        string_val: "94556"
        string_val: "94501"
        string_val: "95688"
        string_val: "94539"
        string_val: "95206"
        string_val: "94621"
        string_val: "95002"
        string_val: "94133"
        string_val: "94573"
        string_val: "94578"
        string_val: "95409"
        string_val: "94965"
        string_val: "95632"
        string_val: "94122"
        string_val: "95148"
        string_val: "94949"
        string_val: "94536"
        string_val: "94552"
        string_val: "94102"
        string_val: "94804"
        string_val: "94549"
        string_val: "94612"
        string_val: "95066"
        string_val: "95006"
        string_val: "95628"
        string_val: "94021"
        string_val: "95445"
        string_val: "94599"
        string_val: "94920"
        string_val: "95404"
        string_val: "95046"
        string_val: "95202"
        string_val: "95209"
        string_val: "94117"
        string_val: "95219"
        string_val: "94528"
        string_val: "94920"
        string_val: "94080"
        string_val: "94025"
        string_val: "95304"
        string_val: "95442"
        string_val: "94553"
        string_val: "94549"
        string_val: "95070"
        string_val: "94070"
        string_val: "95688"
        string_val: "94574"
        string_val: "94556"
        string_val: "95228"
        string_val: "94542"
        string_val: "95337"
        string_val: "95376"
        string_val: "94546"
        string_val: "94158"
        string_val: "94587"
        string_val: "95111"
        string_val: "94591"
        string_val: "21401"
        string_val: "94901"
        string_val: "94924"
        string_val: "94599"
        string_val: "95207"
        string_val: "94530"
        string_val: "94541"
        string_val: "94702"
        string_val: "94605"
        string_val: "94109"
        string_val: "94931"
        string_val: "95650"
        string_val: "94530"
        string_val: "95118"
        string_val: "94523"
        string_val: "95409"
        string_val: "94506"
        string_val: "95127"
        string_val: "94105"
        string_val: "94123"
        string_val: "94806"
        string_val: "95023"
        string_val: "94086"
        string_val: "95121"
        string_val: "95618"
        string_val: "94605"
        string_val: "94610"
        string_val: "94903"
        string_val: "95123"
        string_val: "95918"
        string_val: "95215"
        string_val: "95076"
        string_val: "95409"
        string_val: "94595"
        string_val: "95476"
        string_val: "94558"
        string_val: "94931"
        string_val: "94122"
        string_val: "94805"
        string_val: "94111"
        string_val: "95476"
        string_val: "95050"
        string_val: "95045"
        string_val: "95133"
        string_val: "94523"
        string_val: "94621"
        string_val: "95121"
        string_val: "95215"
        string_val: "94611"
        string_val: "95202"
        string_val: "94591"
        string_val: "94552"
        string_val: "95320"
        string_val: "46123"
        string_val: "95207"
        string_val: "94559"
        string_val: "95125"
        string_val: "95690"
        string_val: "95132"
        string_val: "95409"
        string_val: "94545"
        string_val: "94102"
        string_val: "90266"
        string_val: "95401"
        string_val: "94601"
        string_val: "94502"
        string_val: "94599"
        string_val: "94015"
        string_val: "95367"
        string_val: "90266"
        string_val: "94574"
        string_val: "95134"
        string_val: "94027"
        string_val: "94703"
        string_val: "94563"
        string_val: "95445"
        string_val: "95010"
        string_val: "94404"
        string_val: "94505"
        string_val: "95060"
        string_val: "95140"
        string_val: "95320"
        string_val: "94591"
        string_val: "95206"
        string_val: "94061"
        string_val: "95688"
        string_val: "94404"
        string_val: "94531"
        string_val: "94086"
        string_val: "94945"
        string_val: "95132"
        string_val: "95111"
        string_val: "94591"
        string_val: "94703"
        string_val: "94531"
        string_val: "94132"
        string_val: "94602"
        string_val: "95123"
        string_val: "95062"
        string_val: "94062"
        string_val: "95620"
        string_val: "95005"
        string_val: "95136"
        string_val: "94112"
        string_val: "94558"
        string_val: "94041"
        string_val: "94018"
        string_val: "94506"
        string_val: "95825"
        string_val: "95422"
        string_val: "94949"
        string_val: "94404"
        string_val: "94707"
        string_val: "94803"
        string_val: "93292"
        string_val: "94123"
        string_val: "95361"
        string_val: "94301"
        string_val: "94556"
        string_val: "94530"
        string_val: "94580"
        string_val: "94127"
        string_val: "94602"
        string_val: "94553"
        string_val: "94509"
        string_val: "94618"
        string_val: "94061"
        string_val: "95014"
        string_val: "94542"
        string_val: "94015"
        string_val: "94591"
        string_val: "95111"
        string_val: "95377"
        string_val: "90266"
        string_val: "95367"
        string_val: "94131"
        string_val: "94621"
        string_val: "94595"
        string_val: "95076"
        string_val: "94002"
        string_val: "95035"
        string_val: "95202"
        string_val: "94705"
        string_val: "94110"
        string_val: "95121"
        string_val: "95694"
        string_val: "95066"
        string_val: "95003"
        string_val: "95014"
        string_val: "94904"
        string_val: "95476"
        string_val: "95476"
        string_val: "89431"
        string_val: "95476"
        string_val: "94513"
        string_val: "95134"
        string_val: "94015"
        string_val: "95135"
        string_val: "94903"
        string_val: "94920"
        string_val: "94538"
        string_val: "95204"
        string_val: "94089"
        string_val: "94519"
        string_val: "94903"
        string_val: "94609"
        string_val: "95008"
        string_val: "94517"
        string_val: "94087"
        string_val: "95051"
        string_val: "94086"
        string_val: "94618"
        string_val: "95117"
        string_val: "95304"
        string_val: "94022"
        string_val: "95336"
        string_val: "94521"
        string_val: "95497"
        string_val: "94965"
        string_val: "94565"
        string_val: "94571"
        string_val: "94930"
        string_val: "94103"
        string_val: "94110"
        string_val: "95446"
        string_val: "95425"
        string_val: "94544"
        string_val: "95206"
        string_val: "95351"
        string_val: "94501"
        string_val: "94806"
        string_val: "95131"
        string_val: "94605"
        string_val: "94548"
        string_val: "94923"
        string_val: "94954"
        string_val: "94566"
        string_val: "95003"
        string_val: "94574"
        string_val: "95441"
        string_val: "94158"
        string_val: "95620"
        string_val: "94541"
        string_val: "94025"
        string_val: "95123"
        string_val: "94030"
        string_val: "94605"
        string_val: "94573"
        string_val: "95616"
        string_val: "95003"
        string_val: "95076"
        string_val: "94123"
        string_val: "94115"
        string_val: "94606"
        string_val: "94552"
        string_val: "95023"
        string_val: "94549"
        string_val: "95385"
        string_val: "94509"
        string_val: "95405"
        string_val: "94965"
        string_val: "94303"
        string_val: "94505"
        string_val: "94550"
        string_val: "95203"
        string_val: "94080"
        string_val: "94107"
        string_val: "94542"
        string_val: "94505"
        string_val: "94541"
        string_val: "94590"
        string_val: "94041"
        string_val: "95825"
        string_val: "94903"
        string_val: "94117"
        string_val: "94520"
        string_val: "94544"
        string_val: "94553"
        string_val: "94509"
        string_val: "95010"
        string_val: "94551"
        string_val: "94928"
        string_val: "94710"
        string_val: "94544"
        string_val: "95066"
        string_val: "94127"
        string_val: "94515"
        string_val: "95123"
        string_val: "94608"
        string_val: "95376"
        string_val: "95404"
        string_val: "95376"
        string_val: "94574"
        string_val: "95688"
        string_val: "94973"
        string_val: "94517"
        string_val: "95442"
        string_val: "95237"
        string_val: "95033"
        string_val: "94945"
        string_val: "95628"
        string_val: "94595"
        string_val: "94587"
        string_val: "94526"
        string_val: "95209"
        string_val: "94062"
        string_val: "94578"
        string_val: "94108"
        string_val: "94501"
        string_val: "94521"
        string_val: "94578"
        string_val: "95405"
        string_val: "95441"
        string_val: "94930"
        string_val: "95126"
        string_val: "95123"
        string_val: "94102"
        string_val: "95404"
        string_val: "94587"
        string_val: "95066"
        string_val: "94550"
        string_val: "94806"
        string_val: "94945"
        string_val: "95113"
        string_val: "95472"
        string_val: "95116"
        string_val: "94621"
        string_val: "94587"
        string_val: "95045"
        string_val: "94041"
        string_val: "95462"
        string_val: "94510"
        string_val: "94558"
        string_val: "89431"
        string_val: "94590"
        string_val: "94579"
        string_val: "94015"
        string_val: "95366"
        string_val: "95628"
        string_val: "94507"
        string_val: "94555"
        string_val: "94103"
        string_val: "94609"
        string_val: "94515"
        string_val: "94062"
        string_val: "95005"
        string_val: "95650"
        string_val: "94579"
        string_val: "94951"
        string_val: "94928"
        string_val: "95006"
        string_val: "95209"
        string_val: "95111"
        string_val: "94066"
        string_val: "94931"
        string_val: "94565"
        string_val: "94107"
        string_val: "94547"
        string_val: "95361"
        string_val: "94611"
        string_val: "94124"
        string_val: "94062"
        string_val: "95207"
        string_val: "94158"
        string_val: "95445"
        string_val: "94592"
        string_val: "94587"
        string_val: "94089"
        string_val: "95134"
        string_val: "94002"
        string_val: "95616"
        string_val: "94931"
        string_val: "94583"
        string_val: "95135"
        string_val: "94027"
        string_val: "94124"
        string_val: "95129"
        string_val: "94403"
        string_val: "95258"
        string_val: "94041"
        string_val: "94118"
        string_val: "94538"
        string_val: "95128"
        string_val: "94579"
        string_val: "94108"
        string_val: "94553"
        string_val: "95004"
        string_val: "94110"
        string_val: "94965"
        string_val: "95258"
        string_val: "95133"
        string_val: "95060"
        string_val: "95407"
        string_val: "94517"
        string_val: "94503"
        string_val: "94605"
        string_val: "95616"
        string_val: "95132"
        string_val: "90266"
        string_val: "95209"
        string_val: "94605"
        string_val: "94945"
        string_val: "94105"
        string_val: "95366"
        string_val: "97701"
        string_val: "94111"
        string_val: "94580"
        string_val: "94061"
        string_val: "94612"
        string_val: "95694"
        string_val: "94526"
        string_val: "95462"
        string_val: "94708"
        string_val: "94595"
        string_val: "95110"
        string_val: "94702"
        string_val: "94024"
        string_val: "95121"
        string_val: "95203"
        string_val: "94608"
        string_val: "94041"
        string_val: "94803"
        string_val: "95204"
        string_val: "94577"
        string_val: "94705"
        string_val: "95037"
        string_val: "95492"
        string_val: "94949"
        string_val: "94590"
        string_val: "94158"
        string_val: "94132"
        string_val: "94158"
        string_val: "94041"
        string_val: "94103"
        string_val: "95336"
        string_val: "94592"
        string_val: "21401"
        string_val: "95825"
        string_val: "94618"
        string_val: "95126"
        string_val: "95648"
        string_val: "95825"
        string_val: "94112"
        string_val: "94521"
        string_val: "95207"
        string_val: "94123"
        string_val: "94563"
        string_val: "95122"
        string_val: "94957"
        string_val: "95204"
        string_val: "94536"
        string_val: "95220"
        string_val: "95122"
        string_val: "94080"
        string_val: "95135"
        string_val: "95125"
        string_val: "94024"
        string_val: "94019"
        string_val: "94010"
        string_val: "94062"
        string_val: "94038"
        string_val: "94110"
        string_val: "94065"
        string_val: "94117"
        string_val: "94801"
      }
    }
  }
}
node {
  name: "SparseTensor/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "v\014\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "SparseTensor_1/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 3190
          }
          dim {
            size: 2
          }
        }
        tensor_contentt\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \t\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \n\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\nt\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "SparseTensor_1/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3190
          }
        }
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Cooperative"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Cooperative"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Other"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Other"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Cooperative"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Apartment"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Cooperative"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Cooperative"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Townhouse"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Cooperative"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Miscellaneous"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Mobile / Manufactured"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Apartment"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
      }
    }
  }
}
node {
  name: "SparseTensor_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "v\014\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3190
          }
        }
        tensor_content: "\000\276\007H\200\021CI\200=\022I0-\211J\000\261\236I\200\247*I\200\010\006I\000\377\021I\000\350\375H\000\330@I\000\333\227H\000@\234G\000\005\221I\000\272\333H@5\243J\000u\250H\000\0337I\200\036\336H\300\221\236I\340#\364H\200\304$I@7\022I\000\2307H\200\260gI\000*sH\000\261\036I\000\317\231H\000G\206I\300\243\233I\360\305\024L\000\323BI\200\027\302I@Y\235I\000\337\300H\000\377\221H \263\201K\000|\022H\000i\252H\000\276\007H\000\223\243H@B\014J\000\232\215H\000\2524H\200\276\273I\000L\232G\200\352\nI\000e\201Hp\257\236I\200jII\200\247*I\000\270\210G\000\2135H\200\352\nI\300\232[I\000\"!H\000\375\273H\300\277\265I\000\207\245H\000\\\301G\000\326\003I\000\302\260I\300\330\'J\200,\200I\300n\217I\000\245\240H\000 \000I\340b\036J\370\271\333I\200\010\006I\340\255\036I\000\330VH\000\305\356H\000\242_H\200r\036I\000\004\246G\000\346\252H\000`\352F\000\333\027J\200CCH\300n\017J\000\241[H\000\"!H\200\305%I\000\013\220H\000\024\315H\000$tH\000\"!Hx\020tK\000\261\036J\000\024\315I\3009\203I\000\320\204H@Y\235I\200\021CI\200\343 I\000)\013I\200\353rI\000=\333H\000\272EI\000G\206I\000\336UH\000\001\345H\000\362\363G\300{\022H\000 \313G\0009\262I@K\311I@\371EI\000\024MH\200\260gI\000\312\005I\200tqI\300\024\236I\000I\331H\000\323\302H\200\266fI\240\002\224J\3000\303I\300\350\316I \205\030J@$\206I\000i\252H\300n\017J\200\000\261I\200\226\030J\000\352SI\200\034\213H\0006qI\200<\'I\000\216\017I\000\307+H\000`jH\000\343\351H\340y/J\000\330VH\000BoI\000\n\245H\000.\352G\200\226\230I\2409sJ\000\205\317H\200\010\006I\200{[I\000e\201H@y\007I\200tqI\300Y\352H\200x\235I\000\261\236J\000rgI\200N\303H\200a\214I\2006(I\2005\357H\000\247\363H\300\341dJ\200T#I\340>oI\000\203`H\300\243\233I\000\247sI\000\261\236H\000VBH\200\247*I\200>\372I\200\027\267I\200\211/I\200q\345H\000\245\240H\000\024\315I\200<\'I\000\272[I\000)\213H\000\247sI@w\030J\200\372\033I\200\3721I\340j>I\360\307/I\000\366QH\200\220\031I\000G\206I\200\007\033I\360\305\024L\300I*J\000\272[J\300\263\302I\000\346\252I\000=\333H\200\3346I\000Y\203H\000\331sI\000\0337I\000\316.H\200\273/H\200\262=I\300\207\363I\200\360\tI\2006(I`\206aJ`H\030J\000\337\300H\000\261\236H@\363\255J`QUJ\200\231VI\000\252\264H\200\021CI\200H\017I\200{[I\000\357\347J\000\377\221H\000\261\236I\200k\036I\200\247*I\000W\255H\000\270\210G\000\rcI\000\223\rI\300\004\364I\200\276;I\300\330\'K\000\247\363H\000\231\363H\000P\303H\360\211\236J\360\311\244I\200S\352H\000\024MH\000\344yH\200\274LH\200\'iI@K\311I\000g\324H\200q\345H\000k\375H\200\3346I\200\276;I\000)\213H\200\313\244I\000p\345H\000e\201H\000\270\210H\000`jH\000\2741I\300\'\006I\200\340\224H\200\034\213H\200a\214I\300\223\rI\000\247\363H\200FOI\200\363GI\000\373LH\200\001\034I\200\027\364H\000y\321H\000\231\363H\200\023\240H\300\364\301I\300\310\231H\000@\034I\000\245\240H\000\301EI\300eOI\000=[I\200\003oI\200\237\325I\300\024\236I\340C\006I\200%\310H\300~\266I\000\310\257H\200\342\265I\000\205\317H\200\314\017I\000\261\236H\000@\234H\000\267\356H\200\021CI\000\323\302H\300\225\340H\200T\rI\000\377\221H\200\227\003I`\326*J\300\263\302I L\353H\200\217`H\000)\213H\000\343\351H\260\261\247J@\365\203I\000\377\221H\000\323BI\000\224\016I\000\033\267H\200\217.I \010CI\340\2464I\000\247\363H\300\375\245H\000\263\361H\000\364\373G\000\207\245H\000u\022I\200\000\261I\340O\303H\200\246?I\200\t\356I\000PCJ\000\364\373G\200\021CI\000\317\031I\000\004&I\200\226\030J\000\016\316I\000\323\302H\000y\321H\000CZH\300\r4J\000\252\036I\000|\022H\300\2434I\200\324aJ\340\226\rI\000\272[H\000^\027I\200\000\261I\300\024\236I\340J\"J\300\252\205I\200x\317H\000\330\326H\000I\331H\000\377\221H\000eeH\000yQI\000\n%H\300\221\236I\000r\347H\300~OI\000(\240H\000BoH`H\030J\000\317\375G\300\'\206I\000\013tH\000\312\205H\000\272[I\340\255\036I\340\030TJp:\214J\200\246?I\000}/I\200\247*I\200FOI\300\277\265I\200\0001I\200\237UJ@7\022I\200\324\341I@\363\255I\000\035\215H\300\035\333I\000\377\221H\000F\233H\000w\373H0\314\255J\000\263\361H\300~\266I\340\266[I\200\227\003I\200{\333I`.FJ\200=\022I\200\345\250H\000`jG\300\006cI\200C\021I\300\'\006J\000\261\236H\000\254\nI\000\200;I\200&\001I\200\256\224I\000\r\343H\200\t\356I\000\247sI\000[\252H\000|\022H\000[\326H\200tqI\000$tI\200\247\252I\000\033\267H\200a\014I\300+\310H\000G\206H\200\3346I\200\226\030I\000X\230G\000\335QH\300\317\003I\200\237UJ\000\272\333H\000$tJ@w\030J\260\203\205J\200a\014I\000I\331H\200\tnI\200M9I\340\023\315H\000\'5H\000\024\315H\000C\332I\2006(I\200&\001I\200\021CI\000)\213H\000BoH\200,\000I\200\314\017I\200\324\341I\000\232\215H\000\353%H\340x\022I\000\377\221H\000\035\215H@]\306J\200\010\006I\200\305%I\200\331\252H\200\352\nI\200\345sI\000\337\300H\000@\234H\300\214\nI\000\207%I\200\021\303I\360\345*I\200X\201H\340\206\230J\300\035\364H\200\324aI\300@\006I\200\352\nI\000\006yI@\3331I\000\020$J\200\360\273H\300\r\264I\200\304:I\000\323\302H\200,\200I\2006(I\200a\276H\000e\001I\000\034\242H\200\266fJ`\372\256H\200\010\006I\200\371\306I\200\247\252I\200r\036I\360\306\336I\000R\231H\200\227\003I\200\313$J\300\321VI\340\3146J\200=\222I\200k\264I\000\366QI\000\205\317I\200(TI \207\262J\340\313\031I\200{[I\000\261\236I\200{[I\200\3721I\000\216\017I\200\010\006I\200,\200I\000gTI\000\016\316I\200\227\003I\000|\022H\200\037\027I\000\317\031I@T\211J\000\006\371H\300~\266I\000;\010H\200\235\002I\200S\352H\200\3425I\000\013\220H\000~\345H\200%\026I\000\0337I\000=\333H\000\323\302Hp\022\346J\240\315\207J\000\237\010H\200\246?I@\254\244I\200\027BI\000\266\375G\200\226\030I\200r\236I\000*\332H\200\220\031I\000\"!H\000\263\361H\2005=Ip(TI\300\221\236I\200\010\206I\000\332,I\000\247\363H\200\255\333H\300\207\363I`H\030K\200,\000I\000\375;I\0003\263I\000\247\363H\200FOI\340\370\005J\000\300\332H\000P\303G\000\247\363H\200\313$I\000\2524I\200\237UI@\211\225I\200\333KI\000\033\267H\300\317\347I@&\000I0\323\027L\000\243\312H\200\nYI\000\250^G\000\2149H\200=\022I\000Y\203H\000\272\302H\300/rH\200\3721I\300\330\247J\000Y\203H\000\324\255G\000\305\356H\200\305\017I\200\000\261I\000\205\317I`H\030J\200%\310H\360\345*I\000PCJ`\005\006I\000\004&I\000b@I@\370\266I\000i\252H\200\343 I\000\024\315H\000\234`H\36082I\300n\217I\000b@I\300\035\333I\000\0337I\300\207\363I\340LCI@B\214I\200\353\362I\000\330VH\000\021\340H\000\367\274H\000\326\203H\000\330VH\300u\222I\000\346*H\3000\303I@\307^J\000\277VH\000\227LI\000\223\243I\200x\317H`uOJ\200FOI\200\231@I z\311I\340\007\020I\200\237\325J\200r\036I\200C\021I\000\205\317H\000u\022I\300\024\236I\000\337\300H\2005\275J\000f7G\300\0247I\000\323\302H\000-4H\000\312\205H\000\247\363H\340-\022J\200\227\003I\340\034\200J\200[\rI@\352\355I\000\016\316I\000\\\301G\300\221\236I\340\3600J\200F\317I\000@\034I\000\350}G\240\222\307I\000F\033H\200\021CI\000\261\036I\340-\022J\200\345sI\000g\324H\000X\030I\000\377\221H\000R\031I\340C\006I\000\026#I\000\366\245H\000h\277H\200\352\nI\300\006\343H\000\261\236H@\263\216I\000\3020I`QUJ\200\237UI\200\313$I\340x\022I\200\354GI\240MFJ\000\r\343H\230)\211I\200\260gI\000\270\010I\2005=I\000G\206H\000\272[J\000\013\220H\200\010\006I\000PCH\3000\303I\200\247*I\000\247\363H\000\261\036I@\021\251I`\223\230I\000\024MI \245\255J\000\232\rI\000\351\350H\0002\310H\000\225\366H\360\235\325I@\334\234I\000|\222H06\306J\000\221MI\200\010\006I\000\205\317J\000\337\300H\340 tI\200\021CI0\227\241J\200\237UJ0H\303J\000\016\316I\200\251gI`}$J\300~\266I\200\220\031I\200\325\314H\000\0337I\000\0337I\340LCI\300\2434I\300~\266I\200\010\006I@/=I@\220\030I\340m\276H\200/(I\200jIJ\260\261\247J\000G\206I\200=\022I\000\323\302H\200&\001I\000\257/H\200k4I\000\346\252I@\211\025J\000U>H\200\276;I \3763J\260G\217J\000\263\361H\000y\321H\300I\303H\200\226\230I\000\n\245H\000)\213H\000\r\343H\000s9H\200C\021I@{\301I\000\035\215H\300ICI\000\326\003I\200.SI\200r\036I\000G\352H\200a\014I\000P\303I\300\243\033J\200\260\347I\000$\364I@T\tK\000\270\210H\200\027BI\000_fHh\320\217K\000\224\216G\300\374\241I\000\306\362I\340\347\375H\300\2434I(b\230J\360\260\036I\340\036!I\000\245\240H\200\237UI\000\346\252H\340C\006I\000\377\221H\300\337\221I\000\326\003I\200\273\257H\200\007\315H\000\0337I\300\\\222I\000u\250H\300\'\206I\000G\206H\200dJI\300\252\205I\000\033\267H\000\223#I\000G\206H\200\217.I\000\357\347H\2005=I\000\017\271H\200\3721I\300\330\'J\000\270\210G\340\240gJ`\241\036J@\021\251I \263\201J\300\243\033J\000P\303G\000\341\226H\000\205\317H\240?\362J\200j\311I\200o\022H\200\030\255I\000P\303F\200\227\003I\000i\021H\300\'\206I\300\263\333H\000\024\315H\000\205OI\200jII\300I\303H\000\337\300H\200\371FI\000\344\324H\300R\347I\200S8I\200\324aI\000;\210H\000*sH\000\357\347H\300\026qJ\300\373\266I\0002HI\200\362\\I\200\007\315H\000e\001I\000\216\017I\300%0J\000\\AH\000\237\010Hx\0077K\360\374\363J\200\003oI\200{[I\200\237\325I\000\247sI`H\030J\200=\022I@B\214I\000\007\344I\200\037\027I\000\275\003H\000\2445G\000\006\371H\000u\250H\300\263\302I\000\013\220H\000fiH\000~eH !\303I\200\276;I\000\316.H\000\017\271H\000\346\252I\300\306\252I\000@\234H\300\"\364H\000\206\304H\200&;H\240\231\343H\000\300\332G\200j\311I\200\007\233I\200\345sI\200\0001I\000`\352H\340 tI\000\373LH\000=\333H@\254\244I\000\247\363H\200=\022I\200\027\364H\000\017\271H\200{[I\000Y\203H\000\276\207G\300\252\205I\000\337\300H\000\355\224H\000P\303H\300n\217I\200\237\325I\000\263\361H\300\214\243H\200\010\006I\300\024\236I\000\272[I\200,\200I\200{[I\000|\222I\000G\206H\300@\006I\000$tH\200\237UI@\347}H\000\243\312H`l\022J\000\205\317H\200\247*I\000\266\375G\200\360\tI\340-\022J\300\'\006J\000\234`H\300\230\215H\200jII\200\217\340H\000g\324H\200\260gI\200\226\030I\300\004\364I\000\007\344H\000o\251I\000\270\210H\200\313$Ipo\230J\000C\332I\200\314\017I\300\221\236I\000K\257H\000\346*J\000\261\236H\000\2524H\200\211/I\000K\257H\200\311\203H\000i*I8Y\235I\300\353\217I\200\021CI\200{[I\300\232\333I\200\255)I@\254\244I\000\033\267H\200\001\034I\300\337\221I\200=\022I\000\0337I\200\247*I\300\221\236I\000\261\236I\360\211\236J\200r\036I\300\243\233I\300\306\252I\300\024\236I\000X\230I\000y\321H\200\313$I\000\361\275H\000\330VI\200\237\325I\200jII\300e\317I\000\247sI\200\201ZI\000Y\003H\200\0001I\340\342*I \305{K\000\232\215I\000\006\356I R\246J\000\322\327H\200\316bI\200a\014I@\254\244I\0009\262H\200=\022I\000\205OI\300\221\236I\200\213\271G\000G\206I\340\202lJ\200T\rI\000\245\240H\200M9I\000\243\312H\200\363GI\000\323\302H`\313\275H\000\013tH\0007CH\200cII\200\021\303I\000\2524H\200\3721I\000\263\361H\200\217\340H\300\261\210H\000\242_H@1wJ\340#\364H\300\337\221I06\306J\000\341\026I\200T\243I\200\336sI\300\306\252I\200\373NH\200\324aI\2005=J\200M9I\200,\200I0\300\037I\200tqI\300\035\333I\200FOI\200q3I\000\377\221H\340\034\200J\000[\326H\000\350}H@dII\200\3346I\000|\022H\200?eI\000|\222G\200\324aI\200\037\027I\000@\234G\000m=I\000\024MI\000\340\253E\200\021CI\000@\034H\360\363\266J\000\310\257H\000\353%H\300Y\352H\340\217UJ\3000\303I\000e\201I\300\'\206I\000\321lJ\200\237\325I\000\277VH\200\224\333I@(\272I\200\231\326H\000\323\302H\000\272[H\000\346\252I\000\357gI\300\252\205I\200\255)I\300\341dJ\000\216\017I\000\245\240H\000F\033H\000\277VH@\276\241I\200\345\363I\000*sH\300\'\006J\000\336UH\000\272[I\200,\200I\200\237UI@]\306I\200\021CI\000\216\017I\240D\tJ\200\235\202I\000\2228H\300I\252I\000P\303G\200\345sI\000L\032H\200\360\tI\200\322\016I@\247\220I\000Y\203H\000\333{H\200\3721I\200y\010I\200\300\021J\000e\201H\000k\375H\300\024\236I\200\316bI\300\207\363I\200d4I`{\022I\240\223dK\000B\357H\000\205\317H\000\272\333H\300\306\252I@\276\241I\200\313$I\000\314XI@]\306J\000\326\203H\000\314XI\000\017\271H\000p\345H\2005\275J`H\030J\000\350\000I@6\216I\200\0001I\000\205\317H\000\357gI\200C\021J\000\247\363H\000\247\363H\200/>I\200\201\332I\000Y\003I\300\004tI\000\305\356H\000\247\363H\370#\364I\000\323\302H\000\316\030I\000\035\215H\000\024\315H \247\321H\300\330\204H\200,\000I\300\223\rI\300\223\215H\200!\352H\000\300\332H@z\022J\000|\022H\000\2524H\000\330\326H\000\243\312H\000*sH\200C\303H\200/>I\000BoH\340 tI\000b\300H\000@\234H\300\353\217I\200\237UJ\200\351\037I\200M9I\000\261\236H\200{[I\300\'\006J\000\261\236H\200{[I\000\243\312H\200a\214I\200\010\006I\200\331\252H\000|\222I\000PCJ\000|\222I\200\201ZI@\3720I\200<\'I\000\346\252H\000H\356H\200\246\361H\200\333KI\000\331sI\340b\036J\000W\255H\200\371FI\200\201ZI\300R\347I\000E0J\000)\213H\200\220\031I\000\323\302H\200r\010I\000u\250H\200\226\230I\200\235\002I\000\366QH`QUJ\370\271\333I\300e\317I\000)\213H\000\320\204I\000\325\351H\200{[I\200\213lI\300\306\252I\200?eI\000\272[I\300n\017J\000\247sI\340\213\271H\000\323BH\200\007\033I\200:\352H\000y\321H\200M9I\340\007\020I\300\'\206I\200a\014IP\236\030I\000\216\017I\200\217`H\200\023\313H \341#J\000\205\317H\200\3346I\000\301EI\000\317\031I\300\321\326H\300\004tJ\000$\364K\000\302\260I\200r\036I\300\354\023I\200\226\030I\2000\251I@\r\200I\200M\271H\000\313mIp:\214J\300\330\247I\200\226\230I\000G\206H\000\247\363H\000\245\240H\000VBH\340O\303H\000C\332I\000\305\356H\000\247sH\200\352\nI\200\343 I\000\375\273H\360\307/I\000^\027I@\350\032I\200\247*I\200\034\213H\200\313\244H@T\tJ\200\027tH\300\350\316I\000\361=I\200zpI\200\3425I\000\"!I\200Q\227H\340!\241H\000[\326H\200]JI\000\035tI\200,\000J\300\252\005J\000\245\240H \265TJ\200\345\363I@\303\265I\000\375\273H\0009\262H\000\243\312H\000\242_H\000\364\373G\000\356|H\000\033\267I\200r\036I\200\222lI\000\261\236H\200\010\006I\200\201ZI@\350\032J\000\355\224H\200EdI\200\3425J\000\317\031I\200\266\346I\200\302\231H\2005\275I\000\231\"I\000\033\267I\300\330\247J\200?eI\2407\240J\000-\264H\0007CH\300\026qJ\000\341\226H\200\226\030I\200\247*I\000B\357H\000=\333H\000\232\215H\200,\000I\200\314\017I\000^\227H\000\272\333I\200\231@I\000\370\247H\000\013tH\200jII\000~\345H\000\323\302H\000-\264H\000$tH\200\226\230I\300\035\364H\000\323\302H\000e\201H\000\242\337H\300\'\206I\000\377\021I@\347\224H\200\237UJ@(\272I\340\2464I\000\244\265I\200j\311I\240\354jJ@\357\204I\300I\303H\300\221\036I\300\024\236I\200{[I\200&\001I\200\340\224H\200{[I\200\3346I@\2618I\000G\206H\340\230\340I\360\316\031I\200\235\233I\000\207\245H\000\232\215H\000\247\363H@\230yH\000\024\315H\000-\264H@\017\323I\000\346*I\200\226\030I\000\357gI@\211\025J@\r\200I\200[\rI\000=[I\300E\232H\200\202EI\340#\364H\200\226\230I`;/I\200\3346I\340ZIJ\000y\321H\200\021\303H\200\001\006I\200\0001I\000\272\333H\000x\346I\000\247sI\000\305\356H\200\226\230I\200C\303H\3401\310H@\363\255I\000\3020H\000\377\221H`\2620J\300u\022I\200=\222I\200,\200I\200\226\030I\2005\275I\200>\372I\200\260gI\200F\317I\200\311\203H\200\316bIpo\230J`QUJ\000\2524H\000\r\343H`7\006J\000\"\241H\000\355\224H\200=\022I\000\247\363H\200\010\006I\200\276;I\300\263[I\200\247*I\000\277VH@\370\266I\300\337*I\200\342\347H\000\024\315H\000\0337I\000$tI\000\232\215H\340\353gI\000\272\333H\000\224\216I\340\324VI\200jII\200\240@I\200\226\230I\000\241[H\000\226\341I\300K}J\200\304:I\300\221\236I\000\237!H\000\337\300H \263\001K`\304-K\000IYI\200=\022I \341#J\300\024\267H\000\337@I@8zI\000P\303I\200\3346I\000\205\317H\000u(H\000\242\337H@\"\tI\340\001CJ\200\313\244I`}$J\000\337\300H\000\033\267J\000\017\271H\000rgH\300\263\302I\000\004\246H\2005=I\200\021CI\200FOI@6\'I\000\255\362I\200\257|I\000\004\020I\340\325sJ\200?eI\300\'\206I\200&\001I\200q3I@$\221I\300\254\330J\000\247\363H\000\366\245H\240\236\325J\0006qI\360\345*I\200\3425J\300e\317I\000\272[H\200\255)I\200\220\031I\000\355\024I\200\331\252H\000\377\221H0[\222I\200C\021I\000\033\267H\200\227\003I\300\330\'J\200\255)I@\242\371I\000\272[H\300B\300I\300u\022I\020\350#I\000\033\267H`9\'I\000$tH\000\343\351H\000\'\034H\300I\303H\000\336UH@\316HJ\000\026#I\360\224\230I\000\346*I\0006qI\200[\rI\000\320\204I\000\361\275H\200\227\003I\000\0337J\000\350\375H\200\363\307I\200\025\241H\000\357\347H\000\270\010H\000\261\036I\000\016\316I\000\247\363H\200\255\251H\000\321\354H\200\237UJ\300n\217I\200\324aI\300~\266I\0009\262H\000\300\332H\300\323\023K@\341\260I\000.\352G\000\227LI\000\rMI\200\227\003I\340\0277I\200\313\244I\200k4I\340\304/I\200\240@I@\263\216I\200\010\006I\200\237UI\200\324aI\200\237UI\000ICI\3009\003J\200\247*I\000\274\261H\340LCI\000\004\246H\000\272[H\270@\tK\000\377\021I\000$\364G\300\337*I\000\010OI\200\276;I\000\033\267H@]\306J\000g\324H\000\377\021I\200\3721I\000\260\263H`\013\267J\300\366\273H@\240\246I\200,\000I@K\311I`\326*J\000n>I\200[\rI\200\351\237H\200a\014I\200/>I\300B@J\200\260gI\000\302\260I\360?\034I\200\021CI\000@\034F\200\021CI\200\302\344H\200\027BI\200\247*I\200\021CI\360{\022I\200\3346I\000\244\265I\000\352SI\000$\364K\200\335\241I\000\220bF`H\030J\000^\027I@T\tJ\200C\021I\340\271\333H\200\005EI\200\352\212H`\365\020K\000\377\221H\000\350}H\000K\257H@S\236I\300\232\333I\000\312\005I\340\325sJ\300\004\020I\200\324aI\200r\236I\300\r\264J\000k\375H\000\330VI`)\200I\240@\335K`H\030J@\276\241I\200\333KI\000\247\363H\0004\236H\000\207\245H\000;\210H\000|\022H\3009\034I\200\260gI@[\014I\000\352SK@\306\363J\000\266\375G\000\243\312H\200\021CI\300\337\221I\0002\310H\000-\264H\000\305\356H\000.=I\360\316\031I\200r\236I`QUJ\00092I\000\0337I\300\035\333I\000\326\203H\200\215qH\200\352\nI\200LNI\000BoH\2005\275J\000e\001I\000\232\rH\000\310\257H\000\261\236I\200\227\003I\200=\022I\200r\036I\000@\034I\000P\303I\000\r\343H\000\234`H\000c\022H\300\235UJ\000\2741I\000\205\317H\000\026\364H\000@\234H\200\t\356I\000+^I\3009\003I`\023\014J@\363\255I\000\377\221H\000\214\271H`gIIp\257\236I@\265\341I\200\356\345H\200\027BI\300\035\333I\300u\022I\000\207\245H\200\273\257H\200a\014I\200\343 I\000\312\205G\200\226\030J\240\256!J\200\177\271H\000\350\375G\300\357\321H\000\344TJ\000@\234H\000\346\252I\200y\010I\000G\206I\000\001\345H\200\027\302I\000\243\312H@\345\331I\000\227\314H\000\377\021I\200\324aI\200\304:I`\365\220K\000\204\031I\000\024\315I\300\317\003I\000PCI\000PCH\330\335dK\000\356|H\000w\373H\200=\222H\000\377\221H\000\177\320H\000\344TJ\000\205OJ\000\317\003I\200tqI\200x\235I\200\304:I\300\341\344I\000\301/I@\036\222J@w\230I\200\324\341I\200\267QI@[\014I\000NmH\000PCH\360#tI\300\035\364H\200\313$I\200\037\227H\0008\307H\000\346\252H\200,\000I@\303\265I\300\341dJ\200\nYI\000\205\317H\200F\317I\200o\022H@\211\225I\200y\010I@B\014J\200\0001I\200\3346I\200\226\030I\000G\006I\000\366QH\200\tnI\000\013tH\200\217.I\000\017\271H\200j\311I\000\004\246H\300+HI\200\325LI\000i\252H`\300\204J\200\240*I\000\247\363H\200{[I\0008\307H\000\346\252I\000$tH\340.HI\200\nCI\000\356|H\000\316.H\300\341\375H\200,\200I\200=\022I R\246K\340\206\030J\340C\006I\340\367\227H\300\252\205I\000\306\'G\200,\200I\000y\321H\300>\214I`gII\200\3425I\340\304aJ\200xOI\000\223#I\000\247sI\000K\257H@R3I\000\373\345H O\232I\200{[I\000P\303H\000y\321H\000\323\302H\200\010\006I\000\'\034HP*\325J\240\336\370H\000usJ\000\001eH\000\323\302H\200,\200J\200\313\244I\374#tJ\200\267QI\340\255\236I\000\346*J\000\214\271G\200\220\031I\340>\261H\000\323\302H\3000\303I\000R\231H\200\tnI\000\303\233H\000\343\351H\24006J\200T#I\000k\375H\000I\331I\200{[I\200C\303H\340Q\014J\000\247\363H\200>zI\0007CH\200V\366H\200\354]H\000@\234H@u)H\000\237\010H\000\305\356H\000\322WH\300\263\302I@B\214I\200\3346I\200\226\030J\020p\331K\200t[I\000i*I\200a\014J\200\215\215H`\223\030I\200\nYI\000\205\317H\300\252\236I\200\313\244I\200\3346I\200\377\371G\300>\214I\300\024\236I\000\261\036I\200\010\206I@\303\265I\200\342\265I\000\0337I\200FOI\200\tnI\000\321\354H\000G\206I\340\370\005J\200{[I\000\334\177I\000\247\363H\200\324aI\200\010\006I@w\230I`{\022I\000$\364H\300\207\363I\000\2228H@\003\325I\300>\214I\000\301\305H@\357\204I\200dJI\000\272\333H\200\247\252H\000=\333H\000-\264H\300~OI\000TlI\000*sH@\211\225I\000l\004G\200FOI\200\010\006I\2005=I\300n\017J\300\364\301I\300~\266I\000\"\241H\200\345sI\000p\224F\200=\022I\000fiH\200dJI\300\\\227H\000\377\221H\000\272\333H\000Y\203H\200FOI\000\317\031I\000\225\366H\000$\364H\000e\201H\000`TI\360\0327I\000BoH\200C\021I\000\"!H\000\261\036I\200dJI\000\323BH\000\r\343H\000\017\271H\300\'\206I\0006qI\340\017\227J\200\177\271H\000|\022H\000$\364I\200=\022I\200\001\034I\200,\000I@T\tJ\000\266\375G0.\323I\200\322\016I\240U\033J`\365\020J\200r\036Ip\353\255J\200\021CI\000\265\307H\000u(I@\307\336I\340ZIJ`\023\014J\340S\211I\000&JI\000P\303G\200\363GI\200\010\006I\200,\000I\0009\262H\200T#I\000\317\231I@F5J\200\247*I`\023\014J\200\363\307H\200\016\005I\360{\022I\000,\311I\000\205\317H\000\"\241H\200\351\321H \3763J\000\330\326G\000^\027J\340\324VI\300\207\363I\000u(I\200\0001I\340\325sJ\300~\266I\200=\022I\200\255)I\000\310\257H\300@\006I\000\0337K\000\321\354H\000\237\010Hpo\230J\000[\326H`\224\265J\200jII\000\346*H\300\211II\200,\000I`\241\036J\200CCH\000\247\363H\000\321\354H@\222\322I\000PCH\000e\201H\000\214\271H\300R\347I@(\272I\200\316bI\300\\\022J\000\357gI\300\r\315H\200\235\002Ip;\322J`:\022I\200\333\300I\300\330\'J\200\271\'J\000G\206H\200{[I\200N\326H\000\366QH\200\201\317I\000\032LH\000\261\236H\300\207\363I\000n\276H\000\272\333H\200\3346I\000\316.H\000\317\231H\200\331*H\200{\333I\000\323\302H\300B\300J\000\304\006H \226\341H\300~\266I\000=\333H\200]`I\200FOI\200\021CI\200\255)I\000\234`H@\306sI\300ICI\200\021CI\000\n%H\000\2524I\200q\345H\200\010\006I\200{[I\000\270\210H\000\261\036I\000\205OI\200\246?I\200=\022I\000\321\354H\000\271pI\000\234\340H\000\323\302H\000\2366I\200\345\363I\200q\345H\200,\000I\340,\264H\000\247\363H\000\2603H\200%\026I\200\247*I\300\252\205I R&K\200\367\245H\000\205\317H\340j>I\200\227\203H\200\003oI\300W\227H\000|\022H\000\377\221H`\241\036J\200\003oI\000\r\343H\200\332\225H\000\252\177H\000\310/H\000\214\271H\200\177\271H`\315\352I\200,\200I@\372\227I\000\205OI\000P\303H\340\255\236I\200{[I\300\317\347I\200{[I\200y\010I\000\013\220H\000\205\317I\200k4I@r\035I\000\"!I\200<\'I`H\030J\200\313$I\000e\201H\200\351\037I\000\261\236H@\321\211I\0002HH\000\357\347H\300\\\222I\300\263[I\000~\345I\200\322\016I\200,\000I\200\tnI\000|\222I\200\266fI\200{[I\200>zI\200\324\341I\000\223\243H`\205\241H\300\024\236I\000\0337H\0002\310H\000\252\210H\000\231\242H\360\363\266J\000s9H\200\226\030J\000|\022H\300\375\245H\200\0001I\000|\222H\200\247*I\000\366\321H`*\235J\300\330\247L\000^\227H\000\302\260I\300\321\326H\000y\321H\200\276;I@K\311I\000\005\021I\200[\rI\000\261\236H\200C\021I\200\313$I\000\r\343H@\254$J\200\313\326H\340\226\rI\2006\022I\000P\303G\000\261\036I\000\352SI\340\242\312H\340\324VI\000|\222I\000\004\246H\0006qI\200\304\354H\200[\rI\200\027BI\000\033\267H\200T#I\200\201ZI\360\271[I\200\377\367H\200M9I\000\024\315H\200t[I\200\213\005J\000\207%H\000\355\024I\200\226\030J\200\3721I\370z\030J\200\264\305H\000\2149I\000rgH\340\000&I\000o\251I\000\033\267H@\357\204I\000G\006I@w\230I\200=\022I\000\346\252H\000e\201H\000G\206H\000\346*J\000\215\244I\0009\262H\000\261\036I\000\361\275H\000U>H@\3410J8\256\026L\300\350NJ\200\010\006I\000G\206I\000\223\243H\200\237\325K\000\317\231H\300n\217I`k\262H\000\346\252I\200\226\030J\000\013tH\200\027\364H\300\275jI\300e\317I@\026\275I\000u\250H\3009\234H\000#\214I\000\357\347H\000\277VH\200LNI\000\207\245H\200\000\261I\000\334\202J\000\205OI@\r\200I\200(TI\200\010\206H\000\270\010I`\013\005I\200FOI\000$tH\300\002&H\200\305%I\000K\257H0\007\033I\200C\303H\200\345sI\000\374iG\300\301\257H\000\242_H\200jIJ\000\363\'H\200jII\000\270\010G\200\273\257H\200a\014I\000\330VI\000w{H`\316\021J \301\353H\340\342*I\2402\214I`\231\rI\000\205\317H\340\001CJ\000G\006J\000\243\312H\300R\347I\000\334\377H\000\270\010H\200\217`I\200\231VI\000\037\340H@/$J\000\375\273H\000\035\215H`\224\265J\000i\252H\000\0337K\300\026\361I\000i*I\200/>I\000\261\236H\000\2214H\000G\006J<T\tJ\000\016\234G\000PCJ\200\345sI\000\346*J\200\237UI\277\330\'K\000;\210H\000\0337I\0004iH\200\227\203H\000n>H\300\006JJ\0005\211H\300\375\245H@\341\260I\300\337*I\200\237UI\200\t\356I\000$\364I\000\214\271H\000\261\036I\200,\000I\000\'5I\240\002\235H\200\304:I\200\010\006I\200\363GI\200\322\016I\200\021CI\000\205\317H \234\nI\200=\022I\200,\200I\000\377\221H\000@\234H\200\021CI@]\306J\000\366\321J\000`jH\270@\tK\300\306\252I\000G\006I\000\330\326H\300\341\344I\300u\222H\340\370\005J\000/\333H\000\341\226H\340\325sJ\000x\346H\300\263\302I\200\035\363H\300e\317I\200\231VIp\360\tI\300ICI\000\265\307H\200\3721I\340\206\030J \310\274J\300\263\302I\300\330\247I\340{\222H\000\324\255G\000\350\375H\000\321\354H\300\003&H@\222\322I\200\201ZI\000d\226H\000\232\rI\3009\203I@\374\352I\340\034\000J\200a\014J\000\357\347H\200\003oI\000\035\215H\000\033\267I\300\035\333I\300I\252I\200\000\261I\000\356|H\3000CI\270\223\220K\000\037\340H\000\272[H\000:\235I\000G\006I\000\346*I\000\025\037H\200%\026I@\027\250I@\341\260I`\023\014J\000|\022H\000\352SI\360\271[I\000\252\264H\250\026\310J\000\"!H\200{[I\200\240@I\200\000\343H\340O\303H\000\265\307H\200j\311I\340\370\005J\000e\201H\000\330VG\200j\311I\000\205OI\000\272\333H\300\207\363I\300\337*I\200\267QI@\276\241J\200\3346I\000~eH\000\323\302H\200tqI\000\337\300H\3009\003J\200\313$I\300I\252I\000\321\354H\300\'\206I\200=\022I\000\261\236H\000\035\215H\200\247*I\200a\014I\000j\340G\370O\303I\020\2344I\000\270\210H\300\337*I\200y\010I\000\361\275H\200=\022I\000\247sI\000W\255H\000\223#I\000\024\315I\2005\275J\000$tJ\000\323\302H\340\324VI\000=\333H\200\010\006I\0007\303G\000i\252H\200\313\244I\340{\222H\000\317\231H\200<\247I@\200\325I\000\247\363H\300\355\347H\200]`I\200\021CI\200\334\266I\000\357\347H\300~\266I\200\273/H\320;\236J\200=\022I\300B\300I\200\247*I\300\344\232I@T\211I\200\304\354H\000\006\371H\200C\021I\000\205OI\000\252\210H\200\t\356J\200,\000I\300\242II`+SI\000n\276H\000u\250H\000_\377H\300\033!I\000\037\340H\000g\324H@w\230I\000\234`I\000\346\252I\000\350\375H\000\346\252H`\235rK\300NCH\000\354BG\000\205\310H\200\204\033I\300\0247I`\023\014J\000\323\302H\360\345*I\000\243JI\000\247\363H\300w\314I\300I\252I\340\255\036I\000\245\240H\000\207\245H\200\260gI\300\337*I\200\351\321H\200\332\225H\3000\303I\000\377\221H\200\305\017I\000)\213H\300~\266I\200C\021I\200\247*I\000[\326H\000\267\356H\2005=J\000P\303G\200\177\271H\200\226\030I\000\257/H\300\035tI\000\361\275H\2005\275I\200\007\033I\000\375\273H\300\'\206I\200r\236Ip\"tI\000Y\203H\000\223\243H\000\227\314H\300\\\222I`g\027JpN\303I\000\005\221H\300\337\221I\000\013\341H\3000\303I\200\237UJ\000\013tH\000|\022J\000|\022H\0007CH\200{[I\200\352\nI\200\226\230I\300u\022I@B\014J\240\343-J\200\211/I\300\317gJ\300\271ZI\200a\214I\370{\222I\000\227\314H\200=\022I\000\006\371H\000\346\252H\300\263[I\200\226\030J\000\247sH\000i\252H\200\010\206I\000\344\324G\000$tH\000\314XI\000yQI\000\017\271H\000\033\267H\200\333KI\000+\336H\000\261\036I\340C\006I\200\027BI\200\264\023I\360\0327I\000j\025J\200y\010I0\323\027K@\212\000J\000NmH\340LCI\000$tJ\260F\006I\200\235\002I\200\021CI\340B\033I\000\377\021I\000\344\324G\000\006yH\000\017\271H\000GjH\200=\022I\000b\317I\000@\034G\260\020sI\000\310/H\000|\222I\340-\022J\340\342*I\200c\337I@~\202I\000\0337I\000Y\203H\000|\222I\000\205\317H\200\273\257H\000\037\340H`F\006I\200\324aI\200[\rI\000\361\275H\000~\260H\200\240*I\000G\206I\200=\022I\000\212\030I\000\0337I\000\205\317H\200%\226I\200\260gI\200\"\364H\200\016\005I\200=\234G\000\214#I\000|\222G\340k[J@\363\255I\000)\013I\300/\335H\200\021CI\000\0337I\000\303\233H@\207\rI\000\247\363H\340\370\005J\200o\222H\200\0001I\000\377\221H\300\0247I\000\\\332I\200\027BI\200c\337I\0006\361H\200,\000I\000\337\300H\200\000\261I\200\201ZI\000o\020H\000\357\347H\200$\253H\000*sH\360\0327I\000R\031I`\345\252H@\036\022I \263\201J\200{[I\200\253\210H\000\346\252H\260\272\344J\3000\303I 3@J@\211\225I\300\'\206I@B\214I\300\221\236I\000\260\263H\000\036\303G\200\345sI\200j\311I\000\240\214H\300\252\036I\200\237\325I\200\0001I\000n>I\000\331\301I\300\373\317H\300g\276H\000^\227H\200\273\257H\000f\351G\200\231\326H\200\313$I\000\246\326G\000~OI\3009\034I\200%\026I\200r\236I@$\206I\300\252\036I\200\010\006I\200\325LI\000I\331I\000\272[H\300\'\206I\300\337*I\200\3346I\300\'\206I\000\370\'I\200=\022I\000\257\226H\000NmJ\200\334\266H\320\237\236I\200]`I\300\350gI\300\\\222I\000\247\363H\340\3146J\3000\303I@\254\244I\200\021CI\200\t\356J\000\317}H\300\026qK\200\021CI\000BoH\000\035tI@\222RJ\200r\036I \263\001K\200a\214I\000\024MH\000\331sI\000$\364H\300\366\"J\200\273\257H\000\256]H\200\010\206I\2005\275J\200FOI\200a\014I\300\252\205I\200\177\271H\200\3721I\000\377\021H\000\272\333H\200\353rI\300\232\333I\000s9H\000\346*I\000n>I\200\345\363I\200\367\245H\200\247*I\000z\243H@\343\206I\200O\017J\000\357gJ\000~\345I\200\025\241H@\211\025J\300\330\247I \007\361J\000\234\010H\200\253\010H\000\263qH\200[\rI\000I\331H\200\010\006I\000\227\314H\000\326\345I\200=yI\200\313$I\300l\271I\200\3346I\000G\006I\3009\234H\000\320\204I\000\206[I\200\363GI\000\237\010H\000\310\257H\300\337\221I\200\304:I\000\270\010H\300\335\260I\200\215\215H\000$\333H\000\205OI`\206aJ\200a\214I\000\205\317H@\3345I\300wLJ\000\214\271H\2005\275I\000\205OI\340\264\010I\200{[I\000\346*J\220\276\003J\000u\250H\300n\217I\000\263\361H\200\nYI\000\205\317I\000\r\267H\200{[I\000\034\242H\000\377\221H\340\001CJ\300\'\206I\000\357gI\000\323\302H\000\377\221H@\351\205J\000\017\271H\200j\311I`QUJ\200\240@I\300A\325J\000\227\314H\300\263\302I\340Z\027I\300~\266I`7\006J\000G\206I\000y\321H\000*sH\200\237UI\000\310/I\200\305%I\000\374\320H@\3720I`\316\031I\0006qI\200\237UI\000g\324H\000\326\003I@{\301I@\r\200I\200\237UJ\000G\206I\000\366QH\200k4I\200\3721I\300\035tI\200\3346I@\222\322I\200S8I\000\337\300H\000\nCI\200LNI\300\223\rI\000\017\271H\200\tnI\200=\022I\200\025lI@\003UJ\200dJI\200\217\340H\200\211/I\000F\033H\200\247*I\000\361\275H\000\207\245H\200\230kI\000-4I\000k\375H\200\247*I\000\305\356H\200=\022I\000\261\236H\200\3346I\200\353rI\000\225\366H\300\350\316I\200r\036I\0002HJ\000\337\300Hp\257\236I\300ICI\200!TI\200\324aI\000\227\314H\000\261\036I\000\357\347H\000t\275H\000\247\363H\000e\001I\300\373\266I\000K\257H\300W\027I\000\366QH\200\343 I\200{[I\200jII\360\316\031I\300\232\333I\200\010\006I\200r\036I\340ZIJ\000^\227H\200&\001I\200\353rI\200\314\017I\200\003YI\000\\\301G\360\374\363J\200,\200I\200C\303H`\273mJ\200\267QI\200\313\244I\000\305\356H\000\037\340H\200\227\003I\300\336&I\000K/H\340\3146J\000TlH\000i\252H\000F\033H\000|\222I\000\033\267I\300\026\361I\000\034\242H\300\306\252I\2005=I\000\252\036I\000\340\253G\200\037\001I\000\357gI\200\235\264H\000\2524I\000\330\252H\000fiH\200\240@Ip\005\200J\200\271\331H\200\201\332I\000\356|H\000G\206I\000\272\333H\000G\006J\300\254\330I@\r\200I\000^\027H\000\243\312H\200a\014I\200\001\234I\300\341\344J\300\035\364H\300#tH0\334\324J\000\352SH`}$J\200\0001I\200\t\356I\200\343\nI\000)\013J\340\255\036I\200=\022I\000K\257H\200\353rI\300\373\266I\300\364\301I\200FOI\200?eI\200\251}H\200=\022I\000\331\301H@(\272K\200\215\215H@\275\220H\000G\006I\000+\336H\200]\340H\200\260\347I\000\013\220I\000\270\010H\300I\252I@\021\251I\200\276%I\000K\341H@\r\200I\000\024MI\300)\316I\000\247sI\200\260gI\000\227\314H\000K/H\200\235\002I\300\223\rI\000l\350G\200\267QI\3000CI\000\r\343H\300K\375I\000\205\317H\000*sH\000\032LH\000k\375H\000\205OI\360{\022I0\372\266I\200\021CI@\211\025J\000\243JI\000%\337I\340\240gJ\000\357gI\000\013\020I\374#tJ`\316\031I\300\265\030I\200=\022I\300\355\342I\200\333\375H\200\373\316H@\374\352I`\376MJ\240\231\256H\000\346*H\200\227\003I\200\247\252H\000\200`H\000\013tH\200/>I\000\354\251H\000\'\034H\200\010\006I\200C\221I\200\260gI\000\364\027Gp\375\221I\300\373\266I\300\341\344J\300\026qJ\300\306\252I\200\000\343H\340\246\363H\300~\266I\000\245\240H@\350\232I\000;\210H\360\231EK\200\352\nI\200\324aI\200\353rI\000~\345I@w\230I\000\317\031I\000\016\316I\000k\375H\300\r\264I\300\r4J\000$tH\2005=I`\0137J\000\350\375G\200\324aI\000W-I\000\037`H\000rgI\200\220\031I\200\324\341I\2005=I\000\223\rI\000\361\275H\000\245\240H\200\322\016I\000\n%H`\2620J\000F\033H\0002HH\200\3346I\000GjH\260\261\247J\300E\201I\000\232\rH\200\201ZI\000\272[I\000\205\317H\300\026\361I\300I\252I\000w\373H\000\375\273H\200=\022I\000k\375H\000(\240H0-\211J@T\"I\000IYI\300\252\205I\200\260gI\300\306\252I\200FOI\200\202EI\000\270\210H\000\214\271H\000=\333H\2005\275I\000\355\224H\000Q\256I\000\357\347H\260\272\344J\000G\206I\200\201ZI\000`\352H\000w\373H\200\324aI\000\261\036I\300\214\212I@B\214I\000\323BI\200\260gI\200o\022H\000\247\363H\320w\235I\000Q\256H\000|\222I\000\014\370H\200\313\244I\200=\022I\000G\206H\000e\001I\000\346*I\200=\222I\000F\033H\200%\026I\300\004tI\000VBH\000|\222G\200a\014I\200\255)I\340\264\010I\200\027\364H@w\230I\000F\005I\300\035\333I\200,\200I0\010\244K\200\226\230J\000\0337K\340Q\014J\340\0277Ipo\230J\200\227\003I\000\"!I\000G\206H\200\305\017I\000\366\245H\200\3425I\000e\201H\200\021CI\200\251\000I\200\325\314HP\343;I\240\366\317H\300\317\347I\000\004&H\000\263\361I\200\345sI\000\357\347H\000\252\036I\000\0179H\000\257/H\300\305\264I\200,\000I\340j>I\200\027BI\0002\310H\300\026\361J\200=\022I\200=\022I\200\360\tI\200\025\241H\200\324\341I\200\313$J\300\'\206I\000u\235I\200\217\030I\300\035\333I\340x\022I\200cII@x_H0-\tK\200\235\002I\000\336UH\200C\021I\000\357gI\000\001\345H\000\377\221H\000\323\302H\000K\257H\000\272\333H\240\267^J\000;\210H\200\010\006I\200\010\006I\300\221\236I\200\322\016I\000\017\271H\300\373\266I\200=\022I\200\313$I\000\343\351H\000\261\236H\000\272[I\000\356|H\300\035\333I\000\247\363H\000:\204I\300\337\221I\000\261\036J\200LNI\000\224\216H\000\346*I\200r\236I\000`\352H\000`jH\000\014\370H\300B\300I\360\335UI\200=\022I\200{[I\200\226\030I\200mqI\000|\222I@\r\000J\000\323\302H\200jII \263\201J\000\006\371H\200\351\321H\000\227\314H\200L\316I\340\201OI\200\313\326H\000\017\271H\300E\201I\000\323\302H\000\352xH\300\205\240I\000\376\246I\200\255)I\300\r4J\000G\206H\200\217.I\340\371;I\200\314\017I\2005=I\000\227\314H\200dJI\300|\340I\000\357gI\310\274\343K@\026\275I Y\220I\300\337\221I\000\033\267I\340\273$J\2005=I"
      }
    }
  }
}
node {
  name: "linear/linear/reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "v\014\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/reshape"
  op: "Reshape"
  input: "Const_2"
  input: "linear/linear/reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bucketize"
  op: "Bucketize"
  input: "linear/linear/reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "boundaries"
    value {
      list {
        f: 0.0
        f: 200.0
        f: 400.0
        f: 600.0
        f: 800.0
        f: 1000.0
        f: 1200.0
        f: 1400.0
        f: 1600.0
        f: 1800.0
        f: 2000.0
        f: 2200.0
        f: 2400.0
        f: 2600.0
        f: 2800.0
        f: 3000.0
        f: 3200.0
        f: 3400.0
        f: 3600.0
        f: 3800.0
        f: 4000.0
        f: 4200.0
        f: 4400.0
        f: 4600.0
        f: 4800.0
        f: 5000.0
        f: 5200.0
        f: 5400.0
        f: 5600.0
        f: 5800.0
      }
    }
  }
}
node {
  name: "linear/linear/shape"
  op: "Shape"
  input: "linear/linear/bucketize"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/shape"
  input: "linear/linear/strided_slice/pack"
  input: "linear/linear/strided_slice/pack_1"
  input: "linear/linear/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/range"
  op: "Range"
  input: "linear/linear/range/start"
  input: "linear/linear/strided_slice"
  input: "linear/linear/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zeros/shape"
  op: "Pack"
  input: "linear/linear/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zeros"
  op: "Fill"
  input: "linear/linear/zeros/shape"
  input: "linear/linear/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/reshape_1"
  op: "Reshape"
  input: "linear/linear/bucketize"
  input: "linear/linear/reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/pack"
  op: "Pack"
  input: "linear/linear/range"
  input: "linear/linear/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/transpose/Rank"
  op: "Rank"
  input: "linear/linear/pack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/transpose/sub"
  op: "Sub"
  input: "linear/linear/transpose/Rank"
  input: "linear/linear/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/transpose/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/transpose/Range"
  op: "Range"
  input: "linear/linear/transpose/Range/start"
  input: "linear/linear/transpose/Rank"
  input: "linear/linear/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose/sub_1"
  op: "Sub"
  input: "linear/linear/transpose/sub"
  input: "linear/linear/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose"
  op: "Transpose"
  input: "linear/linear/pack"
  input: "linear/linear/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/ToInt64"
  op: "Cast"
  input: "linear/linear/transpose"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/pack_1/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/pack_1"
  op: "Pack"
  input: "linear/linear/strided_slice"
  input: "linear/linear/pack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/ToInt64_1"
  op: "Cast"
  input: "linear/linear/pack_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Assign"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0"
  input: "linear/size_bucketized/weights/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/read"
  op: "Identity"
  input: "linear/size_bucketized/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice"
  op: "Slice"
  input: "linear/linear/ToInt64_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice/begin"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Prod"
  op: "Prod"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather"
  op: "Gather"
  input: "linear/linear/ToInt64_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/new_shape"
  op: "Pack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Prod"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape"
  op: "SparseReshape"
  input: "linear/linear/ToInt64"
  input: "linear/linear/ToInt64_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/new_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Where"
  op: "Where"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Where"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather_1"
  op: "Gather"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather_2"
  op: "Gather"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  op: "Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/pack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/pack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast"
  op: "Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range"
  op: "Range"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/start"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast_1"
  op: "Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/pack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/pack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  op: "ListDiff"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/pack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/pack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense"
  op: "SparseToDense"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat"
  op: "Concat"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat/concat_dim"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/zeros_like"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Fill"
  op: "Fill"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1"
  op: "Concat"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1/concat_dim"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2"
  op: "Concat"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2/concat_dim"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseReorder"
  op: "SparseReorder"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Identity"
  op: "Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseReorder"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/pack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/pack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Cast"
  op: "Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Unique"
  op: "Unique"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseReorder:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup"
  op: "Gather"
  input: "linear/size_bucketized/weights/part_0/read"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights"
  op: "SparseSegmentSum"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Unique:1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Cast_1"
  op: "Cast"
  input: "linear/linear/ToInt64_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Cast_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/begin"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/begin"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/concat"
  op: "Concat"
  input: "linear/linear/size_bucketized/size_bucketized_weights/concat/concat_dim"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights"
  input: "linear/linear/size_bucketized/size_bucketized_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "v\014\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/reshape_2"
  op: "Reshape"
  input: "Const_1"
  input: "linear/linear/reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Assign"
  op: "Assign"
  input: "linear/bathroom/weight/part_0"
  input: "linear/bathroom/weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/read"
  op: "Identity"
  input: "linear/bathroom/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bathroom/weight"
  op: "Identity"
  input: "linear/bathroom/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bathroom/matmul"
  op: "MatMul"
  input: "linear/linear/reshape_2"
  input: "linear/bathroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "v\014\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/reshape_3"
  op: "Reshape"
  input: "Const"
  input: "linear/linear/reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Assign"
  op: "Assign"
  input: "linear/bedroom/weight/part_0"
  input: "linear/bedroom/weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/read"
  op: "Identity"
  input: "linear/bedroom/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bedroom/weight"
  op: "Identity"
  input: "linear/bedroom/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bedroom/matmul"
  op: "MatMul"
  input: "linear/linear/reshape_3"
  input: "linear/bedroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/lookup"
  op: "StringToHashBucketFast"
  input: "SparseTensor_1/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 100
    }
  }
}
node {
  name: "linear/property_type/weights/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Assign"
  op: "Assign"
  input: "linear/property_type/weights/part_0"
  input: "linear/property_type/weights/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/read"
  op: "Identity"
  input: "linear/property_type/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice"
  op: "Slice"
  input: "SparseTensor_1/shape"
  input: "linear/linear/property_type/property_type_weights/Slice/begin"
  input: "linear/linear/property_type/property_type_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Prod"
  op: "Prod"
  input: "linear/linear/property_type/property_type_weights/Slice"
  input: "linear/linear/property_type/property_type_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather"
  op: "Gather"
  input: "SparseTensor_1/shape"
  input: "linear/linear/property_type/property_type_weights/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseReshape/new_shape"
  op: "Pack"
  input: "linear/linear/property_type/property_type_weights/Prod"
  input: "linear/linear/property_type/property_type_weights/Gather"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseReshape"
  op: "SparseReshape"
  input: "SparseTensor_1/indices"
  input: "SparseTensor_1/shape"
  input: "linear/linear/property_type/property_type_weights/SparseReshape/new_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/lookup"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/property_type/property_type_weights/SparseReshape/Identity"
  input: "linear/linear/property_type/property_type_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Where"
  op: "Where"
  input: "linear/linear/property_type/property_type_weights/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/Where"
  input: "linear/linear/property_type/property_type_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather_1"
  op: "Gather"
  input: "linear/linear/property_type/property_type_weights/SparseReshape"
  input: "linear/linear/property_type/property_type_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather_2"
  op: "Gather"
  input: "linear/linear/property_type/property_type_weights/SparseReshape/Identity"
  input: "linear/linear/property_type/property_type_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Identity"
  op: "Identity"
  input: "linear/linear/property_type/property_type_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Identity"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/pack"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/pack_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast"
  op: "Cast"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range"
  op: "Range"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/start"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast_1"
  op: "Cast"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Gather_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/pack"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/pack_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  op: "ListDiff"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Identity"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/pack"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/pack_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense"
  op: "SparseToDense"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat"
  op: "Concat"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat/concat_dim"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/zeros_like"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Fill"
  op: "Fill"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Shape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1"
  op: "Concat"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1/concat_dim"
  input: "linear/linear/property_type/property_type_weights/Gather_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2"
  op: "Concat"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2/concat_dim"
  input: "linear/linear/property_type/property_type_weights/Gather_2"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseReorder"
  op: "SparseReorder"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2"
  input: "linear/linear/property_type/property_type_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Identity"
  op: "Identity"
  input: "linear/linear/property_type/property_type_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseReorder"
  input: "linear/linear/property_type/property_type_weights/strided_slice/pack"
  input: "linear/linear/property_type/property_type_weights/strided_slice/pack_1"
  input: "linear/linear/property_type/property_type_weights/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Cast"
  op: "Cast"
  input: "linear/linear/property_type/property_type_weights/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Unique"
  op: "Unique"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseReorder:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup"
  op: "Gather"
  input: "linear/property_type/weights/part_0/read"
  input: "linear/linear/property_type/property_type_weights/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights"
  op: "SparseSegmentSum"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup"
  input: "linear/linear/property_type/property_type_weights/Unique:1"
  input: "linear/linear/property_type/property_type_weights/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Cast_1"
  op: "Cast"
  input: "SparseTensor_1/shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/property_type/property_type_weights/Cast_1"
  input: "linear/linear/property_type/property_type_weights/Slice_1/begin"
  input: "linear/linear/property_type/property_type_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/property_type/property_type_weights/Shape"
  input: "linear/linear/property_type/property_type_weights/Slice_2/begin"
  input: "linear/linear/property_type/property_type_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/concat"
  op: "Concat"
  input: "linear/linear/property_type/property_type_weights/concat/concat_dim"
  input: "linear/linear/property_type/property_type_weights/Slice_1"
  input: "linear/linear/property_type/property_type_weights/Slice_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights"
  input: "linear/linear/property_type/property_type_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lookup_1"
  op: "StringToHashBucketFast"
  input: "SparseTensor/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 1000
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0/Assign"
  op: "Assign"
  input: "linear/zipcode/weights/part_0"
  input: "linear/zipcode/weights/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0/read"
  op: "Identity"
  input: "linear/zipcode/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice"
  op: "Slice"
  input: "SparseTensor/shape"
  input: "linear/linear/zipcode/zipcode_weights/Slice/begin"
  input: "linear/linear/zipcode/zipcode_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Prod"
  op: "Prod"
  input: "linear/linear/zipcode/zipcode_weights/Slice"
  input: "linear/linear/zipcode/zipcode_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Gather"
  op: "Gather"
  input: "SparseTensor/shape"
  input: "linear/linear/zipcode/zipcode_weights/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseReshape/new_shape"
  op: "Pack"
  input: "linear/linear/zipcode/zipcode_weights/Prod"
  input: "linear/linear/zipcode/zipcode_weights/Gather"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseReshape"
  op: "SparseReshape"
  input: "SparseTensor/indices"
  input: "SparseTensor/shape"
  input: "linear/linear/zipcode/zipcode_weights/SparseReshape/new_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/lookup_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/zipcode/zipcode_weights/SparseReshape/Identity"
  input: "linear/linear/zipcode/zipcode_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Where"
  op: "Where"
  input: "linear/linear/zipcode/zipcode_weights/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/zipcode/zipcode_weights/Where"
  input: "linear/linear/zipcode/zipcode_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Gather_1"
  op: "Gather"
  input: "linear/linear/zipcode/zipcode_weights/SparseReshape"
  input: "linear/linear/zipcode/zipcode_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Gather_2"
  op: "Gather"
  input: "linear/linear/zipcode/zipcode_weights/SparseReshape/Identity"
  input: "linear/linear/zipcode/zipcode_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Identity"
  op: "Identity"
  input: "linear/linear/zipcode/zipcode_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/zipcode/zipcode_weights/Identity"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice/pack"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice/pack_1"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Cast"
  op: "Cast"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/range"
  op: "Range"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/range/start"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Cast"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Cast_1"
  op: "Cast"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_1/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_1/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_1/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_1"
  op: "StridedSlice"
  input: "linear/linear/zipcode/zipcode_weights/Gather_1"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_1/pack"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_1/pack_1"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_1/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/ListDiff"
  op: "ListDiff"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Cast_1"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_2/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_2/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_2/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_2"
  op: "StridedSlice"
  input: "linear/linear/zipcode/zipcode_weights/Identity"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_2/pack"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_2/pack_1"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_2/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/strided_slice_2"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/SparseToDense"
  op: "SparseToDense"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/ExpandDims"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Reshape"
  op: "Reshape"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/concat"
  op: "Concat"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/concat/concat_dim"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Reshape"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/zeros_like"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Shape"
  op: "Shape"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/ListDiff"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Fill"
  op: "Fill"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Shape"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/concat_1/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/concat_1"
  op: "Concat"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/concat_1/concat_dim"
  input: "linear/linear/zipcode/zipcode_weights/Gather_1"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/concat_2/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/concat_2"
  op: "Concat"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/concat_2/concat_dim"
  input: "linear/linear/zipcode/zipcode_weights/Gather_2"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/SparseReorder"
  op: "SparseReorder"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/concat_1"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/concat_2"
  input: "linear/linear/zipcode/zipcode_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/Identity"
  op: "Identity"
  input: "linear/linear/zipcode/zipcode_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/SparseReorder"
  input: "linear/linear/zipcode/zipcode_weights/strided_slice/pack"
  input: "linear/linear/zipcode/zipcode_weights/strided_slice/pack_1"
  input: "linear/linear/zipcode/zipcode_weights/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Cast"
  op: "Cast"
  input: "linear/linear/zipcode/zipcode_weights/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Unique"
  op: "Unique"
  input: "linear/linear/zipcode/zipcode_weights/SparseFillEmptyRows/SparseReorder:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/embedding_lookup"
  op: "Gather"
  input: "linear/zipcode/weights/part_0/read"
  input: "linear/linear/zipcode/zipcode_weights/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights"
  op: "SparseSegmentSum"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup"
  input: "linear/linear/zipcode/zipcode_weights/Unique:1"
  input: "linear/linear/zipcode/zipcode_weights/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Cast_1"
  op: "Cast"
  input: "SparseTensor/shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/zipcode/zipcode_weights/Cast_1"
  input: "linear/linear/zipcode/zipcode_weights/Slice_1/begin"
  input: "linear/linear/zipcode/zipcode_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Shape"
  op: "Shape"
  input: "linear/linear/zipcode/zipcode_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/zipcode/zipcode_weights/Shape"
  input: "linear/linear/zipcode/zipcode_weights/Slice_2/begin"
  input: "linear/linear/zipcode/zipcode_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/concat"
  op: "Concat"
  input: "linear/linear/zipcode/zipcode_weights/concat/concat_dim"
  input: "linear/linear/zipcode/zipcode_weights/Slice_1"
  input: "linear/linear/zipcode/zipcode_weights/Slice_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zipcode/zipcode_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/zipcode/zipcode_weights"
  input: "linear/linear/zipcode/zipcode_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/AddN"
  op: "AddN"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1"
  input: "linear/linear/bathroom/matmul"
  input: "linear/linear/bedroom/matmul"
  input: "linear/linear/property_type/property_type_weights/Reshape_1"
  input: "linear/linear/zipcode/zipcode_weights/Reshape_1"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Assign"
  op: "Assign"
  input: "linear/bias_weight/part_0"
  input: "linear/bias_weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bias_weight/part_0/read"
  op: "Identity"
  input: "linear/bias_weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bias_weight"
  op: "Identity"
  input: "linear/bias_weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/BiasAdd"
  op: "BiasAdd"
  input: "linear/linear/AddN"
  input: "linear/bias_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "centered_bias_weight"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "centered_bias_weight/Assign"
  op: "Assign"
  input: "centered_bias_weight"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "centered_bias_weight/read"
  op: "Identity"
  input: "centered_bias_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "centered_bias_weight/read"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "centered_bias_0"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BiasAdd"
  op: "BiasAdd"
  input: "linear/linear/BiasAdd"
  input: "centered_bias_weight/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3190
      }
    }
  }
}
node {
  name: "strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice/pack"
  input: "strided_slice/pack_1"
  input: "strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Tile/multiples"
  op: "Pack"
  input: "strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Tile"
  op: "Tile"
  input: "centered_bias_weight/read"
  input: "Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Pack"
  input: "strided_slice"
  input: "Reshape_1/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "Tile"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "centered_bias/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "centered_bias/ExpandDims"
  op: "ExpandDims"
  input: "Const_3"
  input: "centered_bias/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "centered_bias/sub"
  op: "Sub"
  input: "Reshape_1"
  input: "centered_bias/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "centered_bias/Square"
  op: "Square"
  input: "centered_bias/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "centered_bias/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "centered_bias/training_loss"
  op: "Mean"
  input: "centered_bias/Square"
  input: "centered_bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/centered_bias/training_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "v\014\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Tile"
  op: "Tile"
  input: "gradients/centered_bias/training_loss_grad/Reshape"
  input: "gradients/centered_bias/training_loss_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "v\014\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Prod"
  op: "Prod"
  input: "gradients/centered_bias/training_loss_grad/Shape"
  input: "gradients/centered_bias/training_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Prod_1"
  op: "Prod"
  input: "gradients/centered_bias/training_loss_grad/Shape_1"
  input: "gradients/centered_bias/training_loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Maximum"
  op: "Maximum"
  input: "gradients/centered_bias/training_loss_grad/Prod_1"
  input: "gradients/centered_bias/training_loss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/floordiv"
  op: "Div"
  input: "gradients/centered_bias/training_loss_grad/Prod"
  input: "gradients/centered_bias/training_loss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/Cast"
  op: "Cast"
  input: "gradients/centered_bias/training_loss_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/training_loss_grad/truediv"
  op: "Div"
  input: "gradients/centered_bias/training_loss_grad/Tile"
  input: "gradients/centered_bias/training_loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/Square_grad/mul/x"
  op: "Const"
  input: "^gradients/centered_bias/training_loss_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/centered_bias/Square_grad/mul"
  op: "Mul"
  input: "gradients/centered_bias/Square_grad/mul/x"
  input: "centered_bias/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/centered_bias/training_loss_grad/truediv"
  input: "gradients/centered_bias/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/Shape"
  op: "Shape"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "v\014\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/centered_bias/sub_grad/Shape"
  input: "gradients/centered_bias/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/Sum"
  op: "Sum"
  input: "gradients/centered_bias/Square_grad/mul_1"
  input: "gradients/centered_bias/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/centered_bias/sub_grad/Sum"
  input: "gradients/centered_bias/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/centered_bias/Square_grad/mul_1"
  input: "gradients/centered_bias/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/Neg"
  op: "Neg"
  input: "gradients/centered_bias/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/centered_bias/sub_grad/Neg"
  input: "gradients/centered_bias/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/centered_bias/sub_grad/Reshape"
  input: "^gradients/centered_bias/sub_grad/Reshape_1"
}
node {
  name: "gradients/centered_bias/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/centered_bias/sub_grad/Reshape"
  input: "^gradients/centered_bias/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/centered_bias/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/centered_bias/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/centered_bias/sub_grad/Reshape_1"
  input: "^gradients/centered_bias/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/centered_bias/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Shape"
  op: "Shape"
  input: "Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/centered_bias/sub_grad/tuple/control_dependency"
  input: "gradients/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/pack"
  op: "Pack"
  input: "Tile/multiples"
  input: "gradients/Tile_grad/Shape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/Rank"
  op: "Rank"
  input: "gradients/Tile_grad/pack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/sub"
  op: "Sub"
  input: "gradients/Tile_grad/transpose/Rank"
  input: "gradients/Tile_grad/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/Range"
  op: "Range"
  input: "gradients/Tile_grad/transpose/Range/start"
  input: "gradients/Tile_grad/transpose/Rank"
  input: "gradients/Tile_grad/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose/sub_1"
  op: "Sub"
  input: "gradients/Tile_grad/transpose/sub"
  input: "gradients/Tile_grad/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/transpose"
  op: "Transpose"
  input: "gradients/Tile_grad/pack"
  input: "gradients/Tile_grad/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Reshape"
  op: "Reshape"
  input: "gradients/Tile_grad/transpose"
  input: "gradients/Tile_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/range"
  op: "Range"
  input: "gradients/Tile_grad/range/start"
  input: "gradients/Tile_grad/Size"
  input: "gradients/Tile_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Reshape_1_grad/Reshape"
  input: "gradients/Tile_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tile_grad/Sum"
  op: "Sum"
  input: "gradients/Tile_grad/Reshape_1"
  input: "gradients/Tile_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "centered_bias_weight/Adagrad"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "centered_bias_weight/Adagrad/Assign"
  op: "Assign"
  input: "centered_bias_weight/Adagrad"
  input: "Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "centered_bias_weight/Adagrad/read"
  op: "Identity"
  input: "centered_bias_weight/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adagrad/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "Adagrad/update_centered_bias_weight/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "centered_bias_weight"
  input: "centered_bias_weight/Adagrad"
  input: "Adagrad/learning_rate"
  input: "gradients/Tile_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adagrad"
  op: "NoOp"
  input: "^Adagrad/update_centered_bias_weight/ApplyAdagrad"
}
node {
  name: "ExpandDims/dim"
  op: "Const"
  input: "^Adagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims"
  op: "ExpandDims"
  input: "Const_3"
  input: "ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "BiasAdd"
  input: "ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Square"
  op: "Square"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  input: "^Adagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training_loss"
  op: "Mean"
  input: "Square"
  input: "Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ExpandDims_1/dim"
  op: "Const"
  input: "^Adagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims_1"
  op: "ExpandDims"
  input: "Const_3"
  input: "ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "BiasAdd"
  input: "ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Square_1"
  op: "Square"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  input: "^Adagrad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss"
  op: "Mean"
  input: "Square_1"
  input: "Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "ScalarSummary_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary_1"
  op: "ScalarSummary"
  input: "ScalarSummary_1/tags"
  input: "loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_1/Fill"
  op: "Fill"
  input: "gradients_1/Shape"
  input: "gradients_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/Fill"
  input: "gradients_1/training_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "v\014\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Tile"
  op: "Tile"
  input: "gradients_1/training_loss_grad/Reshape"
  input: "gradients_1/training_loss_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "v\014\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Prod"
  op: "Prod"
  input: "gradients_1/training_loss_grad/Shape"
  input: "gradients_1/training_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Prod_1"
  op: "Prod"
  input: "gradients_1/training_loss_grad/Shape_1"
  input: "gradients_1/training_loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/training_loss_grad/Prod_1"
  input: "gradients_1/training_loss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/floordiv"
  op: "Div"
  input: "gradients_1/training_loss_grad/Prod"
  input: "gradients_1/training_loss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/Cast"
  op: "Cast"
  input: "gradients_1/training_loss_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/training_loss_grad/truediv"
  op: "Div"
  input: "gradients_1/training_loss_grad/Tile"
  input: "gradients_1/training_loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Square_grad/mul/x"
  op: "Const"
  input: "^gradients_1/training_loss_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/Square_grad/mul"
  op: "Mul"
  input: "gradients_1/Square_grad/mul/x"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Square_grad/mul_1"
  op: "Mul"
  input: "gradients_1/training_loss_grad/truediv"
  input: "gradients_1/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "v\014\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "v\014\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/sub_grad/Shape"
  input: "gradients_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients_1/Square_grad/mul_1"
  input: "gradients_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/sub_grad/Sum"
  input: "gradients_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/Square_grad/mul_1"
  input: "gradients_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/sub_grad/Neg"
  input: "gradients_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/linear/linear/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/Reshape_1_grad/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/sub_grad/Reshape"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/bathroom/matmul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/sub_grad/Reshape"
  input: "linear/bathroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/linear/linear/bathroom/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/reshape_2"
  input: "gradients_1/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/linear/linear/bedroom/matmul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/sub_grad/Reshape"
  input: "linear/bedroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/linear/linear/bedroom/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/reshape_3"
  input: "gradients_1/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights/Reshape_1_grad/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/sub_grad/Reshape"
  input: "gradients_1/linear/linear/property_type/property_type_weights/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights/Reshape_1_grad/Shape"
  op: "Shape"
  input: "linear/linear/zipcode/zipcode_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/sub_grad/Reshape"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3190
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights_grad/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights_grad/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights_grad/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights_grad/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights_grad/Shape"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights_grad/strided_slice/pack"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights_grad/strided_slice/pack_1"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights_grad/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights_grad/Gather"
  op: "Gather"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/Reshape_1_grad/Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Cast"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights_grad/Gather"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Unique:1"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights_grad/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights_grad/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights_grad/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights_grad/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients_1/linear/linear/property_type/property_type_weights_grad/Shape"
  input: "gradients_1/linear/linear/property_type/property_type_weights_grad/strided_slice/pack"
  input: "gradients_1/linear/linear/property_type/property_type_weights_grad/strided_slice/pack_1"
  input: "gradients_1/linear/linear/property_type/property_type_weights_grad/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights_grad/Gather"
  op: "Gather"
  input: "gradients_1/linear/linear/property_type/property_type_weights/Reshape_1_grad/Reshape"
  input: "linear/linear/property_type/property_type_weights/Cast"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "gradients_1/linear/linear/property_type/property_type_weights_grad/Gather"
  input: "linear/linear/property_type/property_type_weights/Unique:1"
  input: "gradients_1/linear/linear/property_type/property_type_weights_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights_grad/Shape"
  op: "Shape"
  input: "linear/linear/zipcode/zipcode_weights/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights_grad/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights_grad/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights_grad/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights_grad/Shape"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights_grad/strided_slice/pack"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights_grad/strided_slice/pack_1"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights_grad/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights_grad/Gather"
  op: "Gather"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/Reshape_1_grad/Reshape"
  input: "linear/linear/zipcode/zipcode_weights/Cast"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights_grad/Gather"
  input: "linear/linear/zipcode/zipcode_weights/Unique:1"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\037\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/Size"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/Shape"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/strided_slice/pack"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/strided_slice/pack_1"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/concat"
  op: "Concat"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/concat/concat_dim"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/ExpandDims"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights_grad/UnsortedSegmentSum"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Unique"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/property_type/property_type_weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/Size"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/Shape"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/strided_slice/pack"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/strided_slice/pack_1"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/concat"
  op: "Concat"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/concat/concat_dim"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/ExpandDims"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/linear/linear/property_type/property_type_weights_grad/UnsortedSegmentSum"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/Unique"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/zipcode/zipcode_weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/Size"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/Shape"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/strided_slice/pack"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/strided_slice/pack_1"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/concat"
  op: "Concat"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/concat/concat_dim"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/ExpandDims"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights_grad/UnsortedSegmentSum"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/zipcode/zipcode_weights/Unique"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0/Adam"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/size_bucketized/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0/Adam_1"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/size_bucketized/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/bathroom/weight/part_0/Adam"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/bathroom/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/bathroom/weight/part_0/Adam_1"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/bathroom/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/bedroom/weight/part_0/Adam"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/bedroom/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/bedroom/weight/part_0/Adam_1"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/bedroom/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/property_type/weights/part_0/Adam"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/property_type/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/property_type/weights/part_0/Adam_1"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/property_type/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/zipcode/weights/part_0/Adam"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/zipcode/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/zipcode/weights/part_0/Adam_1"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/zipcode/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/zipcode/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/bias_weight/part_0/Adam"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/bias_weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/bias_weight/part_0/Adam_1"
  input: "zeros_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/bias_weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/Cast_2"
  op: "Cast"
  input: "Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub"
  op: "Sub"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub/x"
  input: "beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/mul"
  op: "Mul"
  input: "Adam/update_linear/size_bucketized/weights/part_0/Cast_2"
  input: "Adam/update_linear/size_bucketized/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub_1"
  op: "Sub"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub_1/x"
  input: "beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/truediv"
  op: "Div"
  input: "Adam/update_linear/size_bucketized/weights/part_0/mul"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub_2"
  op: "Sub"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub_2/x"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/mul_1"
  op: "Mul"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/Reshape"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/size_bucketized/weights/part_0/Adam/read"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/Assign"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0/Adam"
  input: "Adam/update_linear/size_bucketized/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "Adam/update_linear/size_bucketized/weights/part_0/Assign"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/Reshape_1"
  input: "Adam/update_linear/size_bucketized/weights/part_0/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/mul_3"
  op: "Mul"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/Reshape"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub_3"
  op: "Sub"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub_3/x"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/mul_4"
  op: "Mul"
  input: "Adam/update_linear/size_bucketized/weights/part_0/mul_3"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/size_bucketized/weights/part_0/Adam_1/read"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0/Adam_1"
  input: "Adam/update_linear/size_bucketized/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "Adam/update_linear/size_bucketized/weights/part_0/Assign_1"
  input: "gradients_1/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_grad/Reshape_1"
  input: "Adam/update_linear/size_bucketized/weights/part_0/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/mul_6"
  op: "Mul"
  input: "Adam/update_linear/size_bucketized/weights/part_0/truediv"
  input: "Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/add"
  op: "Add"
  input: "Adam/update_linear/size_bucketized/weights/part_0/Sqrt_1"
  input: "Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/truediv_1"
  op: "Div"
  input: "Adam/update_linear/size_bucketized/weights/part_0/mul_6"
  input: "Adam/update_linear/size_bucketized/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/size_bucketized/weights/part_0"
  input: "Adam/update_linear/size_bucketized/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  op: "NoOp"
  input: "^Adam/update_linear/size_bucketized/weights/part_0/AssignSub"
  input: "^Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd"
  input: "^Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
}
node {
  name: "Adam/update_linear/bathroom/weight/part_0/Cast_2"
  op: "Cast"
  input: "Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bathroom/weight/part_0"
  input: "linear/bathroom/weight/part_0/Adam"
  input: "linear/bathroom/weight/part_0/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/update_linear/bathroom/weight/part_0/Cast_2"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/linear/linear/bathroom/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/bedroom/weight/part_0/Cast_2"
  op: "Cast"
  input: "Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bedroom/weight/part_0"
  input: "linear/bedroom/weight/part_0/Adam"
  input: "linear/bedroom/weight/part_0/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/update_linear/bedroom/weight/part_0/Cast_2"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/linear/linear/bedroom/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/Cast_2"
  op: "Cast"
  input: "Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub"
  op: "Sub"
  input: "Adam/update_linear/property_type/weights/part_0/sub/x"
  input: "beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "Adam/update_linear/property_type/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/mul"
  op: "Mul"
  input: "Adam/update_linear/property_type/weights/part_0/Cast_2"
  input: "Adam/update_linear/property_type/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub_1"
  op: "Sub"
  input: "Adam/update_linear/property_type/weights/part_0/sub_1/x"
  input: "beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/truediv"
  op: "Div"
  input: "Adam/update_linear/property_type/weights/part_0/mul"
  input: "Adam/update_linear/property_type/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub_2"
  op: "Sub"
  input: "Adam/update_linear/property_type/weights/part_0/sub_2/x"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/mul_1"
  op: "Mul"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/Reshape"
  input: "Adam/update_linear/property_type/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/property_type/weights/part_0/Adam/read"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/Assign"
  op: "Assign"
  input: "linear/property_type/weights/part_0/Adam"
  input: "Adam/update_linear/property_type/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "Adam/update_linear/property_type/weights/part_0/Assign"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/Reshape_1"
  input: "Adam/update_linear/property_type/weights/part_0/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/mul_3"
  op: "Mul"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/Reshape"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub_3"
  op: "Sub"
  input: "Adam/update_linear/property_type/weights/part_0/sub_3/x"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/mul_4"
  op: "Mul"
  input: "Adam/update_linear/property_type/weights/part_0/mul_3"
  input: "Adam/update_linear/property_type/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/property_type/weights/part_0/Adam_1/read"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/property_type/weights/part_0/Adam_1"
  input: "Adam/update_linear/property_type/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "Adam/update_linear/property_type/weights/part_0/Assign_1"
  input: "gradients_1/linear/linear/property_type/property_type_weights/embedding_lookup_grad/Reshape_1"
  input: "Adam/update_linear/property_type/weights/part_0/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "Adam/update_linear/property_type/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/mul_6"
  op: "Mul"
  input: "Adam/update_linear/property_type/weights/part_0/truediv"
  input: "Adam/update_linear/property_type/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/add"
  op: "Add"
  input: "Adam/update_linear/property_type/weights/part_0/Sqrt_1"
  input: "Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/truediv_1"
  op: "Div"
  input: "Adam/update_linear/property_type/weights/part_0/mul_6"
  input: "Adam/update_linear/property_type/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/property_type/weights/part_0"
  input: "Adam/update_linear/property_type/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/group_deps"
  op: "NoOp"
  input: "^Adam/update_linear/property_type/weights/part_0/AssignSub"
  input: "^Adam/update_linear/property_type/weights/part_0/ScatterAdd"
  input: "^Adam/update_linear/property_type/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/Cast_2"
  op: "Cast"
  input: "Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/sub"
  op: "Sub"
  input: "Adam/update_linear/zipcode/weights/part_0/sub/x"
  input: "beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "Adam/update_linear/zipcode/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/mul"
  op: "Mul"
  input: "Adam/update_linear/zipcode/weights/part_0/Cast_2"
  input: "Adam/update_linear/zipcode/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/sub_1"
  op: "Sub"
  input: "Adam/update_linear/zipcode/weights/part_0/sub_1/x"
  input: "beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/truediv"
  op: "Div"
  input: "Adam/update_linear/zipcode/weights/part_0/mul"
  input: "Adam/update_linear/zipcode/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/sub_2"
  op: "Sub"
  input: "Adam/update_linear/zipcode/weights/part_0/sub_2/x"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/mul_1"
  op: "Mul"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/Reshape"
  input: "Adam/update_linear/zipcode/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/zipcode/weights/part_0/Adam/read"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/Assign"
  op: "Assign"
  input: "linear/zipcode/weights/part_0/Adam"
  input: "Adam/update_linear/zipcode/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "Adam/update_linear/zipcode/weights/part_0/Assign"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/Reshape_1"
  input: "Adam/update_linear/zipcode/weights/part_0/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/mul_3"
  op: "Mul"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/Reshape"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/sub_3"
  op: "Sub"
  input: "Adam/update_linear/zipcode/weights/part_0/sub_3/x"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/mul_4"
  op: "Mul"
  input: "Adam/update_linear/zipcode/weights/part_0/mul_3"
  input: "Adam/update_linear/zipcode/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/zipcode/weights/part_0/Adam_1/read"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/zipcode/weights/part_0/Adam_1"
  input: "Adam/update_linear/zipcode/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "Adam/update_linear/zipcode/weights/part_0/Assign_1"
  input: "gradients_1/linear/linear/zipcode/zipcode_weights/embedding_lookup_grad/Reshape_1"
  input: "Adam/update_linear/zipcode/weights/part_0/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "Adam/update_linear/zipcode/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/mul_6"
  op: "Mul"
  input: "Adam/update_linear/zipcode/weights/part_0/truediv"
  input: "Adam/update_linear/zipcode/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/add"
  op: "Add"
  input: "Adam/update_linear/zipcode/weights/part_0/Sqrt_1"
  input: "Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/truediv_1"
  op: "Div"
  input: "Adam/update_linear/zipcode/weights/part_0/mul_6"
  input: "Adam/update_linear/zipcode/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/zipcode/weights/part_0"
  input: "Adam/update_linear/zipcode/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/zipcode/weights/part_0/group_deps"
  op: "NoOp"
  input: "^Adam/update_linear/zipcode/weights/part_0/AssignSub"
  input: "^Adam/update_linear/zipcode/weights/part_0/ScatterAdd"
  input: "^Adam/update_linear/zipcode/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
}
node {
  name: "Adam/update_linear/bias_weight/part_0/Cast_2"
  op: "Cast"
  input: "Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/bias_weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bias_weight/part_0"
  input: "linear/bias_weight/part_0/Adam"
  input: "linear/bias_weight/part_0/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/update_linear/bias_weight/part_0/Cast_2"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/linear/linear/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  input: "^Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/property_type/weights/part_0/group_deps"
  input: "^Adam/update_linear/zipcode/weights/part_0/group_deps"
  input: "^Adam/update_linear/bias_weight/part_0/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  input: "^Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/property_type/weights/part_0/group_deps"
  input: "^Adam/update_linear/zipcode/weights/part_0/group_deps"
  input: "^Adam/update_linear/bias_weight/part_0/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam"
  op: "NoOp"
  input: "^Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  input: "^Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/property_type/weights/part_0/group_deps"
  input: "^Adam/update_linear/zipcode/weights/part_0/group_deps"
  input: "^Adam/update_linear/bias_weight/part_0/ApplyAdam"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
}
node {
  name: "AssignAdd/value"
  op: "Const"
  input: "^Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "AssignAdd"
  op: "AssignAdd"
  input: "global_step"
  input: "AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^linear/size_bucketized/weights/part_0/Assign"
  input: "^linear/bathroom/weight/part_0/Assign"
  input: "^linear/bedroom/weight/part_0/Assign"
  input: "^linear/property_type/weights/part_0/Assign"
  input: "^linear/zipcode/weights/part_0/Assign"
  input: "^linear/bias_weight/part_0/Assign"
  input: "^centered_bias_weight/Assign"
  input: "^centered_bias_weight/Adagrad/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^linear/size_bucketized/weights/part_0/Adam/Assign"
  input: "^linear/size_bucketized/weights/part_0/Adam_1/Assign"
  input: "^linear/bathroom/weight/part_0/Adam/Assign"
  input: "^linear/bathroom/weight/part_0/Adam_1/Assign"
  input: "^linear/bedroom/weight/part_0/Adam/Assign"
  input: "^linear/bedroom/weight/part_0/Adam_1/Assign"
  input: "^linear/property_type/weights/part_0/Adam/Assign"
  input: "^linear/property_type/weights/part_0/Adam_1/Assign"
  input: "^linear/zipcode/weights/part_0/Adam/Assign"
  input: "^linear/zipcode/weights/part_0/Adam_1/Assign"
  input: "^linear/bias_weight/part_0/Adam/Assign"
  input: "^linear/bias_weight/part_0/Adam_1/Assign"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "linear/size_bucketized/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "linear/bathroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "linear/bedroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "linear/property_type/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "linear/zipcode/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "centered_bias_weight"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "centered_bias_weight/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "linear/size_bucketized/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "linear/size_bucketized/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "linear/bathroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "linear/bathroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "linear/bedroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "linear/bedroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "linear/property_type/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "linear/property_type/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "linear/zipcode/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "linear/zipcode/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/pack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  attr {
    key: "N"
    value {
      i: 23
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/pack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: "global_step"
        string_val: "linear/size_bucketized/weights/part_0"
        string_val: "linear/bathroom/weight/part_0"
        string_val: "linear/bedroom/weight/part_0"
        string_val: "linear/property_type/weights/part_0"
        string_val: "linear/zipcode/weights/part_0"
        string_val: "linear/bias_weight/part_0"
        string_val: "centered_bias_weight"
        string_val: "centered_bias_weight/Adagrad"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "linear/size_bucketized/weights/part_0/Adam"
        string_val: "linear/size_bucketized/weights/part_0/Adam_1"
        string_val: "linear/bathroom/weight/part_0/Adam"
        string_val: "linear/bathroom/weight/part_0/Adam_1"
        string_val: "linear/bedroom/weight/part_0/Adam"
        string_val: "linear/bedroom/weight/part_0/Adam_1"
        string_val: "linear/property_type/weights/part_0/Adam"
        string_val: "linear/property_type/weights/part_0/Adam_1"
        string_val: "linear/zipcode/weights/part_0/Adam"
        string_val: "linear/zipcode/weights/part_0/Adam_1"
        string_val: "linear/bias_weight/part_0/Adam"
        string_val: "linear/bias_weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 23
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "Concat"
  input: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "ScalarSummary"
  input: "ScalarSummary_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/Const"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "centered_bias_weight"
        string_val: "centered_bias_weight/Adagrad"
        string_val: "global_step"
        string_val: "linear/bathroom/weight"
        string_val: "linear/bathroom/weight/Adam"
        string_val: "linear/bathroom/weight/Adam_1"
        string_val: "linear/bedroom/weight"
        string_val: "linear/bedroom/weight/Adam"
        string_val: "linear/bedroom/weight/Adam_1"
        string_val: "linear/bias_weight"
        string_val: "linear/bias_weight/Adam"
        string_val: "linear/bias_weight/Adam_1"
        string_val: "linear/property_type/weights"
        string_val: "linear/property_type/weights/Adam"
        string_val: "linear/property_type/weights/Adam_1"
        string_val: "linear/size_bucketized/weights"
        string_val: "linear/size_bucketized/weights/Adam"
        string_val: "linear/size_bucketized/weights/Adam_1"
        string_val: "linear/zipcode/weights"
        string_val: "linear/zipcode/weights/Adam"
        string_val: "linear/zipcode/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "100 1 0,100:0,1"
        string_val: "100 1 0,100:0,1"
        string_val: "100 1 0,100:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "1000 1 0,1000:0,1"
        string_val: "1000 1 0,1000:0,1"
        string_val: "1000 1 0,1000:0,1"
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/ShardedFilename"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "centered_bias_weight"
  input: "centered_bias_weight/Adagrad"
  input: "global_step"
  input: "linear/bathroom/weight/part_0/read"
  input: "linear/bathroom/weight/part_0/Adam/read"
  input: "linear/bathroom/weight/part_0/Adam_1/read"
  input: "linear/bedroom/weight/part_0/read"
  input: "linear/bedroom/weight/part_0/Adam/read"
  input: "linear/bedroom/weight/part_0/Adam_1/read"
  input: "linear/bias_weight/part_0/read"
  input: "linear/bias_weight/part_0/Adam/read"
  input: "linear/bias_weight/part_0/Adam_1/read"
  input: "linear/property_type/weights/part_0/read"
  input: "linear/property_type/weights/part_0/Adam/read"
  input: "linear/property_type/weights/part_0/Adam_1/read"
  input: "linear/size_bucketized/weights/part_0/read"
  input: "linear/size_bucketized/weights/part_0/Adam/read"
  input: "linear/size_bucketized/weights/part_0/Adam_1/read"
  input: "linear/zipcode/weights/part_0/read"
  input: "linear/zipcode/weights/part_0/Adam/read"
  input: "linear/zipcode/weights/part_0/Adam_1/read"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/ShardedFilespec"
  op: "ShardedFilespec"
  input: "save/Const"
  input: "save/num_shards"
  input: "^save/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "centered_bias_weight"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "centered_bias_weight"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "centered_bias_weight/Adagrad"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "centered_bias_weight/Adagrad"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@centered_bias_weight"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/bathroom/weight"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "linear/bathroom/weight/part_0"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/bathroom/weight/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "linear/bathroom/weight/part_0/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/bathroom/weight/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "linear/bathroom/weight/part_0/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/bedroom/weight"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "linear/bedroom/weight/part_0"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/bedroom/weight/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "linear/bedroom/weight/part_0/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/bedroom/weight/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "linear/bedroom/weight/part_0/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/bias_weight"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "linear/bias_weight/part_0"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/bias_weight/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "linear/bias_weight/part_0/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/bias_weight/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "linear/bias_weight/part_0/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/property_type/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "100 1 0,100:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "linear/property_type/weights/part_0"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/property_type/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "100 1 0,100:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "linear/property_type/weights/part_0/Adam"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/property_type/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "100 1 0,100:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear/property_type/weights/part_0/Adam_1"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/size_bucketized/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/size_bucketized/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0/Adam"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/size_bucketized/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0/Adam_1"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/zipcode/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1000 1 0,1000:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear/zipcode/weights/part_0"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/zipcode/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1000 1 0,1000:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear/zipcode/weights/part_0/Adam"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_22/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/zipcode/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_22/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1000 1 0,1000:0,1"
      }
    }
  }
}
node {
  name: "save/restore_slice_22"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_22/tensor_name"
  input: "save/restore_slice_22/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "linear/zipcode/weights/part_0/Adam_1"
  input: "save/restore_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zipcode/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 15
}
